content
"(['micktwomey/pyiso8601', 'Name already in use'], ['\n        ISO8601 formatted datetime parser for python\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'Simple module to parse ISO 8601 dates', 'pip install iso8601', 'Documentation: ', 'PyPI: ', 'Source: ', 'This module parses the most common forms of ISO 8601 date strings (e.g. 2007-01-14T20:34:22+00:00) into datetime objects.', 'See the LICENSE file for the license this package is released under.', 'If you want more full featured parsing look at:', 'You can parse full date + times, or just the date. In both cases a datetime instance is returned but with missing times defaulting to 0, and missing days / months defaulting to 1.', 'Known differences from the ISO 8601 spec:', ""Note that you need all the pythons installed to perform a tox run (see below). pyenv helps hugely, use pyenv install for the versions you need then use 'pyenv local version ...' to link them in (the tox-pyenv plugin will pick them up)."", 'Alternatively, to test only with your current python:', 'Tested against:', 'Python 3 versions < 3.7 are untested but should work.', '\n      ISO8601 formatted datetime parser for python\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', ' - arrow', ' - pendulum', ' - python-dateutil', ' - Yes, Python 3 has built in parsing too!', 'YYYY-MM-DD', 'YYYYMMDD', 'YYYY-MM (defaults to 1 for the day)', 'YYYY (defaults to 1 for month and day)', 'hh:mm:ss.nn', 'hhmmss.nn', 'hh:mm (defaults to 0 for seconds)', 'hhmm (defaults to 0 for seconds)', 'hh (defaults to 0 for minutes and seconds)', 'Nothing, will use the default timezone given (which in turn defaults to UTC).', 'Z (UTC)', '+/-hh:mm', '+/-hhmm', '+/-hh', 'You can use a "" "" (space) instead of T for separating date from time.', 'Days and months without a leading 0 (2 vs 02) will be parsed.', 'If time zone information is omitted the default time zone given is used (which in turn defaults to UTC). Use a default of None to yield naive datetime instances.', ' - simple overview', ' - more detailed enumeration of valid formats.', 'poetry install', 'poetry run nox', 'poetry install', 'pytest', 'Ensure there is a new version committed to main (use poetry version <action> to bump).', 'Ensure README.rst changelog is up to date.', 'Note new and previous version.', 'rm -rf dist', 'poetry build', 'git log --oneline $LAST_VERSION..@ > git_log.txt', 'gh release create --notes-file git_log.txt --title ', '(poetry version -s) dist/*', 'poetry publish', 'Python 3.7', 'Python 3.8', 'Python 3.9', 'Python 3.10', 'Python 3.11', 'PyPy 3', 'Drop Python 3.6 support (3.6 is end of life)', 'Freshen up README', 'Fix test_fixedoffset_eq by adding an actual assertion', 'Add is_iso8601 function for validating that a string matches an ISO 8601 format (thanks to David Baumgold (', ') for ', ')', 'Add Python 3.11 to the test mix', 'Add missing __all__ in __init__.py. Addresses ', ' (thanks to Alex Gaynor for reporting)', 'Add missing py.typed file (as per PEP 561), keeps mypy happy :D', 'Drop python < 3.6 support', 'Add type annotations to code', 'Remove external type annotations in pyi', 'Switch to poetry for packaging', 'Simplify internals and remove old compatability code', 'Switch to nox for testing', 'Lots of small project development changes', 'Include docs/ into sdist tarball (thanks to kloczek in ', ')', 'Include .pyi files in built wheels and source tarballs', 'Add GitHub build actions for project', 'Add project URLs in setup.py (thanks to Steve Piercy)', 'Update README links (thanks to Steve Piercy)', 'Fix handling of README in setup.py (encoding fun in 3.5, 3.6 and pypy3)', 'Fix README links (thanks to Chris Barker)', 'Add Python 3.9 to test matrix (thanks to Luciano Mammino)', 'Add type hints (thanks to Brett Cannon)', 'Derive ParseError from ValueError (thanks to Lex Robinson)', 'Move to GitHub (', '). Thanks go to Martin HÃ¤cker for pointing out the bitbucket project had been deleted by Atlassian!', 'Remove python 2.6, 3.2, 3.3 and 3.4 from tests', 'Add python 3.7 and 3.8 to tests', 'Fix class reference for iso8601.Utc in module docstring (thanks to felixschwarz in ', ')', 'Remove logging (thanks to Quentin Pradet in ', ')', 'Add support for , as separator for fractional part (thanks to ecksun in ', ')', 'Add Python 3.4 and 3.5 to tox test config.', 'Add PyPy 3 to tox test config.', 'Link to documentation at ', 'Fixes ', ' (thanks to Kevin Gill for reporting)', 'Adds YYYY as a valid date (uses 1 for both month and day)', 'Woo, semantic versioning, .10 at last.', 'Lots of fixes tightening up parsing from jdanjou. In particular more invalid cases are treated as errors. Also includes fixes for tests (which is how these invalid cases got in in the first place).', 'Release addresses ', ""Remove +/- chars from README.rst and ensure tox tests run using LC_ALL=C. The setup.py egg_info command was failing in python 3.* on some setups (basically any where the system encoding wasn't UTF-8). ("", ') (thanks to klmitch)', 'Fix parsing of microseconds (', ') (Thanks to dims and bnemec)', 'Correct negative timezone offsets (', ') (thanks to Jonathan Lange)', ""Wow, it's alive! First update since 2007"", 'Moved over to ', 'Add support for python 3. ', ' (thanks to zefciu)', 'Switched to py.test and tox for testing', 'Make seconds optional in date format (""1997-07-16T19:20+01:00"" now valid). ', ' (thanks to Chris Down)', 'Correctly raise ParseError for more invalid inputs (', ') (thanks to manish.tomar)', 'Support more variations of ISO 8601 dates, times and time zone specs.', 'Fix microsecond rounding issues (', ') (thanks to ', ')', 'Fix pickling and deepcopy of returned datetime objects (', ') (thanks to fogathmann and ', ')', 'Fix timezone offsets without a separator (', ') (thanks to joe.walton.gglcd)', '""Z"" produces default timezone if one is specified (', "") (thanks to vfaronov). This one may cause problems if you've been relying on default_timezone to use that timezone instead of UTC. Strictly speaking that was wrong but this is potentially backwards incompatible."", 'Handle compact date format (', ') (thanks to ', ')', ""The default_timezone argument wasn't being passed through correctly, UTC was being used in every case. Fixes issue 10."", 'Fixed the microsecond handling, the generated microsecond values were way too small. Fixes issue 9.', 'Adding ParseError to __all__ in iso8601 module, allows people to import it. Addresses issue 7.', 'Be a little more flexible when dealing with dates without leading zeroes. This violates the spec a little, but handles more dates as seen in the field. Addresses issue 6.', 'Allow date/time separators other than T.', 'When parsing dates without a timezone the specified default is used. If no default is specified then UTC is used. Addresses issue 4.', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    '])"
content
"(['micktwomey/pyiso8601', 'Name already in use'], ['\n        ISO8601 formatted datetime parser for python\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'Simple module to parse ISO 8601 dates', 'pip install iso8601', 'Documentation: ', 'PyPI: ', 'Source: ', 'This module parses the most common forms of ISO 8601 date strings (e.g. 2007-01-14T20:34:22+00:00) into datetime objects.', 'See the LICENSE file for the license this package is released under.', 'If you want more full featured parsing look at:', 'You can parse full date + times, or just the date. In both cases a datetime instance is returned but with missing times defaulting to 0, and missing days / months defaulting to 1.', 'Known differences from the ISO 8601 spec:', ""Note that you need all the pythons installed to perform a tox run (see below). pyenv helps hugely, use pyenv install for the versions you need then use 'pyenv local version ...' to link them in (the tox-pyenv plugin will pick them up)."", 'Alternatively, to test only with your current python:', 'Tested against:', 'Python 3 versions < 3.7 are untested but should work.', '\n      ISO8601 formatted datetime parser for python\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', ' - arrow', ' - pendulum', ' - python-dateutil', ' - Yes, Python 3 has built in parsing too!', 'YYYY-MM-DD', 'YYYYMMDD', 'YYYY-MM (defaults to 1 for the day)', 'YYYY (defaults to 1 for month and day)', 'hh:mm:ss.nn', 'hhmmss.nn', 'hh:mm (defaults to 0 for seconds)', 'hhmm (defaults to 0 for seconds)', 'hh (defaults to 0 for minutes and seconds)', 'Nothing, will use the default timezone given (which in turn defaults to UTC).', 'Z (UTC)', '+/-hh:mm', '+/-hhmm', '+/-hh', 'You can use a "" "" (space) instead of T for separating date from time.', 'Days and months without a leading 0 (2 vs 02) will be parsed.', 'If time zone information is omitted the default time zone given is used (which in turn defaults to UTC). Use a default of None to yield naive datetime instances.', ' - simple overview', ' - more detailed enumeration of valid formats.', 'poetry install', 'poetry run nox', 'poetry install', 'pytest', 'Ensure there is a new version committed to main (use poetry version <action> to bump).', 'Ensure README.rst changelog is up to date.', 'Note new and previous version.', 'rm -rf dist', 'poetry build', 'git log --oneline $LAST_VERSION..@ > git_log.txt', 'gh release create --notes-file git_log.txt --title ', '(poetry version -s) dist/*', 'poetry publish', 'Python 3.7', 'Python 3.8', 'Python 3.9', 'Python 3.10', 'Python 3.11', 'PyPy 3', 'Drop Python 3.6 support (3.6 is end of life)', 'Freshen up README', 'Fix test_fixedoffset_eq by adding an actual assertion', 'Add is_iso8601 function for validating that a string matches an ISO 8601 format (thanks to David Baumgold (', ') for ', ')', 'Add Python 3.11 to the test mix', 'Add missing __all__ in __init__.py. Addresses ', ' (thanks to Alex Gaynor for reporting)', 'Add missing py.typed file (as per PEP 561), keeps mypy happy :D', 'Drop python < 3.6 support', 'Add type annotations to code', 'Remove external type annotations in pyi', 'Switch to poetry for packaging', 'Simplify internals and remove old compatability code', 'Switch to nox for testing', 'Lots of small project development changes', 'Include docs/ into sdist tarball (thanks to kloczek in ', ')', 'Include .pyi files in built wheels and source tarballs', 'Add GitHub build actions for project', 'Add project URLs in setup.py (thanks to Steve Piercy)', 'Update README links (thanks to Steve Piercy)', 'Fix handling of README in setup.py (encoding fun in 3.5, 3.6 and pypy3)', 'Fix README links (thanks to Chris Barker)', 'Add Python 3.9 to test matrix (thanks to Luciano Mammino)', 'Add type hints (thanks to Brett Cannon)', 'Derive ParseError from ValueError (thanks to Lex Robinson)', 'Move to GitHub (', '). Thanks go to Martin HÃ¤cker for pointing out the bitbucket project had been deleted by Atlassian!', 'Remove python 2.6, 3.2, 3.3 and 3.4 from tests', 'Add python 3.7 and 3.8 to tests', 'Fix class reference for iso8601.Utc in module docstring (thanks to felixschwarz in ', ')', 'Remove logging (thanks to Quentin Pradet in ', ')', 'Add support for , as separator for fractional part (thanks to ecksun in ', ')', 'Add Python 3.4 and 3.5 to tox test config.', 'Add PyPy 3 to tox test config.', 'Link to documentation at ', 'Fixes ', ' (thanks to Kevin Gill for reporting)', 'Adds YYYY as a valid date (uses 1 for both month and day)', 'Woo, semantic versioning, .10 at last.', 'Lots of fixes tightening up parsing from jdanjou. In particular more invalid cases are treated as errors. Also includes fixes for tests (which is how these invalid cases got in in the first place).', 'Release addresses ', ""Remove +/- chars from README.rst and ensure tox tests run using LC_ALL=C. The setup.py egg_info command was failing in python 3.* on some setups (basically any where the system encoding wasn't UTF-8). ("", ') (thanks to klmitch)', 'Fix parsing of microseconds (', ') (Thanks to dims and bnemec)', 'Correct negative timezone offsets (', ') (thanks to Jonathan Lange)', ""Wow, it's alive! First update since 2007"", 'Moved over to ', 'Add support for python 3. ', ' (thanks to zefciu)', 'Switched to py.test and tox for testing', 'Make seconds optional in date format (""1997-07-16T19:20+01:00"" now valid). ', ' (thanks to Chris Down)', 'Correctly raise ParseError for more invalid inputs (', ') (thanks to manish.tomar)', 'Support more variations of ISO 8601 dates, times and time zone specs.', 'Fix microsecond rounding issues (', ') (thanks to ', ')', 'Fix pickling and deepcopy of returned datetime objects (', ') (thanks to fogathmann and ', ')', 'Fix timezone offsets without a separator (', ') (thanks to joe.walton.gglcd)', '""Z"" produces default timezone if one is specified (', "") (thanks to vfaronov). This one may cause problems if you've been relying on default_timezone to use that timezone instead of UTC. Strictly speaking that was wrong but this is potentially backwards incompatible."", 'Handle compact date format (', ') (thanks to ', ')', ""The default_timezone argument wasn't being passed through correctly, UTC was being used in every case. Fixes issue 10."", 'Fixed the microsecond handling, the generated microsecond values were way too small. Fixes issue 9.', 'Adding ParseError to __all__ in iso8601 module, allows people to import it. Addresses issue 7.', 'Be a little more flexible when dealing with dates without leading zeroes. This violates the spec a little, but handles more dates as seen in the field. Addresses issue 6.', 'Allow date/time separators other than T.', 'When parsing dates without a timezone the specified default is used. If no default is specified then UTC is used. Addresses issue 4.', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    '])"
