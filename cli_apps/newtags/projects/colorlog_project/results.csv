content
"(['borntyping/python-colorlog', 'Name already in use', 'Log formatting with colors!'], ['\n        A colored formatter for the python logging module\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', '\n', '\n', ""Add colours to the output of Python's "", ' module.', 'colorlog currently requires Python 3.6 or higher. Older versions (below 5.x.x)\nsupport Python 2.6 and above.', ' is included as a required dependency and initialised when using\ncolorlog on Windows.', 'This library is almost a decade old and supported a wide set of Python versions\nfor most of its life, which has made it a difficult library to add new features\nto. colorlog 6 may break backwards compatibility so that newer features\ncan be added more easily, but may still not accept all changes or feature\nrequests. colorlog 4 might accept essential bugfixes but should not be\nconsidered actively maintained and will not accept any major changes or new\nfeatures.', 'Install from PyPI with:', 'Several Linux distributions provide official packages (', ', ', ',\n', ', ', ' and ', '), and others have user provided packages\n(', ', ', ', ', ').', 'The ', ' class takes several arguments:', 'Color escape codes can be selected based on the log records level, by adding\nparameters to the format string:', ""Multiple escape codes can be used at once by joining them with commas when\nconfiguring the color for a log level (but can't be used directly in the format\nstring). For example, "", ' would use the escape codes for black\ntext on a white background.', 'The following escape codes are made available for use in the format string:', 'The available color names are ', ', ', ', ', ', ', ', ', ',\n', ', ', ' and ', '.', 'The following code creates a ', ' for use in a logging setup,\nusing the default values for each argument.', 'Secondary log colors are a way to have more than one color that is selected\nbased on the log level. Each key in ', ' adds an attribute\nthat can be used in format strings (', ' becomes ', '), and\nhas a corresponding value that is identical in format to the ', '\nargument.', 'The following example highlights the level name using the default log colors,\nand highlights the message in red for ', ' and ', ' level log messages.', 'A full example dictionary can be found in ', '.', 'An instance of ColoredFormatter created with those arguments will then be used\nby any handlers that are configured to use the ', ' formatter.', 'A full example configuration can be found in ', '.', 'ColoredFormatter will work with custom log levels added with\n', ':', 'Tests similar to the above examples are found in ', '.', 'colorlog is in maintenance mode. I try and ensure bugfixes are published,\nbut compatibility with Python 2.6+ and Python 3+ makes this a difficult\ncodebase to add features to. Any changes that might break backwards\ncompatibility for existing users will not be considered.', 'There are some more modern libraries for improving Python logging you may\nfind useful.', 'GitHub provides ', '.', 'Some early adopters included ', ', ', ', and ', '.', 'Copyright (c) 2012-2021 Sam Clements ', 'Permission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the ""Software""), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:', 'The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.', 'THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.', '\n      A colored formatter for the python logging module\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'colorlog 6.x requires Python 3.6 or higher.', 'colorlog 5.x is an interim version that will warn Python 2 users to downgrade.', 'colorlog 4.x is the final version supporting Python 2.', ': The format string used to output the message (required).', ': An optional date format passed to the base class. See ', '.', ': Implicitly adds a color reset code to the message output, unless the output already ends with one. Defaults to ', '.', ': A mapping of record level names to color names. The defaults can be found in ', ', or the below example.', ': A mapping of names to ', ' style mappings, defining additional colors that can be used in format strings. See below for an example.', ': Available on Python 3.2 and above. See ', '.', ': Return the color associated with the records level.', ': Return another color based on the records level if the formatter has secondary colors configured (see ', ' below).', ', ', ', ', ': Foreground and background colors.', ', ', ', ', ', ', ': Bold/bright colors.', ', ', ', ', ': Thin colors (terminal dependent).', ': Clear all formatting (both foreground and background colors).', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    '])"
content
"(['borntyping/python-colorlog', 'Name already in use', 'Log formatting with colors!'], ['\n        A colored formatter for the python logging module\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', '\n', '\n', ""Add colours to the output of Python's "", ' module.', 'colorlog currently requires Python 3.6 or higher. Older versions (below 5.x.x)\nsupport Python 2.6 and above.', ' is included as a required dependency and initialised when using\ncolorlog on Windows.', 'This library is almost a decade old and supported a wide set of Python versions\nfor most of its life, which has made it a difficult library to add new features\nto. colorlog 6 may break backwards compatibility so that newer features\ncan be added more easily, but may still not accept all changes or feature\nrequests. colorlog 4 might accept essential bugfixes but should not be\nconsidered actively maintained and will not accept any major changes or new\nfeatures.', 'Install from PyPI with:', 'Several Linux distributions provide official packages (', ', ', ',\n', ', ', ' and ', '), and others have user provided packages\n(', ', ', ', ', ').', 'The ', ' class takes several arguments:', 'Color escape codes can be selected based on the log records level, by adding\nparameters to the format string:', ""Multiple escape codes can be used at once by joining them with commas when\nconfiguring the color for a log level (but can't be used directly in the format\nstring). For example, "", ' would use the escape codes for black\ntext on a white background.', 'The following escape codes are made available for use in the format string:', 'The available color names are ', ', ', ', ', ', ', ', ', ',\n', ', ', ' and ', '.', 'The following code creates a ', ' for use in a logging setup,\nusing the default values for each argument.', 'Secondary log colors are a way to have more than one color that is selected\nbased on the log level. Each key in ', ' adds an attribute\nthat can be used in format strings (', ' becomes ', '), and\nhas a corresponding value that is identical in format to the ', '\nargument.', 'The following example highlights the level name using the default log colors,\nand highlights the message in red for ', ' and ', ' level log messages.', 'A full example dictionary can be found in ', '.', 'An instance of ColoredFormatter created with those arguments will then be used\nby any handlers that are configured to use the ', ' formatter.', 'A full example configuration can be found in ', '.', 'ColoredFormatter will work with custom log levels added with\n', ':', 'Tests similar to the above examples are found in ', '.', 'colorlog is in maintenance mode. I try and ensure bugfixes are published,\nbut compatibility with Python 2.6+ and Python 3+ makes this a difficult\ncodebase to add features to. Any changes that might break backwards\ncompatibility for existing users will not be considered.', 'There are some more modern libraries for improving Python logging you may\nfind useful.', 'GitHub provides ', '.', 'Some early adopters included ', ', ', ', and ', '.', 'Copyright (c) 2012-2021 Sam Clements ', 'Permission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the ""Software""), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:', 'The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.', 'THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.', '\n      A colored formatter for the python logging module\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'colorlog 6.x requires Python 3.6 or higher.', 'colorlog 5.x is an interim version that will warn Python 2 users to downgrade.', 'colorlog 4.x is the final version supporting Python 2.', ': The format string used to output the message (required).', ': An optional date format passed to the base class. See ', '.', ': Implicitly adds a color reset code to the message output, unless the output already ends with one. Defaults to ', '.', ': A mapping of record level names to color names. The defaults can be found in ', ', or the below example.', ': A mapping of names to ', ' style mappings, defining additional colors that can be used in format strings. See below for an example.', ': Available on Python 3.2 and above. See ', '.', ': Return the color associated with the records level.', ': Return another color based on the records level if the formatter has secondary colors configured (see ', ' below).', ', ', ', ', ': Foreground and background colors.', ', ', ', ', ', ', ': Bold/bright colors.', ', ', ', ', ': Thin colors (terminal dependent).', ': Clear all formatting (both foreground and background colors).', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    '])"
