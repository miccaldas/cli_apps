content
"(['SethMMorton/natsort', 'Name already in use', 'natsort', 'comprehend', 'alg', 'how', 'why', 'does', 'always', 'some details omitted for clarity'], ['\n        Simple yet flexible natural sorting in Python.\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'Simple yet flexible natural sorting in Python.', ': Please see the ', ' section for changes.', 'When you try to sort a list of strings that contain numbers, the normal python\nsort algorithm sorts lexicographically, so you might not get the results that\nyou expect:', ""Notice that it has the order ('1', '10', '2') - this is because the list is\nbeing sorted in lexicographical order, which sorts numbers like you would\nletters (i.e. 'b', 'ba', 'c')."", ' provides a function ', ' that helps sort lists\n""naturally"" (""naturally"" is rather ill-defined, but in general it means\nsorting based on meaning and not computer code point).\nUsing ', ' is simple:', ' identifies numbers anywhere in a string and sorts them\nnaturally. Below are some other things you can do with ', '\n(also see the ', ' for a quick start guide, or the\n', ' for complete details).', ': ', ' is designed to be a drop-in replacement for the\nbuilt-in ', ' function. Like ', ', ', '\ndoes not sort in-place. To sort a list and assign the output to the same\nvariable, you must explicitly assign the output to a variable:', 'Please see ', ' for\nan alternate way to sort in-place naturally.', ' does not actually ', ' version numbers.\nIt just so happens that the most common versioning schemes are designed to\nwork with standard natural sorting techniques; these schemes include\n', ', ', ', ', '. If your data\nconforms to a scheme like this, then it will work out-of-the-box with\n', ' (as of ', ' version >= 4.0.0):', 'If you need to versions that use a more complicated scheme, please see\n', '.', 'Prior to ', ' version 7.1.0, it was a common request to be able to\nsort paths like Windows Explorer. As of ', ' 7.1.0, the function\n', ' has been added to provide users the ability to sort\nin the order that their file browser might sort (e.g Windows Explorer on\nWindows, Finder on MacOS, Dolphin/Nautilus/Thunar/etc. on Linux).', 'Output will be different depending on the operating system you are on.', 'For users ', ' on Windows (e.g. MacOS/Linux) it is ', ' recommended\nto also install ', ', which will help\n', "" give results that match most file browsers. If this is not installed,\nit will fall back on Python's built-in "", ' module and will give good\nresults for most input, but will give poor results for special characters.', 'This is useful in scientific data analysis (and was the default behavior\nof ', ' for ', ' version < 4.0.0). Use the ', '\nfunction:', 'This is where the non-numeric characters are also ordered based on their\nmeaning, not on their ordinal value, and a locale-dependent thousands\nseparator and decimal separator is accounted for in the number.\nThis can be achieved with the ', ' function:', 'You may find you need to explicitly set the locale to get this to work\n(as shown in the example). Please see ', ' and the\n', ' section below before using the ', ' function.', 'If you need to combine multiple algorithm modifiers (such as ', ',\n', ', and ', '), you can combine the options using the\nbitwise OR operator (', '). For example,', 'All of the available customizations can be found in the documentation for\n', '.', 'You can also add your own custom transformation functions with the ', '\nargument. These can be used with ', ' if you wish.', 'You can mix and match ', ', ', ', and ', ' types when you sort:', ' does not officially support the ', ' type, but\nconvenience functions are provided that help you decode to ', ' first:', 'Under the hood, ', ' works by generating a custom sorting\nkey using ', ' and then passes that to the built-in\n', '. You can use the ', ' function yourself to\ngenerate a custom sorting key to sort in-place using the ', '\nmethod.', 'All of the algorithm customizations mentioned in the\n', ' section can also be applied to\n', ' through the ', ' keyword option.', 'The best way to debug ', ' is to generate a key using ', '\nwith the same options being passed to ', '. One can take a look at\nexactly what is being done with their input using this key - it is highly\nrecommended to ', ' for ', ' to debug,\nand also to review the ', ' page for ', ' ', ' is\ndoing that to your data.', 'If you are trying to sort custom classes and running into trouble, please\ntake a look at ', '. In short,\ncustom classes are not likely to be sorted correctly if one relies\non the behavior of ', ' and the other rich comparison operators in\ntheir custom class - it is better to use a ', ' function with\n', ', or use the ', ' key as part of your rich comparison\noperator definition.', ""If you don't want to read "", ',\nhere is a quick primer.', ' provides a ', ' that can be passed to ', '\nor ', ' in order to modify the default sorting behavior. This key\nis generated on-demand with the key generator ', '.\n', ' is essentially a wrapper for the following code:', 'Users can further customize ', ' sorting behavior with the ', '\nand/or ', ' options (see details in the ', '\nsection).', 'The key generated by ', ' ', ' returns a ', '. It\ndoes so in the following way (', '):', 'Because a ', ' is always returned, a ', ' should not be common\nunless one tries to do something odd like sort an ', ' against a ', '.', ' comes with a shell script called ', ', or can also be called\nfrom the command line with ', '.  Check out the\n', ' for more details.', ' requires Python 3.7 or greater.', 'The most efficient sorting can occur if you install the\n', ' package\n(version >=2.0.0); it helps with the string to number conversions.\n', ' will still run (efficiently) without the package, but if you need\nto squeeze out that extra juice it is recommended you include this as a\ndependency. ', ' will not require (or check) that\n', ' is installed at installation.', 'It is recommended that you install ', ' if you wish to sort in a\nlocale-dependent manner, see this page on ', ' for an explanation why.', 'Use ', '!', 'If you want to install the ', ', you can use the\n', ' at installation time to install those dependencies as\nwell - use ', ' for ', ' and ', ' for ', '.', 'Please note that ', ' is NOT set-up to support ', '.', 'The recommended way to run tests is with ', '. After installing ', ',\nrunning tests is as simple as executing the following in the ', ' directory:', ' will create virtual a virtual environment for your tests and install\nall the needed testing requirements for you.  You can specify a particular\npython version with the ', ' flag, e.g. ', '. Static analysis\nis done with ', '. You can see all available testing environments\nwith ', '.', 'If you want to build the documentation for ', ', it is recommended to\nuse ', ':', 'This will place the documentation in ', '.', 'In ', ' version 6.0.0, the following APIs and functions were removed', 'In general, if you want to determine if you are using deprecated APIs you\ncan run your code with the following flag', 'By default ', ' are not shown, but this will cause them\nto be shown. Alternatively, you can just set the environment variable\n', ' to ""default::DeprecationWarning"" and then run your code.', 'Seth M. Morton', 'Please visit the changelog ', ' or ', '.', '\n      Simple yet flexible natural sorting in Python.\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'Source Code: ', 'Downloads: ', 'Documentation: ', '\n', 'recursively descend into lists of lists', 'automatic unicode normalization of input data', 'Assume the input is a string, and attempt to split it into numbers and\nnon-numbers using regular expressions. Numbers are then converted into\neither ', ' or ', '.', 'If the above fails because the input is not a string, assume the input\nis some other sequence (e.g. ', ' or ', '), and recursively\napply the key to each element of the sequence.', 'If the above fails because the input is not iterable, assume the input\nis an ', ' or ', ', and just return the input in a ', '.', ' keyword argument (deprecated since 3.4.0)', ' keyword argument (deprecated since 3.4.0)', ' keyword argument (deprecated since 3.4.0)', ' keyword argument (deprecated since 3.4.0)', ' keyword argument (deprecated since 3.4.0)', ' (deprecated since version 5.0.0)', ' (deprecated since version 5.0.0)', ' (deprecated since version 5.0.0)', ' (discouraged since version 4.0.0,\nofficially deprecated since version 5.5.0)', ' (discouraged since version 4.0.0,\nofficially deprecated since version 5.5.0)', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n        ', '\n    '])"
