content
"(['PyCQA/flake8', 'Name already in use'], ['\n        flake8 is a python tool that glues together pycodestyle, pyflakes, mccabe, and third-party plugins to check the style and quality of some python code.\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'Flake8 is a wrapper around these tools:', 'Flake8 runs all the tools by launching the single ', ' command.\nIt displays the warnings in a per-file, merged output.', 'It also adds a few features:', 'files that contain this line are skipped:', 'lines that contain a ', ' comment at the end will not issue warnings.', 'you can ignore specific errors on a line with ', ', e.g.,\n', '. Multiple codes can be given, separated by comma. The ', ' token is case insensitive, the colon before the list of codes is required otherwise the part after ', ' is ignored', 'Git and Mercurial hooks', 'extendable through ', ' and ', ' entry\npoints', 'See our ', ' for how to install\nand get started with Flake8.', 'Flake8 maintains an ', ' in its\ndocumentation.', ""If you have questions you'd like to ask the developers, or feedback you'd like\nto provide, feel free to use the mailing list: "", ""We would love to hear from you. Additionally, if you have a feature you'd like\nto suggest, the mailing list would be the best place for it."", 'Flake8 was created by Tarek Ziad√© and is currently maintained by ', ' and ', '\n      flake8 is a python tool that glues together pycodestyle, pyflakes, mccabe, and third-party plugins to check the style and quality of some python code.\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n        ', '\n      ', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'PyFlakes', 'pycodestyle', ""Ned Batchelder's McCabe script"", '\n', '\n', '\n', '\n', '\n', '\n', '\n              ', '\n              ', '\n            ', '\n          ', '\n          ', '\n        ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n        ', '\n    '])"
