content
"(['uiri/toml', 'Name already in use', 'TOML', 'toml.loads', 'toml.dumps', 'toml.dump', 'LICENSE.txt'], ['\n        Python lib for TOML\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'A Python library for parsing and creating ', '.', 'The module passes ', '.', 'See also:', 'To install the latest release on ', ',\nsimply run:', 'Or to install the latest development version, run:', ' takes in a string containing standard TOML-formatted data and\nreturns a dictionary containing the parsed data.', ' takes a dictionary and returns a string containing the\ncorresponding TOML-formatted data.', ' takes a dictionary and a file descriptor and returns a string containing the\ncorresponding TOML-formatted data.', 'For more functions, view the API Reference below.', 'For Numpy users, by default the data types ', ' will not be translated to floats by toml, but will instead be encoded as strings. To get around this, specify the ', ' when saving your data.', 'Parse a file or a list of files as TOML and return a dictionary.', 'A dictionary (or object ', ') containing parsed TOML data', 'Parse a TOML-formatted string to a dictionary.', 'A dictionary (or object ', ') containing parsed TOML data', 'Write a dictionary to a file containing TOML-formatted data', 'A string containing the TOML-formatted data corresponding to object ', 'Create a TOML-formatted string from an input object', 'A string containing the TOML-formatted data corresponding to object ', 'This project is released under the terms of the MIT Open Source License. View\n', ' for more information.', '\n      Python lib for TOML\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', ': A path to a file, list of filepaths (to be read into single\nobject) or a file descriptor', ': The class of the dictionary object to be returned', ': When ', ' is an invalid type or is a list containing\ninvalid types', ': When an error occurs while decoding the file(s)', ': The TOML-formatted string to be parsed', ': Specifies the class of the returned toml dictionary', ': When a non-string object is passed', ': When an error occurs while decoding the\nTOML-formatted string', ': An object to be converted into TOML', ': A File descriptor where the TOML-formatted output should be stored', ': An instance of ', ' (or subclass) for encoding the object. If ', ', will default to ', ': When anything other than file descriptor is passed', ': An object to be converted into TOML', ': An instance of ', ' (or subclass) for encoding the object. If ', ', will default to ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n        ', '\n    ', '\n        ', '\n    '])"
