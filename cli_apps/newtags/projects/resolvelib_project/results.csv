content
"(['sarugaku/resolvelib', 'Name already in use', 'ResolveLib', 'Specifier'], ['\n        Resolve abstract dependencies into concrete ones \n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'ResolveLib at the highest level provides a ', ' class that includes\ndependency resolution logic. You give it some things, and a little information\non how it should interact with them, and it will spit out a resolution result.', 'The provider interface is specified in ', "". You don't\nneed to inherit anything, however, only need to implement the right methods."", 'The intention of this section is to unify the terms we use when talking about\nthis code base, and packaging in general, to avoid confusion. Class and\nvariable names in the code base should try to stick to terms defined here.', 'Things passed into ', "" and provided by the provider are all\nconsidered opaque. They don't need to adhere to this set of terminologies.\nNothing can go wrong as long as the provider implementers can keep their heads\nstraight."", 'A thing that can be installed. A Package can have one or more versions\navailable for installation.', 'A string, usually in a number form, describing a snapshot of a Package. This\nnumber should increase when a Package posts a new snapshot,\ni.e a higher number means a more up-to-date snapshot.', 'A collection of one or more Versions. This could be a wildcard, indicating that\nany Version is acceptable.', 'A combination of a Package and a Version, i.e. a ""concrete requirement"". Python\npeople sometimes call this a ""locked"" or ""pinned"" dependency. Both of\n""requirement"" and ""dependency"", however, SHOULD NOT be used when describing a\nCandidate, to avoid confusion.', 'Some resolver architectures refer this as a ""specification"", but it is not\nused here to avoid confusion with a ', '.', 'An intention to acquire a needed package, i.e. an ""abstract requirement"". A\n""dependency"", if not clarified otherwise, also refers to this concept.', 'A Requirement should specify two things: a Package, and a Specifier.', 'Please see ', '.', '\n      Resolve abstract dependencies into concrete ones \n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    '])"
