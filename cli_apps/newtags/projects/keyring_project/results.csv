content
"(['jaraco/keyring', 'Name already in use'], ['\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'The Python keyring library provides an easy way to access the\nsystem keyring service from python. It can be used in any\napplication that needs safe password storage.', 'These recommended keyring backends are supported:', 'Other keyring implementations are available through ', '.', 'On Linux, the KWallet backend relies on ', ', which does not always\ninstall correctly when using pip (compilation is needed). For best results,\ninstall dbus-python as a system package.', 'macOS keychain supports macOS 11 (Big Sur) and later requires Python 3.8.7\nor later with the ""universal2"" binary. See\n', ' for details.', 'The basic usage of keyring is pretty simple: just call\n', ' and ', ':', 'Keyring supplies a ', ' command which is installed with the\npackage. After installing keyring in most environments, the\ncommand should be available for setting, getting, and deleting\npasswords. For more usage information, invoke with no arguments\nor with ', ' as so:', 'The command-line functionality is also exposed as an executable\npackage, suitable for invoking from Python like so:', 'If installed via a package manager (apt, pacman, nix, homebrew, etc),\nthese shell completions may already have been distributed with the package\n(no action required).', 'Keyring provides tab completion if the ', ' extra is installed:', 'Then, generate shell completions, something like:', ': the path of /usr/share is mainly for GNU/Linux. For other OSs,\nconsider:', ""After installing the shell completions, enable them following your shell's\nrecommended instructions. e.g.:"", 'The python keyring lib contains implementations for several backends. The\nlibrary will attempt to\nautomatically choose the most suitable backend for the current\nenvironment. Users may also specify the preferred keyring in a\nconfig file or by calling the ', ' function.', 'The configuration is stored in a file named ""keyringrc.cfg""\nfound in a platform-specific location. To determine\nwhere the config file is stored, run the following:', 'Some keyrings also store the keyring data in the file system.\nTo determine where the data files are stored, run:', 'To specify a keyring backend, set the ', ' option to the\nfull path of the class for that backend, such as\n', '.', 'If ', ' is indicated, keyring will add that path to the Python\nmodule search path before loading the backend.', 'For example, this config might be used to load the\n', ' from the ', ' module in\nthe ', ' directory (not implemented):', 'In addition to the backends provided by the core keyring package for\nthe most common and secure use cases, there\nare additional keyring backend implementations available for other\nuse cases. Simply install them to make them available:', 'The interface for the backend is defined by ', '.\nEvery backend should derive from that base class and define a ', '\nattribute and three functions: ', ', ', ', and\n', '. The ', ' function may be defined if\ndesired.', 'See the ', ' module for more detail on the interface of this class.', 'Keyring employs entry points to allow any third-party package to implement\nbackends without any modification to the keyring itself. Those interested in\ncreating new backends are encouraged to create new, third-party packages\nin the ', ' namespace, in a manner modeled by the ', '. See the\n', ' file\nin that project for hints on how to create the requisite entry points.\nBackends that prove essential may be considered for inclusion in the core\nlibrary, although the ease of installing these third-party packages should\nmean that extensions may be readily available.', 'To create an extension for Keyring, please submit a pull request to\nhave your extension mentioned as an available extension.', 'Keyring additionally allows programmatic configuration of the\nbackend calling the api ', '. The indicated backend\nwill subsequently be used to store and retrieve passwords.', 'To invoke ', ':', 'In many cases, uninstalling keyring will never be necessary.\nEspecially on Windows and macOS, the behavior of keyring is\nusually degenerate, meaning it will return empty values to\nthe caller, allowing the caller to fall back to some other\nbehavior.', 'In some cases, the default behavior of keyring is undesirable and\nit would be preferable to disable the keyring behavior altogether.\nThere are several mechanisms to disable keyring:', ""Keyring provides a mechanism to alter the keyring's behavior through\nenvironment variables. Each backend implements a\n"", ', which\nwhen invoked will find all environment variables beginning with\n', ' and will set a property for each\n', ' on the keyring. This method is invoked during\ninitialization for the default/configured keyring.', 'This mechanism may be used to set some useful values on various\nkeyrings, including:', 'The following is a complete transcript for installing keyring in a\nvirtual environment on Ubuntu 16.04.  No config file was used:', 'It is possible to use the SecretService backend on Linux systems without\nX11 server available (only D-Bus is required). In this case:', 'Install the ', ' daemon.', 'Start a D-Bus session, e.g. run ', ' and run\nthe following commands inside that shell.', 'Run ', ' with ', ' option. The description of\nthat option says:', 'Read a password from stdin, and use it to unlock the login keyring\nor create it if the login keyring does not exist.', 'When that command is started, enter a password into stdin and\npress Ctrl+D (end of data). After that, the daemon will fork into\nthe background (use ', ' option to block).', 'Now you can use the SecretService backend of Keyring. Remember to\nrun your application in the same D-Bus session as the daemon.', ""It is possible to use keyring with the SecretService backend in Docker containers as well.\nAll you need to do is install the necessary dependencies and add the --privileged flag\nto avoid any Operation not permitted errors when attempting to unlock the system's keyring."", 'The following is a complete transcript for installing keyring on a Ubuntu 18:04 container:', 'The keyring lib has a few functions:', 'In all cases, the parameters (', ', ', ', ', ')\nshould be Unicode text.', 'The keyring lib raises the following exceptions:', 'Python keyring lib is an open community project and eagerly\nwelcomes contributors.', 'Available as part of the Tidelift Subscription.', 'This project and the maintainers of thousands of other packages are working with Tidelift to deliver one enterprise subscription that covers all of the open source you use.', '.', 'To report a security vulnerability, please use the\n', '.\nTidelift will coordinate the fix and disclosure.', 'Each built-in backend may have security considerations to understand\nbefore using this library. Authors of tools or libraries utilizing\n', ' are encouraged to consider these concerns.', 'As with any list of known security concerns, this list is not exhaustive.\nAdditional issues can be added as needed.', 'This project makes use of automated releases and continuous\nintegration. The\nsimple workflow is to tag a commit and push it to Github. If it\npasses tests in CI, it will be automatically deployed to PyPI.', 'Other things to consider when making a release:', 'Tests are continuously run in Github Actions.', 'To run the tests locally, install and invoke\n', '.', ""The project was based on Tarek Ziade's idea in "", '. Kang Zhang\ninitially carried it out as a ', ' project, and Tarek\nmentored Kang on this project.', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n        ', '\n      ', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'macOS ', 'Freedesktop ', ' supports many DE including\nGNOME (requires ', ')', 'KDE4 & KDE5 ', '\n(requires ', ')', 'macOS (Homebrew x86): /usr/local/share', 'macOS (Homebrew ARM): /opt/homebrew/share', 'Android (Termux): /data/data/com.termux/files/usr/share', 'Windows (mingw64 of msys2): /mingw64/share', '...', 'bash: install ', ',\nand ensure ', ' in ', '.', 'zsh: ensure ', ' appears in ', ',\nthen ', ' to verify keyring appears, indicating\nit was installed correctly.', '\n- Encrypted text file storage.', ' - a\npure Python backend using the secret service DBus API for desktop\nLinux.', ' - ""alternate"",\npossibly-insecure backends, originally part of the core package, but\navailable for opt-in.', '\n- a backend that stores secrets in a Google Sheet. For use with\n', '.', '\n- a backend that stores secrets in the ', '\npassword manager.', "" - an encryption\nbackend which uses the ssh agent protocol's signature operation to\nderive the cipher key."", '\n- OSX keychain key-management, for private, public, and symmetric keys.', 'Uninstall keyring. Most applications are tolerant to keyring\nnot being installed. Uninstalling keyring should cause those\napplications to fall back to the behavior without keyring.\nThis approach affects the Python environment where keyring\nwould otherwise have been installed.', 'Configure the Null keyring in the environment. Set\n', '\nin the environment, and the ', ' (degenerate) backend\nwill be used. This approach affects all uses of Keyring where\nthat variable is set.', 'Permanently configure the Null keyring for the user by running\n', ' or ', '.\nThis approach affects all uses of keyring for that user.', 'keychain; macOS, path to an alternate keychain file', 'appid; Linux/SecretService, alternate ID for the application', '\n', '\n', '\n', '\n', '\n', '\n', ': Return the currently-loaded keyring implementation.', ': Returns the password stored in the\nactive keyring. If the password does not exist, it will return None.', ': Return a credential object stored\nin the active keyring. This object contains at least ', ' and\n', ' attributes for the specified service, where the returned\n', ' may be different from the argument.', ': Store the password in the\nkeyring.', ': Delete the password stored in\nkeyring. If the password does not exist, it will raise an exception.', ': Base Error class for all exceptions in keyring lib.', ': Raised when the keyring cannot be initialized.', ': Raised when the password cannot be set in the keyring.', ': Raised when the password cannot be deleted in the keyring.', 'Repository: ', 'Bug Tracker: ', 'Mailing list: ', 'Any Python script or application can access secrets created by\n', ' from that same Python executable without the operating\nsystem prompting the user for a password. To cause any specific\nsecret to prompt for a password every time it is accessed, locate\nthe credential using the ', ' application, and in\nthe ', ' settings, remove ', ' from the list\nof allowed applications.', '\n', 'No analysis has been performed', '\n', 'No analysis has been performed', '\n', 'No analysis has been performed', '\n', 'Check that the changelog is current for the intended release.', '\n              ', '\n              ', '\n            ', '\n          ', '\n          ', '\n        ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n        ', '\n    ', '\n      ', '\n    '])"
content
"(['jaraco/keyring', 'Name already in use'], ['\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'The Python keyring library provides an easy way to access the\nsystem keyring service from python. It can be used in any\napplication that needs safe password storage.', 'These recommended keyring backends are supported:', 'Other keyring implementations are available through ', '.', 'On Linux, the KWallet backend relies on ', ', which does not always\ninstall correctly when using pip (compilation is needed). For best results,\ninstall dbus-python as a system package.', 'macOS keychain supports macOS 11 (Big Sur) and later requires Python 3.8.7\nor later with the ""universal2"" binary. See\n', ' for details.', 'The basic usage of keyring is pretty simple: just call\n', ' and ', ':', 'Keyring supplies a ', ' command which is installed with the\npackage. After installing keyring in most environments, the\ncommand should be available for setting, getting, and deleting\npasswords. For more usage information, invoke with no arguments\nor with ', ' as so:', 'The command-line functionality is also exposed as an executable\npackage, suitable for invoking from Python like so:', 'If installed via a package manager (apt, pacman, nix, homebrew, etc),\nthese shell completions may already have been distributed with the package\n(no action required).', 'Keyring provides tab completion if the ', ' extra is installed:', 'Then, generate shell completions, something like:', ': the path of /usr/share is mainly for GNU/Linux. For other OSs,\nconsider:', ""After installing the shell completions, enable them following your shell's\nrecommended instructions. e.g.:"", 'The python keyring lib contains implementations for several backends. The\nlibrary will attempt to\nautomatically choose the most suitable backend for the current\nenvironment. Users may also specify the preferred keyring in a\nconfig file or by calling the ', ' function.', 'The configuration is stored in a file named ""keyringrc.cfg""\nfound in a platform-specific location. To determine\nwhere the config file is stored, run the following:', 'Some keyrings also store the keyring data in the file system.\nTo determine where the data files are stored, run:', 'To specify a keyring backend, set the ', ' option to the\nfull path of the class for that backend, such as\n', '.', 'If ', ' is indicated, keyring will add that path to the Python\nmodule search path before loading the backend.', 'For example, this config might be used to load the\n', ' from the ', ' module in\nthe ', ' directory (not implemented):', 'In addition to the backends provided by the core keyring package for\nthe most common and secure use cases, there\nare additional keyring backend implementations available for other\nuse cases. Simply install them to make them available:', 'The interface for the backend is defined by ', '.\nEvery backend should derive from that base class and define a ', '\nattribute and three functions: ', ', ', ', and\n', '. The ', ' function may be defined if\ndesired.', 'See the ', ' module for more detail on the interface of this class.', 'Keyring employs entry points to allow any third-party package to implement\nbackends without any modification to the keyring itself. Those interested in\ncreating new backends are encouraged to create new, third-party packages\nin the ', ' namespace, in a manner modeled by the ', '. See the\n', ' file\nin that project for hints on how to create the requisite entry points.\nBackends that prove essential may be considered for inclusion in the core\nlibrary, although the ease of installing these third-party packages should\nmean that extensions may be readily available.', 'To create an extension for Keyring, please submit a pull request to\nhave your extension mentioned as an available extension.', 'Keyring additionally allows programmatic configuration of the\nbackend calling the api ', '. The indicated backend\nwill subsequently be used to store and retrieve passwords.', 'To invoke ', ':', 'In many cases, uninstalling keyring will never be necessary.\nEspecially on Windows and macOS, the behavior of keyring is\nusually degenerate, meaning it will return empty values to\nthe caller, allowing the caller to fall back to some other\nbehavior.', 'In some cases, the default behavior of keyring is undesirable and\nit would be preferable to disable the keyring behavior altogether.\nThere are several mechanisms to disable keyring:', ""Keyring provides a mechanism to alter the keyring's behavior through\nenvironment variables. Each backend implements a\n"", ', which\nwhen invoked will find all environment variables beginning with\n', ' and will set a property for each\n', ' on the keyring. This method is invoked during\ninitialization for the default/configured keyring.', 'This mechanism may be used to set some useful values on various\nkeyrings, including:', 'The following is a complete transcript for installing keyring in a\nvirtual environment on Ubuntu 16.04.  No config file was used:', 'It is possible to use the SecretService backend on Linux systems without\nX11 server available (only D-Bus is required). In this case:', 'Install the ', ' daemon.', 'Start a D-Bus session, e.g. run ', ' and run\nthe following commands inside that shell.', 'Run ', ' with ', ' option. The description of\nthat option says:', 'Read a password from stdin, and use it to unlock the login keyring\nor create it if the login keyring does not exist.', 'When that command is started, enter a password into stdin and\npress Ctrl+D (end of data). After that, the daemon will fork into\nthe background (use ', ' option to block).', 'Now you can use the SecretService backend of Keyring. Remember to\nrun your application in the same D-Bus session as the daemon.', ""It is possible to use keyring with the SecretService backend in Docker containers as well.\nAll you need to do is install the necessary dependencies and add the --privileged flag\nto avoid any Operation not permitted errors when attempting to unlock the system's keyring."", 'The following is a complete transcript for installing keyring on a Ubuntu 18:04 container:', 'The keyring lib has a few functions:', 'In all cases, the parameters (', ', ', ', ', ')\nshould be Unicode text.', 'The keyring lib raises the following exceptions:', 'Python keyring lib is an open community project and eagerly\nwelcomes contributors.', 'Available as part of the Tidelift Subscription.', 'This project and the maintainers of thousands of other packages are working with Tidelift to deliver one enterprise subscription that covers all of the open source you use.', '.', 'To report a security vulnerability, please use the\n', '.\nTidelift will coordinate the fix and disclosure.', 'Each built-in backend may have security considerations to understand\nbefore using this library. Authors of tools or libraries utilizing\n', ' are encouraged to consider these concerns.', 'As with any list of known security concerns, this list is not exhaustive.\nAdditional issues can be added as needed.', 'This project makes use of automated releases and continuous\nintegration. The\nsimple workflow is to tag a commit and push it to Github. If it\npasses tests in CI, it will be automatically deployed to PyPI.', 'Other things to consider when making a release:', 'Tests are continuously run in Github Actions.', 'To run the tests locally, install and invoke\n', '.', ""The project was based on Tarek Ziade's idea in "", '. Kang Zhang\ninitially carried it out as a ', ' project, and Tarek\nmentored Kang on this project.', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n        ', '\n      ', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'macOS ', 'Freedesktop ', ' supports many DE including\nGNOME (requires ', ')', 'KDE4 & KDE5 ', '\n(requires ', ')', 'macOS (Homebrew x86): /usr/local/share', 'macOS (Homebrew ARM): /opt/homebrew/share', 'Android (Termux): /data/data/com.termux/files/usr/share', 'Windows (mingw64 of msys2): /mingw64/share', '...', 'bash: install ', ',\nand ensure ', ' in ', '.', 'zsh: ensure ', ' appears in ', ',\nthen ', ' to verify keyring appears, indicating\nit was installed correctly.', '\n- Encrypted text file storage.', ' - a\npure Python backend using the secret service DBus API for desktop\nLinux.', ' - ""alternate"",\npossibly-insecure backends, originally part of the core package, but\navailable for opt-in.', '\n- a backend that stores secrets in a Google Sheet. For use with\n', '.', '\n- a backend that stores secrets in the ', '\npassword manager.', "" - an encryption\nbackend which uses the ssh agent protocol's signature operation to\nderive the cipher key."", '\n- OSX keychain key-management, for private, public, and symmetric keys.', 'Uninstall keyring. Most applications are tolerant to keyring\nnot being installed. Uninstalling keyring should cause those\napplications to fall back to the behavior without keyring.\nThis approach affects the Python environment where keyring\nwould otherwise have been installed.', 'Configure the Null keyring in the environment. Set\n', '\nin the environment, and the ', ' (degenerate) backend\nwill be used. This approach affects all uses of Keyring where\nthat variable is set.', 'Permanently configure the Null keyring for the user by running\n', ' or ', '.\nThis approach affects all uses of keyring for that user.', 'keychain; macOS, path to an alternate keychain file', 'appid; Linux/SecretService, alternate ID for the application', '\n', '\n', '\n', '\n', '\n', '\n', ': Return the currently-loaded keyring implementation.', ': Returns the password stored in the\nactive keyring. If the password does not exist, it will return None.', ': Return a credential object stored\nin the active keyring. This object contains at least ', ' and\n', ' attributes for the specified service, where the returned\n', ' may be different from the argument.', ': Store the password in the\nkeyring.', ': Delete the password stored in\nkeyring. If the password does not exist, it will raise an exception.', ': Base Error class for all exceptions in keyring lib.', ': Raised when the keyring cannot be initialized.', ': Raised when the password cannot be set in the keyring.', ': Raised when the password cannot be deleted in the keyring.', 'Repository: ', 'Bug Tracker: ', 'Mailing list: ', 'Any Python script or application can access secrets created by\n', ' from that same Python executable without the operating\nsystem prompting the user for a password. To cause any specific\nsecret to prompt for a password every time it is accessed, locate\nthe credential using the ', ' application, and in\nthe ', ' settings, remove ', ' from the list\nof allowed applications.', '\n', 'No analysis has been performed', '\n', 'No analysis has been performed', '\n', 'No analysis has been performed', '\n', 'Check that the changelog is current for the intended release.', '\n              ', '\n              ', '\n            ', '\n          ', '\n          ', '\n        ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n        ', '\n    ', '\n      ', '\n    '])"
