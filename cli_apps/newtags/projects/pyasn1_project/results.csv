content
"(['etingof/pyasn1', 'Name already in use'], ['\n        Generic ASN.1 library for Python\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', '\n', '\n', '\n', '\n', 'This is a free and open source implementation of ASN.1 types and codecs\nas a Python package. It has been first written to support particular\nprotocol (SNMP) but then generalized to be suitable for a wide range\nof protocols based on\n', '.', 'ASN.1 solves the data serialisation problem. This solution was\ndesigned long ago by the wise Ancients. Back then, they did not\nhave the luxury of wasting bits. That is why ASN.1 is designed\nto serialise data structures of unbounded complexity into\nsomething compact and efficient when it comes to processing\nthe data.', 'That probably explains why many network protocols and file formats\nstill rely on the 30+ years old technology. Including a number of\nhigh-profile Internet protocols and file formats.', 'Quite a number of books cover the topic of ASN.1.\n', '\nby Olivier Dubuisson is one of those high quality books freely\navailable on the Internet.', 'The pyasn1 package is designed to help Python programmers tackling\nnetwork protocols and file formats at the comfort of their Python\nprompt. The tool struggles to capture all aspects of a rather\ncomplicated ASN.1 system and to represent it on the Python terms.', 'With pyasn1 you can build Python objects from ASN.1 data structures.\nFor example, the following ASN.1 data structure:', 'Could be expressed in pyasn1 like this:', 'It is in the spirit of ASN.1 to take abstract data description\nand turn it into a programming language specific form.\nOnce you have your ASN.1 data structure expressed in Python, you\ncan use it along the lines of similar Python type (e.g. ASN.1\n', ' is similar to Python ', ', ', ' to ', '):', 'Part of the power of ASN.1 comes from its serialisation features. You\ncan serialise your data structure and send it over the network.', 'Conversely, you can turn serialised ASN.1 content, as received from\nnetwork or read from a file, into a Python object which you can\nintrospect, modify, encode and send back.', 'The pyasn1 classes struggle to emulate their Python prototypes (e.g. int,\nlist, dict etc.). But ASN.1 types exhibit more complicated behaviour.\nTo make life easier for a Pythonista, they can turn their pyasn1\nclasses into Python built-ins:', 'Or vice-versa -- you can initialize an ASN.1 structure from a tree of\nPython objects:', 'With ASN.1 design, serialisation codecs are decoupled from data objects,\nso you could turn every single ASN.1 object into many different\nserialised forms. As of this moment, pyasn1 supports BER, DER, CER and\nPython built-ins codecs. The extremely compact PER encoding is expected\nto be introduced in the upcoming pyasn1 release.', 'More information on pyasn1 APIs can be found in the\n', ',\ncompiled ASN.1 modules for different protocols and file formats\ncould be found in the pyasn1-modules\n', '.', 'The pyasn1 package is distributed under terms and conditions of 2-clause\nBSD ', '. Source code is freely\navailable as a GitHub ', '.', 'You could ', ' or download it from ', '.', 'If something does not work as expected,\n', ' at GitHub or\npost your question ', '\nor try browsing pyasn1\n', '.', 'Copyright (c) 2005-2020, ', '.\nAll rights reserved.', '\n      Generic ASN.1 library for Python\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n        ', '\n      ', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'Generic implementation of ASN.1 types (X.208)', 'Standards compliant BER/CER/DER codecs', 'Can operate on streams of serialized data', 'Dumps/loads ASN.1 structures from Python types', '100% Python, works with Python 2.7 and 3.5+', 'MT-safe', 'Contributed ASN.1 compiler ', '\n          ', '\n          ', '\n        ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n        ', '\n    '])"
