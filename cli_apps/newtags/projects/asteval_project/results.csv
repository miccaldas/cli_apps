content
"(['newville/asteval', 'Name already in use', 'ASTEVAL'], ['\n        minimalistic evaluator of python expression using ast module\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', ""ASTEVAL is a safe(ish) evaluator of Python expressions and statements,\nusing Python's ast module.  The idea is to provide a simple, safe, and\nrobust miniature mathematical language that can handle user-input.  The\nemphasis here is on mathematical expressions, and so many functions from\n"", ' are imported and used if available.', 'Many Python lanquage constructs are supported by default, These include\nslicing, subscripting, list comprehension, conditionals (if-elif-else\nblocks and if expressions), flow control (for loops, while loops, and\ntry-except-finally blocks). All data are python objects, and built-in data\nstructures (dictionaries, tuple, lists, numpy arrays, strings) are fully\nsupported by default.', 'Many of the standard builtin python functions are available, as are all\nmathemetical functions from the math module.  If the numpy module is\ninstalled, many of its functions will also be available.  Users can define\nand run their own functions within the confines of the limitations of\nasteval.', 'There are several absences and differences with Python, and asteval is by\nno means an attempt to reproduce Python with its own ast module.  Some of\nthe most important differences and absences are:', 'In addition, accessing many internal methods and classes of objects is\nforbidden in order to strengthen asteval against malicious user code.', '\n      minimalistic evaluator of python expression using ast module\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'Documentation: ', 'PyPI installation: ', 'Development Code: ', 'Issue Tracker: ', 'Variable and function symbol names are held in a simple symbol\ntable (a single dictionary), giving a flat namespace.', 'creating classes is not supported.', 'importing modules is not supported.', 'function decorators, yield, lambda, exec, and eval are not supported.', 'files can only be opened in read-only mode.', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    '])"
content
"(['newville/asteval', 'Name already in use', 'ASTEVAL'], ['\n        minimalistic evaluator of python expression using ast module\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', ""ASTEVAL is a safe(ish) evaluator of Python expressions and statements,\nusing Python's ast module.  The idea is to provide a simple, safe, and\nrobust miniature mathematical language that can handle user-input.  The\nemphasis here is on mathematical expressions, and so many functions from\n"", ' are imported and used if available.', 'Many Python lanquage constructs are supported by default, These include\nslicing, subscripting, list comprehension, conditionals (if-elif-else\nblocks and if expressions), flow control (for loops, while loops, and\ntry-except-finally blocks). All data are python objects, and built-in data\nstructures (dictionaries, tuple, lists, numpy arrays, strings) are fully\nsupported by default.', 'Many of the standard builtin python functions are available, as are all\nmathemetical functions from the math module.  If the numpy module is\ninstalled, many of its functions will also be available.  Users can define\nand run their own functions within the confines of the limitations of\nasteval.', 'There are several absences and differences with Python, and asteval is by\nno means an attempt to reproduce Python with its own ast module.  Some of\nthe most important differences and absences are:', 'In addition, accessing many internal methods and classes of objects is\nforbidden in order to strengthen asteval against malicious user code.', '\n      minimalistic evaluator of python expression using ast module\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'Documentation: ', 'PyPI installation: ', 'Development Code: ', 'Issue Tracker: ', 'Variable and function symbol names are held in a simple symbol\ntable (a single dictionary), giving a flat namespace.', 'creating classes is not supported.', 'importing modules is not supported.', 'function decorators, yield, lambda, exec, and eval are not supported.', 'files can only be opened in read-only mode.', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    '])"
