content
"([], ['Pycairo is a Python module providing bindings for the ', '. It depends on ', ' and works\nwith ', ' and ', '. Pycairo, including this documentation, is\nlicensed under the ', '.', 'The Pycairo bindings are designed to match the cairo C API as closely as\npossible, and to deviate only in cases which are clearly better implemented in\na more ‘Pythonic’ way.', 'Installing Pycairo requires cairo including its headers. For more info see\n“', '”.', 'Features of the Pycairo bindings:', 'Provides an object oriented interface to cairo.', 'Queries the error status of objects and translates them to exceptions.', 'Provides a C API that can be used by other Python extensions.', 'Fully typed and documented API.', 'For more information visit ', 'See the “', '” for further details.', 'For examples of pycairo code see the ‘examples’ directory that comes with the\npycairo distribution.', 'Alternatives:', ' provides a large subset of\nthe pycairo API but instead of being implemented in C it uses ', ' to talk to cairo. In case you’d prefer not\nto use a C extension then give this a try. Or if you use PyPy and want to\nbenefit from the lower overhead of cffi compared to C extensions.', ' provides a more “pythonic” API\nwith less focus on matching the cairo C API. It also isn’t a C extension and\nuses the Python builtin ', ' module to talk to cairo.', '\n      ', 'Overview', '\n              ', '\n      '])"
content
"([], ['Pycairo is a Python module providing bindings for the ', '. It depends on ', ' and works\nwith ', ' and ', '. Pycairo, including this documentation, is\nlicensed under the ', '.', 'The Pycairo bindings are designed to match the cairo C API as closely as\npossible, and to deviate only in cases which are clearly better implemented in\na more ‘Pythonic’ way.', 'Installing Pycairo requires cairo including its headers. For more info see\n“', '”.', 'Features of the Pycairo bindings:', 'Provides an object oriented interface to cairo.', 'Queries the error status of objects and translates them to exceptions.', 'Provides a C API that can be used by other Python extensions.', 'Fully typed and documented API.', 'For more information visit ', 'See the “', '” for further details.', 'For examples of pycairo code see the ‘examples’ directory that comes with the\npycairo distribution.', 'Alternatives:', ' provides a large subset of\nthe pycairo API but instead of being implemented in C it uses ', ' to talk to cairo. In case you’d prefer not\nto use a C extension then give this a try. Or if you use PyPy and want to\nbenefit from the lower overhead of cffi compared to C extensions.', ' provides a more “pythonic” API\nwith less focus on matching the cairo C API. It also isn’t a C extension and\nuses the Python builtin ', ' module to talk to cairo.', '\n      ', 'Overview', '\n              ', '\n      '])"
