content
"(['redis/hiredis-py', 'Name already in use', 'hiredis-py', 'class', 'with', 'with', 'with', 'with'], ['\n        Python wrapper for hiredis\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', '\n', 'Python extension that wraps protocol parsing code in ', '.\nIt primarily speeds up parsing of multi bulk replies.', 'hiredis-py is available on ', ', and can be installed via:', 'Building this repository requires a recursive checkout of submodules, and building hiredis. The following example shows how to clone, compile, and run tests. Please note - you will need the gcc installed.', 'hiredis-py requires ', '.', 'Make sure Python development headers are available when installing hiredis-py.\nOn Ubuntu/Debian systems, install them with ', '.', 'The ', ' module contains the ', ' class. This class is responsible for\nparsing replies from the stream of data that is read from a Redis connection.\nIt does not contain functionality to handle I/O.', 'The ', ' class has two methods that are used when parsing replies from a\nstream of data. ', ' takes a string argument that is appended to the\ninternal buffer. ', ' reads this buffer and returns a reply when the\nbuffer contains a full reply. If a single call to ', ' contains multiple\nreplies, ', ' should be called multiple times to extract all replies.', 'Example:', 'When the buffer does not contain a full reply, ', ' returns ', '.\nThis means extra data is needed and ', ' should be called again before calling\n', ' again. Alternatively you could provide custom sentinel object via parameter,\nwhich is useful for RESP3 protocol where native boolean types are supported:', 'Example:', ' is able to decode bulk data to any encoding Python supports.\nTo do so, specify the encoding you want to use for decoding replies when\ninitializing it:', 'Decoding of bulk data will be attempted using the specified encoding and\nerror handler. If the error handler is ', ' (the default), a\n', "" is raised when data cannot be dedcoded. This is identical\nto Python's default behavior. Other valid values to "", ' include\n', ', ', ', and ', '. More information on the\nbehavior of these error handlers can be found\n', '.', 'When the specified encoding cannot be found, a ', ' will be raised\nwhen calling ', ' for the first reply with bulk data.', 'When a protocol error occurs (because of multiple threads using the same\nsocket, or some other condition that causes a corrupt stream), the error\n', ' is raised. Because the buffer is read in a lazy\nfashion, it will only be raised when ', ' is called and the first reply in\nthe buffer contains an error. There is no way to recover from a faulty protocol\nstate, so when this happens, the I/O code feeding data to ', ' should\nprobably reconnect.', 'Redis can reply with error replies (', '). For these replies, the custom\nerror class ', ' is returned, ', '.', ""When other error types should be used (so existing code doesn't have to change\nits "", ' clauses), ', ' can be initialized with the ', ' and\n', ' keywords. These keywords should contain a ', ' that is a\nsubclass of ', '. When not provided, ', ' will use the default\nerror types.', 'The repository contains a benchmarking script in the ', ' directory,\nwhich uses ', ' to have non-blocking I/O and redis-py\nto handle connections. These benchmarks are done with a patched version of\nredis-py that uses hiredis-py when it is available.', 'All benchmarks are done with 10 concurrent connections.', 'List entries in the following tests are 5 bytes.', 'Throughput improvement for simple SET/GET is minimal, but the larger multi bulk replies\nget, the larger the performance improvement is.', 'This code is released under the BSD license, after the license of hiredis.', '\n      Python wrapper for hiredis\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'SET key value + GET key\n', 'redis-py: 11.76 Kops', 'redis-py ', ' hiredis-py: 13.40 Kops', 'improvement: ', '\n', 'LRANGE list 0 ', ':\n', 'redis-py: 4.78 Kops', 'redis-py ', ' hiredis-py: 12.94 Kops', 'improvement: ', '\n', 'LRANGE list 0 ', ':\n', 'redis-py: 0.73 Kops', 'redis-py ', ' hiredis-py: 11.90 Kops', 'improvement: ', '\n', 'LRANGE list 0 ', ':\n', 'redis-py: 0.07 Kops', 'redis-py ', ' hiredis-py: 5.83 Kops', 'improvement: ', '\n', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n        ', '\n    ', '\n        ', '\n    '])"
