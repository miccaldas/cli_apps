content
"(['Welcome to Invoke!'], [' ', ' ', ' ', ' ', 'Invoke is a Python (2.7 and 3.4+) library for managing shell-oriented\nsubprocesses and organizing executable Python code into CLI-invokable tasks. It\ndraws inspiration from various sources (', '/', ', Fabric 1.x, etc) to\narrive at a powerful & clean feature set.', 'To find out what’s new in this version of Invoke, please see ', '.', 'The project maintainer keeps a ', ' on his website.', 'This website covers project information for Invoke such as the changelog,\ncontribution guidelines, development roadmap, news/blog, and so forth.\nDetailed usage and API documentation can be found at our code documentation\nsite, ', '.', 'Please see below for a high level intro, or the navigation on the left for the\nrest of the site content.', 'Like Ruby’s Rake tool and Invoke’s own predecessor Fabric 1.x, it provides a\nclean, high level API for running shell commands and defining/organizing\ntask functions from a ', ' file:', 'From GNU Make, it inherits an emphasis on minimal boilerplate for common\npatterns and the ability to run multiple tasks in a single invocation:', 'Where Fabric 1.x considered the command-line approach the default mode of\nuse, Invoke (and tools built on it) are equally at home embedded in your own\nPython code or a REPL:', 'Following the lead of most Unix CLI applications, it offers a traditional\nflag-based style of command-line parsing, deriving flag names and value types\nfrom task signatures (optionally, of course!):', 'Like many of its predecessors, it offers advanced features as well –\nnamespacing, task aliasing, before/after hooks, parallel execution and more.', 'Pythonic task execution', '\n', '\n', '\nProfessionally-supported Invoke is available with the\n', '.\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n'])"
content
"(['Welcome to Invoke!'], [' ', ' ', ' ', ' ', 'Invoke is a Python (2.7 and 3.4+) library for managing shell-oriented\nsubprocesses and organizing executable Python code into CLI-invokable tasks. It\ndraws inspiration from various sources (', '/', ', Fabric 1.x, etc) to\narrive at a powerful & clean feature set.', 'To find out what’s new in this version of Invoke, please see ', '.', 'The project maintainer keeps a ', ' on his website.', 'This website covers project information for Invoke such as the changelog,\ncontribution guidelines, development roadmap, news/blog, and so forth.\nDetailed usage and API documentation can be found at our code documentation\nsite, ', '.', 'Please see below for a high level intro, or the navigation on the left for the\nrest of the site content.', 'Like Ruby’s Rake tool and Invoke’s own predecessor Fabric 1.x, it provides a\nclean, high level API for running shell commands and defining/organizing\ntask functions from a ', ' file:', 'From GNU Make, it inherits an emphasis on minimal boilerplate for common\npatterns and the ability to run multiple tasks in a single invocation:', 'Where Fabric 1.x considered the command-line approach the default mode of\nuse, Invoke (and tools built on it) are equally at home embedded in your own\nPython code or a REPL:', 'Following the lead of most Unix CLI applications, it offers a traditional\nflag-based style of command-line parsing, deriving flag names and value types\nfrom task signatures (optionally, of course!):', 'Like many of its predecessors, it offers advanced features as well –\nnamespacing, task aliasing, before/after hooks, parallel execution and more.', 'Pythonic task execution', '\n', '\n', '\nProfessionally-supported Invoke is available with the\n', '.\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n'])"
