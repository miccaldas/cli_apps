content
"(['ipython/traitlets', 'Name already in use', 'Traitlets', '""traits""', 'traits'], ['\n        A lightweight Traits like module\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', '\n', '\n', '\n', 'Traitlets is a pure Python library enabling:', 'Its implementation relies on the ', '\npattern, and it is a lightweight pure-python alternative of the\n', '.', 'Traitlets powers the configuration system of IPython and Jupyter\nand the declarative API of IPython interactive widgets.', 'For a local installation, make sure you have\n', ' and run:', 'For a ', ', clone this repository, change into the\n', ' root directory, and run pip:', "" has adopted automatic code formatting so you shouldn't\nneed to worry too much about your code style.\nAs long as your code is valid,\nthe pre-commit hook should take care of how it should look."", 'To install ', ' locally, run the following::', 'You can invoke the pre-commit hook by hand at any time with::', ""which should run any autoformatting on your code\nand tell you about any errors it couldn't fix automatically.\nYou may also install "", '\ninto your text editor to format code automatically.', 'If you have already committed files before setting up the pre-commit\nhook with ', ', you can fix everything up using\n', '. You need to make the fixing commit\nyourself after that.', 'Some of the hooks only run on CI by default, but you can invoke them by\nrunning with the ', ' argument.', 'Any class with trait attributes must inherit from ', '.\nFor the list of available trait types and their properties, see the\n', '\nsection of the documentation.', 'To calculate a default value dynamically, decorate a method of your class with\n', '. This method will be called on the instance, and\nshould return the default value. In this example, the ', '\nmethod is decorated with ', ':', 'When a trait changes, an application can follow this trait change with\nadditional actions.', 'To do something when a trait attribute is changed, decorate a method with\n', '.\nThe method will be called with a single argument, a dictionary which contains\nan owner, new value, old value, name of the changed trait, and the event type.', 'In this example, the ', ' method is decorated with ', ':', 'and is passed the following dictionary when called:', 'Each trait type (', ', ', ', ', ' etc.) may have its own validation or\ncoercion logic. In addition, we can register custom cross-validators\nthat may depend on the state of other attributes. For example:', 'However, we ', "" that custom cross-validators don't modify the state\nof the HasTraits instance."", 'The IPython Development Team is the set of all contributors to the IPython project.\nThis includes all of the IPython subprojects.', 'The core team that coordinates development on GitHub can be found here:\n', '.', 'IPython uses a shared copyright model. Each contributor maintains copyright\nover their contributions to IPython. But, it is important to note that these\ncontributions are typically only changes to the repositories. Thus, the IPython\nsource code, in its entirety is not the copyright of any single person or\ninstitution. Instead, it is the collective copyright of the entire IPython\nDevelopment Team. If individual contributors want to maintain a record of what\nchanges/contributions they have specific copyright on, they should indicate\ntheir copyright in the commit message of the change, when they commit the\nchange to one of the IPython repositories.', 'With this in mind, the following banner should be used in any source code file\nto indicate the copyright and license terms:', '\n      A lightweight Traits like module\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n        ', '\n      ', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'the enforcement of strong typing for attributes of Python objects\n(typed attributes are called ', ');', 'dynamically calculated default values;', 'automatic validation and coercion of trait attributes when attempting a\nchange;', 'registering for receiving notifications when trait values change;', 'reading configuring values from files or from command line\narguments - a distinct layer on top of traitlets, so you may use\ntraitlets without the configuration machinery.', '\n              ', '\n              ', '\n            ', '\n          ', '\n          ', '\n        ', '\n          ', '\n          ', '\n        ', '\n          ', '\n          ', '\n        ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n        ', '\n    '])"
