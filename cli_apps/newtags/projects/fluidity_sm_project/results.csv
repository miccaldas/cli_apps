content
"(['nsi-iff/fluidity', 'Name already in use', 'Fluidity', 'from_', 'to', 'action', 'from_', 'to', 'event', 'action', 'guard', 'action', 'action', 'guard', 'guard', 'fluidity-sm', 'fluidity'], ['\n        State machine implementation for Python objects\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'State machine implementation for Python objects.', 'A very simple example taken from specs:', 'For demonstrating more advanced capabilities, a ""slightly more complex example"" from ', "", the Ruby's most popular state machine implementation, is reproduced below, using Fluidity:"", 'A Fluidity state machine must have one initial state and at least two states.', 'A state may have enter and exit callbacks, for running some code on state enter\nand exit, respectively. These params can be method names (as strings),\ncallables, or lists of method names or callables.', 'Transitions lead the machine from a state to another. Transitions must have\n', ', ', ', and ', ' parameters. ', ' is one or more (as list) states\nfrom which the transition can be started. ', ' is the state to which the\ntransition will lead the machine. ', ' is the method that have to be called\nto launch the transition. This method is automatically created by the Fluidity\nengine.', 'A transition can have optional ', ' and ', ' parameters. ', ' is a\nmethod (or callable) that will be called when transition is launched. If\nparameters are passed to the event method, they are passed to the ', '\nmethod, if it accepts these parameters. ', ' is a method (or callable) that\nis called to allow or deny the transition, depending on the result of its\nexecution. Both ""action"" and ', ' can be lists.', 'The same event can be in multiple transitions, going to different states, having\ntheir respective guards as selectors. For the transitions having the same event,\nonly one guard should return a true value at a time.', 'States and transitions are defined in a class-wide mode. However, one can define\nstates and transitions for individual objects. For example, having ""door"" as a\nstate machine:', 'These additions only affect the target object.', 'Just run:', ': the Pypi package is called ', ', not ', '.', 'Just run:', 'for install all test dependencies (', '\nand ', ', at the moment) and\nrun the tests. Fluidity itself has no dependencies.', '\n      State machine implementation for Python objects\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', '\n            ', '\n              ', '\n          ', '\n            ', '\n              ', '\n          ', '\n        ', '\n    '])"
content
"(['nsi-iff/fluidity', 'Name already in use', 'Fluidity', 'from_', 'to', 'action', 'from_', 'to', 'event', 'action', 'guard', 'action', 'action', 'guard', 'guard', 'fluidity-sm', 'fluidity'], ['\n        State machine implementation for Python objects\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'State machine implementation for Python objects.', 'A very simple example taken from specs:', 'For demonstrating more advanced capabilities, a ""slightly more complex example"" from ', "", the Ruby's most popular state machine implementation, is reproduced below, using Fluidity:"", 'A Fluidity state machine must have one initial state and at least two states.', 'A state may have enter and exit callbacks, for running some code on state enter\nand exit, respectively. These params can be method names (as strings),\ncallables, or lists of method names or callables.', 'Transitions lead the machine from a state to another. Transitions must have\n', ', ', ', and ', ' parameters. ', ' is one or more (as list) states\nfrom which the transition can be started. ', ' is the state to which the\ntransition will lead the machine. ', ' is the method that have to be called\nto launch the transition. This method is automatically created by the Fluidity\nengine.', 'A transition can have optional ', ' and ', ' parameters. ', ' is a\nmethod (or callable) that will be called when transition is launched. If\nparameters are passed to the event method, they are passed to the ', '\nmethod, if it accepts these parameters. ', ' is a method (or callable) that\nis called to allow or deny the transition, depending on the result of its\nexecution. Both ""action"" and ', ' can be lists.', 'The same event can be in multiple transitions, going to different states, having\ntheir respective guards as selectors. For the transitions having the same event,\nonly one guard should return a true value at a time.', 'States and transitions are defined in a class-wide mode. However, one can define\nstates and transitions for individual objects. For example, having ""door"" as a\nstate machine:', 'These additions only affect the target object.', 'Just run:', ': the Pypi package is called ', ', not ', '.', 'Just run:', 'for install all test dependencies (', '\nand ', ', at the moment) and\nrun the tests. Fluidity itself has no dependencies.', '\n      State machine implementation for Python objects\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', '\n            ', '\n              ', '\n          ', '\n            ', '\n              ', '\n          ', '\n        ', '\n    '])"
