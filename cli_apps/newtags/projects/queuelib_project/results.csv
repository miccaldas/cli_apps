content
"(['scrapy/queuelib', 'Name already in use', 'queuelib'], ['\n        Collection of persistent (disk-based) and non-persistent (memory-based) queues for Python\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'Queuelib is a Python library that implements object collections which are stored\nin memory or persisted to disk, provide a simple API, and run fast.', 'Queuelib provides collections for ', ' (FIFO), ', ' (LIFO), queues\nsorted by priority and queues that are emptied in a ', ' fashion.', 'Note', 'Queuelib collections are not thread-safe.', 'Queuelib supports Python 3.5+ and has no dependencies.', 'You can install Queuelib either via the Python Package Index (PyPI) or from\nsource.', 'To install using pip:', 'To install using easy_install:', 'If you have downloaded a source tarball you can install it by running the\nfollowing (as root):', 'Queuelib provides FIFO and LIFO queue implementations.', 'Here is an example usage of the FIFO queue:', 'The LIFO queue is identical (API-wise), but importing ', '\ninstead.', 'A discrete-priority queue implemented by combining multiple FIFO/LIFO queues\n(one per priority).', 'First, select the type of queue to be used per priority (FIFO or LIFO):', 'Then instantiate the Priority Queue with it:', 'And use it:', 'Has nearly the same interface and implementation as a Priority Queue except\nthat each element must be pushed with a (mandatory) key.  Popping from the\nqueue cycles through the keys ""round robin"".', 'Instantiate the Round Robin Queue similarly to the Priority Queue:', 'And use it:', 'Use the ', ' mailing list for questions about Queuelib.', 'If you have any suggestions, bug reports or annoyances please report them to\nour issue tracker at: ', 'Development of Queuelib happens at GitHub: ', ""You are highly encouraged to participate in the development. If you don't like\nGitHub (for some reason) you're welcome to send regular patches."", 'All changes require tests to be merged.', 'Tests are located in queuelib/tests directory. They can be run using\n', ' with the following command:', 'The output should be something like the following:', 'This software is licensed under the BSD License. See the LICENSE file in the\ntop distribution directory for the full license text.', 'This software follows ', '\n      Collection of persistent (disk-based) and non-persistent (memory-based) queues for Python\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    '])"
