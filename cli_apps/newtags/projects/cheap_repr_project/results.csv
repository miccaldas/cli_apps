content
"(['alexmojaki/cheap_repr', 'Name already in use', 'cheap_repr', 'suppressed'], ['\n        Better version of repr/reprlib for short, cheap string representations in Python\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', ' ', ' ', ' ', ""This library provides short, fast, configurable string representations, and an easy API for registering your own. It's an improvement of the standard library module "", ' (', ' in Python 2).', 'Just use the ', ' function instead of ', ':', "" knows how to handle many different types out of the box. You can register a function for any type, and pull requests to make these part of the library are welcome. If it doesn't know how to handle a particular type, the default "", ' is used, possibly truncated:', ' is meant to prevent slow, expensive computations of string representations. So if it finds that a particular class can potentially produce very long representations, the class will be ', ', meaning that in future the  ', "" won't be calculated at all:"", "" refers to the attribute on the function itself, not the module. By default it's 300, meaning that a "", ' longer than 300 characters will trigger the suppression.', 'For example:', 'In general, write a function that takes two arguments ', ' and decorate it with ', '. Then ', ' where ', ' will dispatch to that function, unless there is also a registered function for a subclass which ', ' is also an instance of. More precisely, the function corresponding to the first class in the MRO will be used. This is in contrast to the standard library module ', "", which cannot handle subclasses that aren't explicitly 'registered', or classes with the same name."", 'The ', ' argument is an object with a couple of useful attributes and methods:', ' produces a comma-separated representation of ', ', automatically handling nesting and iterables that are too long, surrounded by ', ' and ', '. The number of items is limited to ', ' (see the configuration section below).', 'Set ', ' to include items from both the beginning and end, possibly leaving out items\nin the middle. Only do this if ', ' supports efficient slicing at the end, e.g. ', '.', 'Provide the ', ' parameter if ', "" doesn't work. Usually this is not needed."", ' returns a version of ', ' at most ', ' characters long, with the middle replaced by ', ' if necessary.', "" indicates how much nesting is still allowed in the result. If it's 0, return something minimal such as "", ' to indicate that the original object is too deep to show all its contents. Otherwise, if you use ', ' on several items inside ', ', pass ', ' as the second argument, e.g. ', '.', 'If an exception occurs in ', ', whether from a registered repr function or the usual ', ', the exception will be caught and the cheap repr of the class will be suppressed:', 'If you would prefer exceptions to bubble up normally, you can:', 'To configure a specific function, you set attributes on that function. To find the function corresponding to a class, use ', ':', 'For most functions, there are two attributes available to configure, but contributors and library writers are encouraged to add arbitrary attributes for their own functions. The first attribute is ', ', described in the previous section.', 'The other configurable attribute is ', "". All registered repr functions have this attribute. It determines the maximum number of 'parts' (e.g. list elements or string characters, the meaning depends on the function) from the input that the output can display without truncation. The default value is 6. The decorator "", ' conveniently sets the attribute to make writing your own registered functions nicer. For example:', 'The functions for ', 's and ', ' from the ', "" library don't use "", '.\nFor the ', "" function there's "", ' and ', '. For the ', "" function there's just "", '.', ' takes an optional argument ', "" which controls the display of nested objects. Typically this decreases through recursive calls, and when it's 0, the contents of the object aren't shown. See 'Registering your own repr function' for more details. This means you can change the amount of nested data in the output of "", ' by changing the ', ' argument. The default value is ', ', which is initially 3. This means that changing ', ' will effectively change the ', "" argument whenever it isn't explicitly specified."", 'These things that can be configured globally:', ' returns a string that looks like the default ', "". This is handy if you don't want to write your own repr function to register. Simply register this function instead, e.g."", ' returns ', ' - register it with a class to indicate that its own ', ' method is already fine. This prevents it from being supressed when its output is a bit long.', ' is handy when you want to register a repr function for a class that may not exist, e.g. if the class is in a third party package that may not be installed. See the docstring for more details.', '\n      Better version of repr/reprlib for short, cheap string representations in Python\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', 'Set ', ' to globally make all exceptions bubble up.', 'To bubble exceptions from the ', ' of a class, call ', '.', 'Set ', ' (substituting your own registered repr function) to make exceptions bubble from that function. The way to find the relevant function is in the next section.', "", discussed in the 'Suppression of long reprs' section."", ""The handling of exceptions, discussed in the 'Exceptions in repr functions' section, which can be changed by setting "", ' or calling ', '.', ', discussed above.', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    ', '\n        ', '\n    '])"
