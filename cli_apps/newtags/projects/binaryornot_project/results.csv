content
"(['audreyfeldroy/binaryornot', 'Name already in use', 'BinaryOrNot'], ['\n        Ultra-lightweight pure Python package to check if a file is binary or text.\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', ""Ultra-lightweight pure Python package to guess whether a file is binary or text,\nusing a heuristic similar to Perl's pp_fttext and its analysis by @eliben."", ""It works, and people are using this package in various places. But it doesn't cover all edge cases yet."", 'The code could be improved. Pull requests welcome! As of now, it is based on these snippets, but that may change:', 'Has tests for these file types:', 'Has tests for numerous encodings.', 'You may be thinking, ""I can write this in 2 lines of code?!""', ""It's actually not that easy. Here's a great article about how Perl's\nheuristic to guess file types works: "", ""And that's just where we started. Over time, we've found more edge cases and\nour heuristic has gotten more complex."", 'Also, this package saves you from having to write and thoroughly test\nyour code with all sorts of weird file types and encodings, cross-platform.', 'Linux (Ubuntu 12.04 LTS Server Edition 64 bit):', 'Windows (Windows Server 2012 R2 (x64)):', '\n      Ultra-lightweight pure Python package to check if a file is binary or text.\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'Free software: BSD license', 'Documentation: ', 'Text: .txt, .css, .json, .svg, .js, .lua, .pl, .rst', 'Binary: .png, .gif, .jpg, .tiff, .bmp, .DS_Store, .eot, .otf, .ttf, .woff, .rgb', 'Special thanks to Eli Bendersky (@eliben) for his writeup explaining the heuristic and his implementation, which this is largely based on.', ""Source code from the portion of Perl's pp_fttext that checks for textiness: "", '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    ', '\n        ', '\n    ', '\n        ', '\n    ', '\n        ', '\n    ', '\n      ', '\n    '])"
