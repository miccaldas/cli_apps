content
"(['astanin/python-tabulate', 'Name already in use', 'python-tabulate', 'repr_html', 'text'], ['\n        Pretty-print tabular data in Python, a library and a command-line utility. Repository migrated from bitbucket.org/astanin/python-tabulate.\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'Pretty-print tabular data in Python, a library and a command-line\nutility.', 'The main use cases of the library are:', 'To install the Python library and the command line utility, run:', 'The command line utility will be installed as ', ' to ', ' on\nLinux (e.g. ', '); or as ', ' to ', ' in your\nPython installation on Windows (e.g. ', ').', 'You may consider installing the library only for the current user:', 'In this case the command line utility will be installed to\n', ' on Linux and to\n', ' on Windows.', 'To install just the library on Unix-like operating systems:', 'On Windows:', ' ', 'The module provides just one function, ', ', which takes a list of\nlists or another tabular data type as the first argument, and outputs a\nnicely formatted plain-text table:', 'The following tabular data types are supported:', 'Tabulate is a Python3 library.', 'The second optional argument named ', ' defines a list of column\nheaders to be used:', 'If ', ', then the first row of data is used:', 'If ', ', then the keys of a dictionary/dataframe, or column\nindices are used. It also works for NumPy record arrays and lists of\ndictionaries or named tuples:', 'By default, only pandas.DataFrame tables have an additional column\ncalled row index. To add a similar column to any other type of table,\npass ', ' or ', ' argument to ', '.\nTo suppress row indices for all types of data, pass ', '\nor ', '. To add a custom row index column, pass\n', ', where ', ' is some iterable:', 'There is more than one way to format a table in plain text. The third\noptional argument named ', ' defines how the table is formatted.', 'Supported table formats are:', ' tables do not use any pseudo-graphics to draw lines:', ' is the default format (the default may change in future\nversions). It corresponds to ', ' in ', ':', ' follows the conventions of GitHub flavored Markdown. It\ncorresponds to the ', ' format without alignment colons:', "" is like tables formatted by Emacs'\n"", ' package. It corresponds to\n', ' in Pandoc Markdown extensions:', ' draws a grid using single-line box-drawing characters:', ' draws a grid using single-line box-drawing characters with rounded corners:', ' draws a grid using bold (thick) single-line box-drawing characters:', ' draws a grid using a mix of light (thin) and heavy (thick) lines box-drawing characters:', ' draws a grid using double-line box-drawing characters:', ' draws a grid using a mix of single and\ndouble-line box-drawing characters:', ' is the same as the ', "" format but doesn't draw lines between rows:"", ' is the same as the ', "" format but doesn't draw lines between rows:"", ' is the same as the ', "" format but doesn't draw lines between rows:"", ' is the same as the ', "" format but doesn't draw lines between rows:"", ' is the same as the ', "" format but doesn't draw lines between rows:"", ' is the same as the ', "" format but doesn't draw lines between rows:"", ' is the same as the ', "" format but doesn't draw lines between rows:"", ' is like tables formatted by Presto cli:', ' attempts to be close to the format emitted by the PrettyTables\nlibrary:', "" is like tables formatted by Postgres' psql cli:"", ' follows the conventions of ', ' extension.\nIt corresponds to ', ' in Pandoc. This format uses colons to\nindicate column alignment:', ' formats data like a simple table of the\n', '\nformat:', ' follows the conventions of Emacs\n', ', and is editable also\nin the minor orgtbl-mode. Hence its name:', ' follows the conventions of Atlassian Jira markup language:', ' formats data like a simple table of the\n', '\nformat:', ' format produces a table markup used in\n', ' and on other\nMediaWiki-based sites:', ' format produces a table markup used in\n', ' wikis:', ' format produces a table markup used in Youtrack tickets:', ' format produces a table markup used in\n', ' format:', "" produces standard HTML markup as an html.escape'd str\nwith a ."", ' method so that Jupyter Lab and Notebook display the HTML\nand a .str property so that the raw HTML remains accessible.\n', ' table format can be used if an unescaped HTML is required:', ' format creates a ', ' environment for LaTeX markup,\nreplacing special characters like ', ' or ', ' to their LaTeX\ncorrespondents:', ' behaves like ', ' but does not escape LaTeX commands and\nspecial characters.', ' creates a ', ' environment for LaTeX markup using\nspacing and style from the ', ' package.', ' creates a table that can stretch along multiple pages,\nusing the ', ' package.', ' is smart about column alignment. It detects columns which\ncontain only numbers, and aligns them by a decimal point (or flushes\nthem to the right if they appear to be integers). Text columns are\nflushed to the left.', 'You can override the default alignment with ', ' and ', '\nnamed arguments. Possible column alignments are: ', ', ', ',\n', ', ', ' (only for numbers), and ', ' (to disable alignment).', 'Aligning by a decimal point works best when you need to compare numbers\nat a glance:', 'Compare this with a more common right alignment:', 'For ', ', anything which can be parsed as a number is a number.\nEven numbers represented as strings are aligned properly. This feature\ncomes in handy when reading a mixed table of text and numbers from a\nfile:', 'To disable this feature use ', '.', ' allows a custom column alignment to override the above. The\n', ' argument can be a list or a tuple of ', ' named\narguments. Possible column alignments are: ', ', ', ', ', ',\n', ' (only for numbers), and ', ' (to disable alignment).\nOmitting an alignment uses the default. For example:', ' allows to define custom number formatting applied to all\ncolumns of decimal numbers. Use ', ' named argument:', ' argument can be a list or a tuple of format strings, one per\ncolumn, in which case every column may have different number formatting:', ' works similarly for integers', 'By default, ', ' removes leading and trailing whitespace from text\ncolumns. To disable whitespace removal, set the global module-level flag\n', ':', 'To properly align tables which contain wide characters (typically\nfullwidth glyphs from Chinese, Japanese or Korean languages), the user\nshould install ', ' library. To install it together with\n', ':', 'Wide character support is enabled automatically if ', ' library is\nalready installed. To disable wide characters support without\nuninstalling ', ', set the global module-level flag\n', ':', 'Most table formats support multiline cell text (text containing newline\ncharacters). The newline characters are honored as line break\ncharacters.', 'Multiline cells are supported for data rows and for header rows.', ""Further automatic line breaks are not inserted. Of course, some output\nformats such as latex or html handle automatic formatting of the cell\ncontent on their own, but for those that don't, the newline characters\nin the input cell text are the only means to break a line in cell text."", 'Note that some output formats (e.g. simple, or plain) do not represent\nrow delimiters, so that the representation of multiline cells in such\nformats may be ambiguous to the reader.', 'The following examples of formatted output use the following table with\na multiline cell, and headers with a multiline cell:', ' tables:', ' tables:', ' tables:', ' tables:', ' tables:', ' tables:', ' tables:', ' tables:', ' tables:', ' tables:', ' tables:', 'Multiline cells are not well-supported for the other table formats.', 'While tabulate supports data passed in with multilines entries explicitly provided,\nit also provides some support to help manage this work internally.', 'The ', "" argument is a list where each entry specifies the max width for\nit's respective column. Any cell that will exceed this will automatically wrap the content.\nTo assign the same max width for all columns, a singular int scaler can be used."", 'Use ', ' for any columns where an explicit maximum does not need to be provided,\nand thus no automate multiline wrapping will take place.', 'The wrapping uses the python standard ', '\nfunction with default parameters - aside from width.', 'This example demonstrates usage of automatic multiline wrapping, though typically\nthe lines being wrapped would probably be significantly longer than this.', 'One might want to add one or more separating lines to highlight different sections in a table.', 'The separating lines will be of the same type as the one defined by the specified formatter as either the\nlinebetweenrows, linebelowheader, linebelow, lineabove or just a simple empty line when none is defined for the formatter', 'ANSI escape codes are non-printable byte sequences usually used for terminal operations like setting\ncolor output or modifying cursor positions. Because multi-byte ANSI sequences are inherently non-printable,\nthey can still introduce unwanted extra length to strings. For example:', 'To deal with this, string lengths are calculated after first removing all ANSI escape sequences. This ensures\nthat the actual printable length is used for column widths, rather than the byte length. In the final, printable\ntable, however, ANSI escape sequences are not removed so the original styling is preserved.', 'Some terminals support a special grouping of ANSI escape sequences that are intended to display hyperlinks\nmuch in the same way they are shown in browsers. These are handled just as mentioned before: non-printable\nANSI escape sequences are removed prior to string length calculation. The only diifference with escaped\nhyperlinks is that column width will be based on the length of the URL ', ' rather than the URL\nitself (terminals would show this text). For example:', 'Such features as decimal point alignment and trying to parse everything\nas a number imply that ', ':', ""It may not be suitable for serializing really big tables (but who's\ngoing to do that, anyway?) or printing tables in performance sensitive\napplications. "", ' is about two orders of magnitude slower than\nsimply joining lists of values with a tab, comma, or other separator.', 'At the same time, ', ' is comparable to other table\npretty-printers. Given a 10x10 table (a list of lists) of mixed text and\nnumeric data, ', ' appears to be slower than ', ', and\nfaster than ', ' and ', ' The following mini-benchmark\nwas run in Python 3.9.13 on Windows 10:', 'The full version history can be found at the ', '.', 'Contributions should include tests and an explanation for the changes\nthey propose. Documentation (examples, docstrings, README.md) should be\nupdated accordingly.', 'This project uses ', ' testing\nframework and ', ' to automate testing in\ndifferent environments. Add tests to one of the files in the ', '\nfolder.', 'To run tests on all supported Python versions, make sure all Python\ninterpreters, ', ' and ', ' are installed, then run ', ' in the root\nof the project source tree.', 'On Linux ', ' expects to find executables like ', ', ', ' etc.\nOn Windows it looks for ', ', ', ' etc. respectively.', 'One way to install all the required versions of the Python interpreter is to use ', '.\nAll versions can then be easily installed with something like:', ""Don't forget to change your "", ' so that ', ' knows how to find all the installed versions. Something like', 'To test only some Python environments, use ', ' option. For example, to\ntest only against Python 3.7 and Python 3.10, run:', 'in the root of the project source tree.', 'To enable NumPy and Pandas tests, run:', '(this may take a long time the first time, because NumPy and Pandas will\nhave to be installed in the new virtual environments)', 'To fix code formatting:', 'See ', ' file to learn how to use to test\nindividual Python versions.', 'Sergey Astanin, Pau Tallada Crespí, Erwin Marsi, Mik Kocikowski, Bill\nRyder, Zach Dwiel, Frederik Rietdijk, Philipp Bogensberger, Greg\n(anonymous), Stefan Tatschner, Emiel van Miltenburg, Brandon Bennett,\nAmjith Ramanujam, Jan Schulz, Simon Percivall, Javier Santacruz\nLópez-Cepero, Sam Denton, Alexey Ziyangirov, acaird, Cesar Sanchez,\nnaught101, John Vandenberg, Zack Dever, Christian Clauss, Benjamin\nMaier, Andy MacKinlay, Thomas Roten, Jue Wang, Joe King, Samuel Phan,\nNick Satterly, Daniel Robbins, Dmitry B, Lars Butler, Andreas Maier,\nDick Marinus, Sébastien Celles, Yago González, Andrew Gaul, Wim Glenn,\nJean Michel Rouly, Tim Gates, John Vandenberg, Sorin Sbarnea,\nWes Turner, Andrew Tija, Marco Gorelli, Sean McGinnis, danja100,\nendolith, Dominic Davis-Foster, pavlocat, Daniel Aslau, paulc,\nFelix Yan, Shane Loretz, Frank Busse, Harsh Singh, Derek Weitzel,\nVladimir Vrzić, 서승우 (chrd5273), Georgy Frolov, Christian Cwienk,\nBart Broere, Vilhelm Prytz, Alexander Gažo, Hugo van Kemenade,\njamescooke, Matt Warner, Jérôme Provensal, Kevin Deldycke,\nKian-Meng Ang, Kevin Patterson, Shodhan Save, cleoold, KOLANICH,\nVijaya Krishna Kasula, Furcy Pin, Christian Fibich, Shaun Duncan,\nDimitri Papadopoulos.', '\n      Pretty-print tabular data in Python, a library and a command-line utility. Repository migrated from bitbucket.org/astanin/python-tabulate.\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'printing small tables without hassle: just one function call,\nformatting is guided by the data itself', 'authoring tabular data for lightweight plain-text markup: multiple\noutput formats suitable for further editing or transformation', 'readable presentation of mixed textual and numeric data: smart\ncolumn alignment, configurable number formatting, alignment by a\ndecimal point', 'list of lists or another iterable of iterables', 'list or another iterable of dicts (keys as columns)', 'dict of iterables (keys as columns)', 'list of dataclasses (Python 3.7+ only, field names as columns)', 'two-dimensional NumPy array', 'NumPy record arrays (names as columns)', 'pandas.DataFrame', '""plain""', '""simple""', '""github""', '""grid""', '""simple_grid""', '""rounded_grid""', '""heavy_grid""', '""mixed_grid""', '""double_grid""', '""fancy_grid""', '""outline""', '""simple_outline""', '""rounded_outline""', '""heavy_outline""', '""mixed_outline""', '""double_outline""', '""fancy_outline""', '""pipe""', '""orgtbl""', '""asciidoc""', '""jira""', '""presto""', '""pretty""', '""psql""', '""rst""', '""mediawiki""', '""moinmoin""', '""youtrack""', '""html""', '""unsafehtml""', '""latex""', '""latex_raw""', '""latex_booktabs""', '""latex_longtable""', '""textile""', '""tsv""', 'has to ""guess"" how to print a particular tabular data type', 'needs to keep the entire table in-memory', 'has to ""transpose"" the table twice', 'does much more work than it may appear', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n        ', '\n    '])"
