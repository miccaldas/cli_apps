description
 
 
This is a mini-library which, given a package name and a version, checks if it's the latest version available on PyPI.
To install:
This will:
This will 
 check what version is currently installed, it will only use the given version. Library authors must make sure that the version in their 
 matches the version here.
The package name argument must be exactly the name used on PyPI, so that e.g. 
 is a valid URL.
Optional arguments:
 is a boolean which is True if the given version is earlier than the latest version, which is the string 
.
Optional arguments:
This still makes the HTTP call with retries and caches the result on disk. It doesn't use a separate thread or emit any warnings (unless there is an exception specifically while using the cache, in which case the check will be done without the cache).
To disable all warnings from this library, set the environment variable 
 to any non-empty value.
To always raise exceptions instead of converting them to warnings (both in general in 
 and more specifically when there's a caching problem) set the environment variable 
.
The warnings are also categorised so that you can easily control them with standard 
. The classes are 
 and can be imported directly from the 
 module.
This library works by fetching a URL such as 
 - the time it takes to visit that link is essentially the speed of the library. This is much faster than the command 
 or any equivalent code.
description
 
 
This is a mini-library which, given a package name and a version, checks if it's the latest version available on PyPI.
To install:
This will:
This will 
 check what version is currently installed, it will only use the given version. Library authors must make sure that the version in their 
 matches the version here.
The package name argument must be exactly the name used on PyPI, so that e.g. 
 is a valid URL.
Optional arguments:
 is a boolean which is True if the given version is earlier than the latest version, which is the string 
.
Optional arguments:
This still makes the HTTP call with retries and caches the result on disk. It doesn't use a separate thread or emit any warnings (unless there is an exception specifically while using the cache, in which case the check will be done without the cache).
To disable all warnings from this library, set the environment variable 
 to any non-empty value.
To always raise exceptions instead of converting them to warnings (both in general in 
 and more specifically when there's a caching problem) set the environment variable 
.
The warnings are also categorised so that you can easily control them with standard 
. The classes are 
 and can be imported directly from the 
 module.
This library works by fetching a URL such as 
 - the time it takes to visit that link is essentially the speed of the library. This is much faster than the command 
 or any equivalent code.
description
 
 
This is a mini-library which, given a package name and a version, checks if it's the latest version available on PyPI.
To install:
This will:
This will 
 check what version is currently installed, it will only use the given version. Library authors must make sure that the version in their 
 matches the version here.
The package name argument must be exactly the name used on PyPI, so that e.g. 
 is a valid URL.
Optional arguments:
 is a boolean which is True if the given version is earlier than the latest version, which is the string 
.
Optional arguments:
This still makes the HTTP call with retries and caches the result on disk. It doesn't use a separate thread or emit any warnings (unless there is an exception specifically while using the cache, in which case the check will be done without the cache).
To disable all warnings from this library, set the environment variable 
 to any non-empty value.
To always raise exceptions instead of converting them to warnings (both in general in 
 and more specifically when there's a caching problem) set the environment variable 
.
The warnings are also categorised so that you can easily control them with standard 
. The classes are 
 and can be imported directly from the 
 module.
This library works by fetching a URL such as 
 - the time it takes to visit that link is essentially the speed of the library. This is much faster than the command 
 or any equivalent code.
description
 
 
This is a mini-library which, given a package name and a version, checks if it's the latest version available on PyPI.
To install:
This will:
This will 
 check what version is currently installed, it will only use the given version. Library authors must make sure that the version in their 
 matches the version here.
The package name argument must be exactly the name used on PyPI, so that e.g. 
 is a valid URL.
Optional arguments:
 is a boolean which is True if the given version is earlier than the latest version, which is the string 
.
Optional arguments:
This still makes the HTTP call with retries and caches the result on disk. It doesn't use a separate thread or emit any warnings (unless there is an exception specifically while using the cache, in which case the check will be done without the cache).
To disable all warnings from this library, set the environment variable 
 to any non-empty value.
To always raise exceptions instead of converting them to warnings (both in general in 
 and more specifically when there's a caching problem) set the environment variable 
.
The warnings are also categorised so that you can easily control them with standard 
. The classes are 
 and can be imported directly from the 
 module.
This library works by fetching a URL such as 
 - the time it takes to visit that link is essentially the speed of the library. This is much faster than the command 
 or any equivalent code.
