description
Specifications for callback functions passed in to an API
If your code lets other people supply callback functions, it’s important to
specify the function signature you expect, and check that functions support that.
Adding extra parameters later would break other peoples code unless you’re careful.
backcall provides a way of specifying the callback signature using a prototype
function:
If the callback takes fewer parameters than your prototype, 
 will wrap
it in a function that discards the extra arguments. If the callback expects
more arguments, a TypeError is thrown when it is registered.
For more details, see the 
 or
the 
.
The tests are run with 
. In the root directory,
execute:
description
Specifications for callback functions passed in to an API
If your code lets other people supply callback functions, it’s important to
specify the function signature you expect, and check that functions support that.
Adding extra parameters later would break other peoples code unless you’re careful.
backcall provides a way of specifying the callback signature using a prototype
function:
If the callback takes fewer parameters than your prototype, 
 will wrap
it in a function that discards the extra arguments. If the callback expects
more arguments, a TypeError is thrown when it is registered.
For more details, see the 
 or
the 
.
The tests are run with 
. In the root directory,
execute:
description
Specifications for callback functions passed in to an API
If your code lets other people supply callback functions, it’s important to
specify the function signature you expect, and check that functions support that.
Adding extra parameters later would break other peoples code unless you’re careful.
backcall provides a way of specifying the callback signature using a prototype
function:
If the callback takes fewer parameters than your prototype, 
 will wrap
it in a function that discards the extra arguments. If the callback expects
more arguments, a TypeError is thrown when it is registered.
For more details, see the 
 or
the 
.
The tests are run with 
. In the root directory,
execute:
description
Specifications for callback functions passed in to an API
If your code lets other people supply callback functions, it’s important to
specify the function signature you expect, and check that functions support that.
Adding extra parameters later would break other peoples code unless you’re careful.
backcall provides a way of specifying the callback signature using a prototype
function:
If the callback takes fewer parameters than your prototype, 
 will wrap
it in a function that discards the extra arguments. If the callback expects
more arguments, a TypeError is thrown when it is registered.
For more details, see the 
 or
the 
.
The tests are run with 
. In the root directory,
execute:
