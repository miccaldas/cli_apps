

"Procrastinate is an open-source Python 3.7+ distributed task processing
library, leveraging PostgreSQL to store task definitions, manage locks and
dispatch tasks. It can be used within both sync and async code."
"In other words, from your main code, you call specific functions (tasks) in a
special way and instead of being run on the spot, they’re scheduled to
be run elsewhere, now or in the future."
Here’s an example:
"The worker will run the job, which will create a text file
named "
 with the result of the sum 
 (that’s 
).
"Similarly, from the command line:"
"Lastly, you can use Procrastinate asynchronously too:"
"There are quite a few interesting features that Procrastinate adds to the mix.
You can head to the Quickstart section for a general tour or
to the How-To sections for specific features. The Discussion
section should hopefully answer your questions. Otherwise,
feel free to open an "
.
The project is still quite early-stage and will probably evolve.
"
“"
”.


"Procrastinate is an open-source Python 3.7+ distributed task processing
library, leveraging PostgreSQL to store task definitions, manage locks and
dispatch tasks. It can be used within both sync and async code."
"In other words, from your main code, you call specific functions (tasks) in a
special way and instead of being run on the spot, they’re scheduled to
be run elsewhere, now or in the future."
Here’s an example:
"The worker will run the job, which will create a text file
named "
 with the result of the sum 
 (that’s 
).
"Similarly, from the command line:"
"Lastly, you can use Procrastinate asynchronously too:"
"There are quite a few interesting features that Procrastinate adds to the mix.
You can head to the Quickstart section for a general tour or
to the How-To sections for specific features. The Discussion
section should hopefully answer your questions. Otherwise,
feel free to open an "
.
The project is still quite early-stage and will probably evolve.
"
“"
”.


"Procrastinate is an open-source Python 3.7+ distributed task processing
library, leveraging PostgreSQL to store task definitions, manage locks and
dispatch tasks. It can be used within both sync and async code."
"In other words, from your main code, you call specific functions (tasks) in a
special way and instead of being run on the spot, they’re scheduled to
be run elsewhere, now or in the future."
Here’s an example:
"The worker will run the job, which will create a text file
named "
 with the result of the sum 
 (that’s 
).
"Similarly, from the command line:"
"Lastly, you can use Procrastinate asynchronously too:"
"There are quite a few interesting features that Procrastinate adds to the mix.
You can head to the Quickstart section for a general tour or
to the How-To sections for specific features. The Discussion
section should hopefully answer your questions. Otherwise,
feel free to open an "
.
The project is still quite early-stage and will probably evolve.
"
“"
”.


"Procrastinate is an open-source Python 3.7+ distributed task processing
library, leveraging PostgreSQL to store task definitions, manage locks and
dispatch tasks. It can be used within both sync and async code."
"In other words, from your main code, you call specific functions (tasks) in a
special way and instead of being run on the spot, they’re scheduled to
be run elsewhere, now or in the future."
Here’s an example:
"The worker will run the job, which will create a text file
named "
 with the result of the sum 
 (that’s 
).
"Similarly, from the command line:"
"Lastly, you can use Procrastinate asynchronously too:"
"There are quite a few interesting features that Procrastinate adds to the mix.
You can head to the Quickstart section for a general tour or
to the How-To sections for specific features. The Discussion
section should hopefully answer your questions. Otherwise,
feel free to open an "
.
The project is still quite early-stage and will probably evolve.
"
“"
”.
