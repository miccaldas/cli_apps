description""Python extension that wraps protocol parsing code in ".It primarily speeds up parsing of multi bulk replies."hiredis-py is available on ", and canbe installed with:"hiredis-py requires ."Make sure Python development headers are available when installing hiredis-py.On Ubuntu/Debian systems, install them with ".The  module contains the " class. This class is responsible forparsing replies from the stream of data that is read from a Redis connection.It does not contain functionality to handle I/O."The " class has two methods that are used when parsing replies from astream of data. "" takes a string argument that is appended to theinternal buffer. "" reads this buffer and returns a reply when thebuffer contains a full reply. If a single call to "" contains multiplereplies, " should be called multiple times to extract all replies.Example:"When the buffer does not contain a full reply, " returns ". Thismeans extra data is needed and "" should be called again before calling" again:" is able to decode bulk data to any encoding Python supports.To do so, specify the encoding you want to use for decoding replies wheninitializing it:""Decoding of bulk data will be attempted using the specified encoding anderror handler. If the error handler is "" (the default), a"" is raised when data cannot be dedcoded. This is identicalto Python's default behavior. Other valid values to "" include"", "", and "". More information on thebehavior of these error handlers can be found"."When the specified encoding cannot be found, a "" will be raisedwhen calling " for the first reply with bulk data."When a protocol error occurs (because of multiple threads using the samesocket, or some other condition that causes a corrupt stream), the error"" is raised. Because the buffer is read in a lazyfashion, it will only be raised when "" is called and the first reply inthe buffer contains an error. There is no way to recover from a faulty protocolstate, so when this happens, the I/O code feeding data to "" shouldprobably reconnect."Redis can reply with error replies ("). For these replies, the customerror class "" is returned, "."When other error types should be used (so existing code doesn't have to changeits "" clauses), " can be initialized with the " and" keywords. These keywords should contain a " that is asubclass of "". When not provided, "" will use the defaulterror types."The repository contains a benchmarking script in the " directory,which uses "" to have non-blocking I/O and redis-pyto handle connections. These benchmarks are done with a patched version ofredis-py that uses hiredis-py when it is available."All benchmarks are done with 10 concurrent connections.List entries in the following tests are 5 bytes."Throughput improvement for simple SET/GET is minimal, but the larger multi bulk repliesget, the larger the performance improvement is.""This code is released under the BSD license, after the license of hiredis."description""Python extension that wraps protocol parsing code in ".It primarily speeds up parsing of multi bulk replies."hiredis-py is available on ", and canbe installed with:"hiredis-py requires ."Make sure Python development headers are available when installing hiredis-py.On Ubuntu/Debian systems, install them with ".The  module contains the " class. This class is responsible forparsing replies from the stream of data that is read from a Redis connection.It does not contain functionality to handle I/O."The " class has two methods that are used when parsing replies from astream of data. "" takes a string argument that is appended to theinternal buffer. "" reads this buffer and returns a reply when thebuffer contains a full reply. If a single call to "" contains multiplereplies, " should be called multiple times to extract all replies.Example:"When the buffer does not contain a full reply, " returns ". Thismeans extra data is needed and "" should be called again before calling" again:" is able to decode bulk data to any encoding Python supports.To do so, specify the encoding you want to use for decoding replies wheninitializing it:""Decoding of bulk data will be attempted using the specified encoding anderror handler. If the error handler is "" (the default), a"" is raised when data cannot be dedcoded. This is identicalto Python's default behavior. Other valid values to "" include"", "", and "". More information on thebehavior of these error handlers can be found"."When the specified encoding cannot be found, a "" will be raisedwhen calling " for the first reply with bulk data."When a protocol error occurs (because of multiple threads using the samesocket, or some other condition that causes a corrupt stream), the error"" is raised. Because the buffer is read in a lazyfashion, it will only be raised when "" is called and the first reply inthe buffer contains an error. There is no way to recover from a faulty protocolstate, so when this happens, the I/O code feeding data to "" shouldprobably reconnect."Redis can reply with error replies ("). For these replies, the customerror class "" is returned, "."When other error types should be used (so existing code doesn't have to changeits "" clauses), " can be initialized with the " and" keywords. These keywords should contain a " that is asubclass of "". When not provided, "" will use the defaulterror types."The repository contains a benchmarking script in the " directory,which uses "" to have non-blocking I/O and redis-pyto handle connections. These benchmarks are done with a patched version ofredis-py that uses hiredis-py when it is available."All benchmarks are done with 10 concurrent connections.List entries in the following tests are 5 bytes."Throughput improvement for simple SET/GET is minimal, but the larger multi bulk repliesget, the larger the performance improvement is.""This code is released under the BSD license, after the license of hiredis."description""Python extension that wraps protocol parsing code in ".It primarily speeds up parsing of multi bulk replies."hiredis-py is available on ", and canbe installed with:"hiredis-py requires ."Make sure Python development headers are available when installing hiredis-py.On Ubuntu/Debian systems, install them with ".The  module contains the " class. This class is responsible forparsing replies from the stream of data that is read from a Redis connection.It does not contain functionality to handle I/O."The " class has two methods that are used when parsing replies from astream of data. "" takes a string argument that is appended to theinternal buffer. "" reads this buffer and returns a reply when thebuffer contains a full reply. If a single call to "" contains multiplereplies, " should be called multiple times to extract all replies.Example:"When the buffer does not contain a full reply, " returns ". Thismeans extra data is needed and "" should be called again before calling" again:" is able to decode bulk data to any encoding Python supports.To do so, specify the encoding you want to use for decoding replies wheninitializing it:""Decoding of bulk data will be attempted using the specified encoding anderror handler. If the error handler is "" (the default), a"" is raised when data cannot be dedcoded. This is identicalto Python's default behavior. Other valid values to "" include"", "", and "". More information on thebehavior of these error handlers can be found"."When the specified encoding cannot be found, a "" will be raisedwhen calling " for the first reply with bulk data."When a protocol error occurs (because of multiple threads using the samesocket, or some other condition that causes a corrupt stream), the error"" is raised. Because the buffer is read in a lazyfashion, it will only be raised when "" is called and the first reply inthe buffer contains an error. There is no way to recover from a faulty protocolstate, so when this happens, the I/O code feeding data to "" shouldprobably reconnect."Redis can reply with error replies ("). For these replies, the customerror class "" is returned, "."When other error types should be used (so existing code doesn't have to changeits "" clauses), " can be initialized with the " and" keywords. These keywords should contain a " that is asubclass of "". When not provided, "" will use the defaulterror types."The repository contains a benchmarking script in the " directory,which uses "" to have non-blocking I/O and redis-pyto handle connections. These benchmarks are done with a patched version ofredis-py that uses hiredis-py when it is available."All benchmarks are done with 10 concurrent connections.List entries in the following tests are 5 bytes."Throughput improvement for simple SET/GET is minimal, but the larger multi bulk repliesget, the larger the performance improvement is.""This code is released under the BSD license, after the license of hiredis."description""Python extension that wraps protocol parsing code in ".It primarily speeds up parsing of multi bulk replies."hiredis-py is available on ", and canbe installed with:"hiredis-py requires ."Make sure Python development headers are available when installing hiredis-py.On Ubuntu/Debian systems, install them with ".The  module contains the " class. This class is responsible forparsing replies from the stream of data that is read from a Redis connection.It does not contain functionality to handle I/O."The " class has two methods that are used when parsing replies from astream of data. "" takes a string argument that is appended to theinternal buffer. "" reads this buffer and returns a reply when thebuffer contains a full reply. If a single call to "" contains multiplereplies, " should be called multiple times to extract all replies.Example:"When the buffer does not contain a full reply, " returns ". Thismeans extra data is needed and "" should be called again before calling" again:" is able to decode bulk data to any encoding Python supports.To do so, specify the encoding you want to use for decoding replies wheninitializing it:""Decoding of bulk data will be attempted using the specified encoding anderror handler. If the error handler is "" (the default), a"" is raised when data cannot be dedcoded. This is identicalto Python's default behavior. Other valid values to "" include"", "", and "". More information on thebehavior of these error handlers can be found"."When the specified encoding cannot be found, a "" will be raisedwhen calling " for the first reply with bulk data."When a protocol error occurs (because of multiple threads using the samesocket, or some other condition that causes a corrupt stream), the error"" is raised. Because the buffer is read in a lazyfashion, it will only be raised when "" is called and the first reply inthe buffer contains an error. There is no way to recover from a faulty protocolstate, so when this happens, the I/O code feeding data to "" shouldprobably reconnect."Redis can reply with error replies ("). For these replies, the customerror class "" is returned, "."When other error types should be used (so existing code doesn't have to changeits "" clauses), " can be initialized with the " and" keywords. These keywords should contain a " that is asubclass of "". When not provided, "" will use the defaulterror types."The repository contains a benchmarking script in the " directory,which uses "" to have non-blocking I/O and redis-pyto handle connections. These benchmarks are done with a patched version ofredis-py that uses hiredis-py when it is available."All benchmarks are done with 10 concurrent connections.List entries in the following tests are 5 bytes."Throughput improvement for simple SET/GET is minimal, but the larger multi bulk repliesget, the larger the performance improvement is.""This code is released under the BSD license, after the license of hiredis."