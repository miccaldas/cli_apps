description
 
birdseye is a Python debugger which records the values of expressions in a
function call and lets you easily view them after the function exits.
For example:
You can use birdseye no matter how you run or edit your code. Just 
, add the 
 decorator
as seen above, run your function however you like, and view the results in your browser.
It’s also 
 for a smoother experience.
Rather than stepping through lines, move back and forth through loop
iterations and see how the values of selected expressions change:
See which expressions raise exceptions, even if they’re suppressed:
Expand concrete data structures and objects to see their contents.
Lengths and depths are limited to avoid an overload of data.
Calls are organised into functions (which are organised into files) and
ordered by time, letting you see what happens at a glance:
 
description
 
birdseye is a Python debugger which records the values of expressions in a
function call and lets you easily view them after the function exits.
For example:
You can use birdseye no matter how you run or edit your code. Just 
, add the 
 decorator
as seen above, run your function however you like, and view the results in your browser.
It’s also 
 for a smoother experience.
Rather than stepping through lines, move back and forth through loop
iterations and see how the values of selected expressions change:
See which expressions raise exceptions, even if they’re suppressed:
Expand concrete data structures and objects to see their contents.
Lengths and depths are limited to avoid an overload of data.
Calls are organised into functions (which are organised into files) and
ordered by time, letting you see what happens at a glance:
 
description
 
birdseye is a Python debugger which records the values of expressions in a
function call and lets you easily view them after the function exits.
For example:
You can use birdseye no matter how you run or edit your code. Just 
, add the 
 decorator
as seen above, run your function however you like, and view the results in your browser.
It’s also 
 for a smoother experience.
Rather than stepping through lines, move back and forth through loop
iterations and see how the values of selected expressions change:
See which expressions raise exceptions, even if they’re suppressed:
Expand concrete data structures and objects to see their contents.
Lengths and depths are limited to avoid an overload of data.
Calls are organised into functions (which are organised into files) and
ordered by time, letting you see what happens at a glance:
 
description
 
birdseye is a Python debugger which records the values of expressions in a
function call and lets you easily view them after the function exits.
For example:
You can use birdseye no matter how you run or edit your code. Just 
, add the 
 decorator
as seen above, run your function however you like, and view the results in your browser.
It’s also 
 for a smoother experience.
Rather than stepping through lines, move back and forth through loop
iterations and see how the values of selected expressions change:
See which expressions raise exceptions, even if they’re suppressed:
Expand concrete data structures and objects to see their contents.
Lengths and depths are limited to avoid an overload of data.
Calls are organised into functions (which are organised into files) and
ordered by time, letting you see what happens at a glance:
 
