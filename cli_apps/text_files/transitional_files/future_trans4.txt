description" is the missing compatibility layer between Python 2 and Python3. It allows you to use a single, clean Python 3.x-compatible codebase tosupport both Python 2 and Python 3 with minimal overhead."It is designed to be used as follows:"followed by predominantly standard, idiomatic Python 3 code that then runssimilarly on Python 2.6/2.7 and Python 3.3+.""The imports have no effect on Python 3. On Python 2, they shadow thecorresponding builtins, which normally have different semantics on Python 3versus 2, to provide their Python 3 semantics."description" is the missing compatibility layer between Python 2 and Python3. It allows you to use a single, clean Python 3.x-compatible codebase tosupport both Python 2 and Python 3 with minimal overhead."It is designed to be used as follows:"followed by predominantly standard, idiomatic Python 3 code that then runssimilarly on Python 2.6/2.7 and Python 3.3+.""The imports have no effect on Python 3. On Python 2, they shadow thecorresponding builtins, which normally have different semantics on Python 3versus 2, to provide their Python 3 semantics."description" is the missing compatibility layer between Python 2 and Python3. It allows you to use a single, clean Python 3.x-compatible codebase tosupport both Python 2 and Python 3 with minimal overhead."It is designed to be used as follows:"followed by predominantly standard, idiomatic Python 3 code that then runssimilarly on Python 2.6/2.7 and Python 3.3+.""The imports have no effect on Python 3. On Python 2, they shadow thecorresponding builtins, which normally have different semantics on Python 3versus 2, to provide their Python 3 semantics."description" is the missing compatibility layer between Python 2 and Python3. It allows you to use a single, clean Python 3.x-compatible codebase tosupport both Python 2 and Python 3 with minimal overhead."It is designed to be used as follows:"followed by predominantly standard, idiomatic Python 3 code that then runssimilarly on Python 2.6/2.7 and Python 3.3+.""The imports have no effect on Python 3. On Python 2, they shadow thecorresponding builtins, which normally have different semantics on Python 3versus 2, to provide their Python 3 semantics."