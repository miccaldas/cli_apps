description
 is the Python package that will bring back the 
 of 
 by relieving you from the drudgery of implementing object protocols (aka 
").
"
 for Mars missions since 2020!
Its main goal is to help you to write 
 and 
 software without slowing down your code.
"For that, it gives you a class decorator and a way to declaratively define the attributes on that class:"
After 
 your attributes 
 gives you:
 writing dull boilerplate code again and again and 
 runtime performance penalties.
"!?
No problem!
Types are entirely "
 with 
".
Simply assign "
 to the attributes instead of annotating them with types.
This example uses 
"’s modern APIs that have been introduced in version 20.1.0, and the "
" package import name that has been added in version 21.3.0.
The classic APIs ("
", "
", plus their serious business aliases) and the "
 package import name will remain 
.
Please check out 
 for a more in-depth explanation.
description
 is the Python package that will bring back the 
 of 
 by relieving you from the drudgery of implementing object protocols (aka 
").
"
 for Mars missions since 2020!
Its main goal is to help you to write 
 and 
 software without slowing down your code.
"For that, it gives you a class decorator and a way to declaratively define the attributes on that class:"
After 
 your attributes 
 gives you:
 writing dull boilerplate code again and again and 
 runtime performance penalties.
"!?
No problem!
Types are entirely "
 with 
".
Simply assign "
 to the attributes instead of annotating them with types.
This example uses 
"’s modern APIs that have been introduced in version 20.1.0, and the "
" package import name that has been added in version 21.3.0.
The classic APIs ("
", "
", plus their serious business aliases) and the "
 package import name will remain 
.
Please check out 
 for a more in-depth explanation.
description
 is the Python package that will bring back the 
 of 
 by relieving you from the drudgery of implementing object protocols (aka 
").
"
 for Mars missions since 2020!
Its main goal is to help you to write 
 and 
 software without slowing down your code.
"For that, it gives you a class decorator and a way to declaratively define the attributes on that class:"
After 
 your attributes 
 gives you:
 writing dull boilerplate code again and again and 
 runtime performance penalties.
"!?
No problem!
Types are entirely "
 with 
".
Simply assign "
 to the attributes instead of annotating them with types.
This example uses 
"’s modern APIs that have been introduced in version 20.1.0, and the "
" package import name that has been added in version 21.3.0.
The classic APIs ("
", "
", plus their serious business aliases) and the "
 package import name will remain 
.
Please check out 
 for a more in-depth explanation.
description
 is the Python package that will bring back the 
 of 
 by relieving you from the drudgery of implementing object protocols (aka 
").
"
 for Mars missions since 2020!
Its main goal is to help you to write 
 and 
 software without slowing down your code.
"For that, it gives you a class decorator and a way to declaratively define the attributes on that class:"
After 
 your attributes 
 gives you:
 writing dull boilerplate code again and again and 
 runtime performance penalties.
"!?
No problem!
Types are entirely "
 with 
".
Simply assign "
 to the attributes instead of annotating them with types.
This example uses 
"’s modern APIs that have been introduced in version 20.1.0, and the "
" package import name that has been added in version 21.3.0.
The classic APIs ("
", "
", plus their serious business aliases) and the "
 package import name will remain 
.
Please check out 
 for a more in-depth explanation.
