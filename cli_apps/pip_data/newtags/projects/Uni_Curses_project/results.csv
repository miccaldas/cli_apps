content
"(['unicurses/unicurses', 'Name already in use', 'UniCurses', '(MS Windows, FreeBSD, Linux, and Mac OS X)', '(as opposed to the original ', ' module which does not work on Microsoft Windows)', '(', ')', '(', ')', '(', ')', '(', ')'], ['\n        Github fork for unicurses\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'UNICURSES (C) 2010 by Michael Kamensky (Agetian) | Maintainer, George Chousos 2021 | ', '\nReleased as Free Software under the terms of General Public License (GPL) v3', 'Unified Curses Wrapper for Python on Windows, FreeBSD, Linux, and Mac OS X', 'UniCurses is a Python module that is aimed at providing the Curses functionality on all operating systems ', ' using a unified set of commands that are syntactically close to the native C Curses functions. UniCurses strives to be as platform-independent as possible, not only by working on all operating systems ', ' but also by ensuring compatibility both with the older (v2.x) and the newer (v3.x) versions of Python.\nUniCurses is compatible with any Python distribution starting with version 2.6.1, including the newly released v2.7 and all the versions released so far in the Python 3 line, including v3.0.x and v3.1.x.', 'On Microsoft Windows, UniCurses operates by wrapping a curses library known as ', ', or PDCurses. The dynamic link library for PDCurses is called ', '. UniCurses is compatible with all flavors of PDCurses, including:', 'Depending on whether you want your applications to run in a real Windows terminal window or in an emulated fake SDL window you can either use one of the common ones or the SDL one.', 'if you want to experiment with or use a newer version of PDCurses, you can build your own binaries by downloading the source code from the official link below:\n', ""NOTE: While it may be possible to use UniCurses with an older version of Python (v2.6.1) or PDCurses (v3.4) than officially listed as compatible, it has not been tested with such versions of software and as such it's impossible to guarantee that your configuration will work correctly or that you would not have to take extra steps and install additional packages in order to make your configuration work at least in part. It's highly recommended that you upgrade to the latest versions of Python and PDCurses before you install and start using UniCurses."", ""^ if this won't work and you get "", ' try specifying the python version like:', 'or if you want to use the latest release, download the files from this repository, open your terminal and cd/navigate to the folder and then execute the below:', 'OR:', ""It's recommended that you use the first form of the expression so you do not need to precede each curses command in your program with the "", ' prefix to refer to the proper namespace.\nNOTE: If importing UniCurses is unsuccessful, you will be presented with a message describing the cause of failure and your program will terminate. The most common cause is the absence of the PDCurses dynamic link library in the program folder while running on Microsoft Windows. Correct the problem and try again.\nHINT: In order to make sure that UniCurses works correctly on your platform, run the test scripts that come bundled with the UniCurses package (many of them are ports of examples from the awesome ""NCURSES Programming HOWTO"" by Pradeep Padala). They should all run successfully and not crash with an error message.', 'While UniCurses tries to stay as faithful to the original C syntax of curses functions as possible, there are certain important differences and peculiarities that you must be aware of when writing programs using UniCurses.\nFirst of all, the function used to initialize curses (initscr) must be called in a special way with an assignment to a variable named ', '. Therefore, instead of just calling ', ' you must use the following expression verbatim:', 'In case you do not follow the above-mentioned convention and do not assign the result of initscr to the variable stdscr, or change the name of the variable from stdscr to anything else, your script or program will fail to work properly and will terminate with an exception. Therefore:', 'After the curses is initialized with an expression above, you can use any of the functions provided by UniCurses in a manner similar to the way you would use them with any other standard curses implementation, such as NCurses or PDCurses. Please take a look at the example test scripts (', ') and read the Curses manuals, such as the NCurses HOWTO, in order to learn about how to work with curses.', 'Here is a list of Curses functions that are provided by UniCurses. Most of them use the same syntax as their Ncurses/PDCurses counterparts, some functions are similar to the ones used in the ', ' module in Python (on Linux/Mac OS X), and som functions are specific to Unicurses. The differences in syntax from the standard Ncurses/PDCurses, as well as portability issues, will in most cases be noted separately.\nNOTE 1: Optional parameters will be listed in square brackets.\nNOTE 2: If you use any functions that are listed as not cross-platform, your program or script will not be compatible with all the operating systems and may crash on systems that are not compatible. Try to avoid using non-crossplatform functions in your scripts and programs if possible!', 'The functions that are cross-platform and safe to use:', 'The functions from the Panel module of Curses (fully cross-platform):', 'The following functions are specific to UniCurses, they are completely cross-\nplatform and they make the Curses functions easier to use:', 'The functions that are NOT cross-platform and are only available on Linux:', 'IMPORTANT: The following functions are generally portable and may be used on all platforms, but their output or effect may differ depending on the platform. It is up to the programmer to ascertain that the program behaves in the same way on all necessary platforms if these functions are used:\ninsdelln, insertln, winsdelln, winsertln, noutrefresh, setscrreg, unctrl.', 'UniCurses provides the following constants on all platforms:', 'Function return values:', 'Attributes:', 'Colors:', 'Alternate Character Set:', 'Keyboard and Mouse:', 'The following features are not yet completely implemented or may have bugs:', '\n      Github fork for unicurses\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'The standard terminal PDCurses ', '.', 'The SDL PDCurses running in a fake terminal ', '.', 'The PDCurses with wide-character (Unicode) support ', '.', 'The PDCurses with wide-character (Unicode)/UTF-8 support ', '.', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', 'Using localized characters in text strings (tested on PDCurses in Windows but may cause problems under Linux and Mac OS X).', 'The module ', ' (curses.textpad) has not yet been ported to UniCurses.', 'Many UniCurses functions return ', ' in case an error occurs while executing them. This behavior is the same across all platforms (note that it\'s different from the method used in the original ""curses"" Python module, where an exception is thrown in case of an error).', ""Even though UniCurses tends to unify the behavior of commands across various platforms, certain functions may in rare cases provide slightly different output depending on the implementation of Curses used on each particular platform. While such cases are relatively rare and are typically not fatal, it's the responsibility of the author of each particular program that uses UniCurses to test and ensure that his/her program works consistently across various platforms."", ""Even though UniCurses itself is compatible both with Python 2.x and Python 3.x, the target programs written using UniCurses don't have to be (and most often won't be). It's possible to write an exclusively Python 2 and an exclusively Python 3 program using UniCurses, as well as a Python-independent one in case your program does not use any language syntax or modules that are only present in either Python 2 or Python 3."", '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    '])"
content
"(['unicurses/unicurses', 'Name already in use', 'UniCurses', '(MS Windows, FreeBSD, Linux, and Mac OS X)', '(as opposed to the original ', ' module which does not work on Microsoft Windows)', '(', ')', '(', ')', '(', ')', '(', ')'], ['\n        Github fork for unicurses\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'UNICURSES (C) 2010 by Michael Kamensky (Agetian) | Maintainer, George Chousos 2021 | ', '\nReleased as Free Software under the terms of General Public License (GPL) v3', 'Unified Curses Wrapper for Python on Windows, FreeBSD, Linux, and Mac OS X', 'UniCurses is a Python module that is aimed at providing the Curses functionality on all operating systems ', ' using a unified set of commands that are syntactically close to the native C Curses functions. UniCurses strives to be as platform-independent as possible, not only by working on all operating systems ', ' but also by ensuring compatibility both with the older (v2.x) and the newer (v3.x) versions of Python.\nUniCurses is compatible with any Python distribution starting with version 2.6.1, including the newly released v2.7 and all the versions released so far in the Python 3 line, including v3.0.x and v3.1.x.', 'On Microsoft Windows, UniCurses operates by wrapping a curses library known as ', ', or PDCurses. The dynamic link library for PDCurses is called ', '. UniCurses is compatible with all flavors of PDCurses, including:', 'Depending on whether you want your applications to run in a real Windows terminal window or in an emulated fake SDL window you can either use one of the common ones or the SDL one.', 'if you want to experiment with or use a newer version of PDCurses, you can build your own binaries by downloading the source code from the official link below:\n', ""NOTE: While it may be possible to use UniCurses with an older version of Python (v2.6.1) or PDCurses (v3.4) than officially listed as compatible, it has not been tested with such versions of software and as such it's impossible to guarantee that your configuration will work correctly or that you would not have to take extra steps and install additional packages in order to make your configuration work at least in part. It's highly recommended that you upgrade to the latest versions of Python and PDCurses before you install and start using UniCurses."", ""^ if this won't work and you get "", ' try specifying the python version like:', 'or if you want to use the latest release, download the files from this repository, open your terminal and cd/navigate to the folder and then execute the below:', 'OR:', ""It's recommended that you use the first form of the expression so you do not need to precede each curses command in your program with the "", ' prefix to refer to the proper namespace.\nNOTE: If importing UniCurses is unsuccessful, you will be presented with a message describing the cause of failure and your program will terminate. The most common cause is the absence of the PDCurses dynamic link library in the program folder while running on Microsoft Windows. Correct the problem and try again.\nHINT: In order to make sure that UniCurses works correctly on your platform, run the test scripts that come bundled with the UniCurses package (many of them are ports of examples from the awesome ""NCURSES Programming HOWTO"" by Pradeep Padala). They should all run successfully and not crash with an error message.', 'While UniCurses tries to stay as faithful to the original C syntax of curses functions as possible, there are certain important differences and peculiarities that you must be aware of when writing programs using UniCurses.\nFirst of all, the function used to initialize curses (initscr) must be called in a special way with an assignment to a variable named ', '. Therefore, instead of just calling ', ' you must use the following expression verbatim:', 'In case you do not follow the above-mentioned convention and do not assign the result of initscr to the variable stdscr, or change the name of the variable from stdscr to anything else, your script or program will fail to work properly and will terminate with an exception. Therefore:', 'After the curses is initialized with an expression above, you can use any of the functions provided by UniCurses in a manner similar to the way you would use them with any other standard curses implementation, such as NCurses or PDCurses. Please take a look at the example test scripts (', ') and read the Curses manuals, such as the NCurses HOWTO, in order to learn about how to work with curses.', 'Here is a list of Curses functions that are provided by UniCurses. Most of them use the same syntax as their Ncurses/PDCurses counterparts, some functions are similar to the ones used in the ', ' module in Python (on Linux/Mac OS X), and som functions are specific to Unicurses. The differences in syntax from the standard Ncurses/PDCurses, as well as portability issues, will in most cases be noted separately.\nNOTE 1: Optional parameters will be listed in square brackets.\nNOTE 2: If you use any functions that are listed as not cross-platform, your program or script will not be compatible with all the operating systems and may crash on systems that are not compatible. Try to avoid using non-crossplatform functions in your scripts and programs if possible!', 'The functions that are cross-platform and safe to use:', 'The functions from the Panel module of Curses (fully cross-platform):', 'The following functions are specific to UniCurses, they are completely cross-\nplatform and they make the Curses functions easier to use:', 'The functions that are NOT cross-platform and are only available on Linux:', 'IMPORTANT: The following functions are generally portable and may be used on all platforms, but their output or effect may differ depending on the platform. It is up to the programmer to ascertain that the program behaves in the same way on all necessary platforms if these functions are used:\ninsdelln, insertln, winsdelln, winsertln, noutrefresh, setscrreg, unctrl.', 'UniCurses provides the following constants on all platforms:', 'Function return values:', 'Attributes:', 'Colors:', 'Alternate Character Set:', 'Keyboard and Mouse:', 'The following features are not yet completely implemented or may have bugs:', '\n      Github fork for unicurses\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'The standard terminal PDCurses ', '.', 'The SDL PDCurses running in a fake terminal ', '.', 'The PDCurses with wide-character (Unicode) support ', '.', 'The PDCurses with wide-character (Unicode)/UTF-8 support ', '.', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', 'Using localized characters in text strings (tested on PDCurses in Windows but may cause problems under Linux and Mac OS X).', 'The module ', ' (curses.textpad) has not yet been ported to UniCurses.', 'Many UniCurses functions return ', ' in case an error occurs while executing them. This behavior is the same across all platforms (note that it\'s different from the method used in the original ""curses"" Python module, where an exception is thrown in case of an error).', ""Even though UniCurses tends to unify the behavior of commands across various platforms, certain functions may in rare cases provide slightly different output depending on the implementation of Curses used on each particular platform. While such cases are relatively rare and are typically not fatal, it's the responsibility of the author of each particular program that uses UniCurses to test and ensure that his/her program works consistently across various platforms."", ""Even though UniCurses itself is compatible both with Python 2.x and Python 3.x, the target programs written using UniCurses don't have to be (and most often won't be). It's possible to write an exclusively Python 2 and an exclusively Python 3 program using UniCurses, as well as a Python-independent one in case your program does not use any language syntax or modules that are only present in either Python 2 or Python 3."", '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    '])"
