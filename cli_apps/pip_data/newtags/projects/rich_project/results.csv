content
"(['Textualize/rich', 'Name already in use', 'Rich Library', 'Rich CLI', 'Textual', 'Projects using Rich', 'rich', 'renderables'], ['\n        Rich is a Python library for rich text and beautiful formatting in the terminal.\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', ' ', '\n', '\n', '\n', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', 'Rich is a Python library for ', ' text and beautiful formatting in the terminal.', 'The ', ' makes it easy to add color and style to terminal output. Rich can also render pretty tables, progress bars, markdown, syntax highlighted source code, tracebacks, and more — out of the box.', 'For a video introduction to Rich see ', ' by ', '.', 'See what ', '.', 'Rich works with Linux, OSX, and Windows. True color / emoji works with new Windows Terminal, classic terminal is limited to 16 colors. Rich requires Python 3.7 or later.', 'Rich works with ', ' with no additional configuration required.', 'Install with ', ' or your favorite PyPI package manager.', 'Run the following to test Rich output on your terminal:', 'To effortlessly add rich output to your application, you can import the ', ' method, which has the same signature as the builtin Python function. Try this:', 'Rich can be installed in the Python REPL, so that any data structures will be pretty printed and highlighted.', 'For more control over rich terminal content, import and construct a ', ' object.', 'The Console object has a ', ' method which has an intentionally similar interface to the builtin ', "" function. Here's an example of use:"", 'As you might expect, this will print ', ' to the terminal. Note that unlike the builtin ', ' function, Rich will word-wrap your text to fit within the terminal width.', 'There are a few ways of adding color and style to your output. You can set a style for the entire output by adding a ', "" keyword argument. Here's an example:"", 'The output will be something like the following:', ""That's fine for styling a line of text at a time. For more finely grained styling, Rich renders a special markup which is similar in syntax to "", "". Here's an example:"", 'You can use a Console object to generate sophisticated output with minimal effort. See the ', ' docs for details.', 'Rich has an ', ' function which can produce a report on any Python object, such as class, instance, or builtin.', 'See the ', ' for details.', 'Rich contains a number of builtin ', ' you can use to create elegant output in your CLI and help you debug your code.', 'Click the following headings for details:', 'The Console object has a ', ' method which has a similar interface to ', "", but also renders a column for the current time and the file and line which made the call. By default Rich will do syntax highlighting for Python structures and for repr strings. If you log a collection (i.e. a dict or a list) Rich will pretty print it so that it fits in the available space. Here's an example of some of these features."", 'The above produces the following output:', 'Note the ', ' argument, which outputs a table containing the local variables where the log method was called.', 'The log method could be used for logging to the terminal for long running applications such as servers, but is also a very nice debugging aid.', 'You can also use the builtin ', "" to format and colorize output from Python's logging module. Here's an example of the output:"", ""To insert an emoji in to console output place the name between two colons. Here's an example:"", 'Please use this feature wisely.', 'Rich can render flexible ', ' with unicode box characters. There is a large variety of formatting options for borders, styles, cell alignment etc.', 'The animation above was generated with ', ' in the examples directory.', ""Here's a simpler table example:"", 'This produces the following output:', 'Note that console markup is rendered in the same way as ', ' and ', '. In fact, anything that is renderable by Rich may be included in the headers / rows (even other tables).', 'The ', "" class is smart enough to resize columns to fit the available width of the terminal, wrapping text as required. Here's the same example, with the terminal made smaller than the table above:"", 'Rich can render multiple flicker-free ', ' bars to track long-running tasks.', 'For basic usage, wrap any sequence in the ', "" function and iterate over the result. Here's an example:"", ""It's not much harder to add multiple progress bars. Here's an example taken from the docs:"", ""The columns may be configured to show any details you want. Built-in columns include percentage complete, file size, file speed, and time remaining. Here's another example showing a download in progress:"", 'To try this out yourself, see ', ' which can download multiple URLs simultaneously while displaying progress.', 'For situations where it is hard to calculate progress, you can use the ', "" method which will display a 'spinner' animation and message. The animation won't prevent you from using the console as normal. Here's an example:"", 'This generates the following output in the terminal.', 'The spinner animations were borrowed from ', '. You can select a spinner by specifying the ', ' parameter. Run the following command to see the available values:', 'The above command generates the following output in the terminal:', 'Rich can render a ', ' with guide lines. A tree is ideal for displaying a file structure, or any other hierarchical data.', 'The labels of the tree can be simple text or anything else Rich can render. Run the following for a demonstration:', 'This generates the following output:', 'See the ', ' example for a script that displays a tree view of any directory, similar to the linux ', ' command.', 'Rich can render content in neat ', "" with equal or optimal width. Here's a very basic clone of the (MacOS / Linux) "", ' command which displays a directory listing in columns:', 'The following screenshot is the output from the ', ' which displays data pulled from an API in columns:', 'Rich can render ', ' and does a reasonable job of translating the formatting to the terminal.', 'To render markdown import the ', "" class and construct it with a string containing markdown code. Then print it to the console. Here's an example:"", 'This will produce output something like the following:', 'Rich uses the ', ' library to implement ', '. Usage is similar to rendering markdown; construct a ', "" object and print it to the console. Here's an example:"", 'This will produce the following output:', 'Rich can render ', ' which are easier to read and show more code than standard Python tracebacks. You can set Rich as the default traceback handler so all uncaught exceptions will be rendered by Rich.', ""Here's what it looks like on OSX (similar on Linux):"", 'All Rich renderables make use of the ', ', which you can also use to implement your own Rich content.', 'See also ', ' for a command line application powered by Rich. Syntax highlight code, render markdown, display CSVs in tables, and more, directly from the command prompt.', ""See also Rich's sister project, "", ', which you can use to build sophisticated User Interfaces in the terminal.', 'For some examples of projects using Rich, see the ', ' on ', '.', 'Would you like to add your own project to the gallery? You can! Follow ', '.', '\n      Rich is a Python library for rich text and beautiful formatting in the terminal.\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n        ', '\n      ', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', '\n          ', '\n          ', '\n        ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n        ', '\n    ', '\n      ', '\n    '])"
content
"(['Textualize/rich', 'Name already in use', 'Rich Library', 'Rich CLI', 'Textual', 'Projects using Rich', 'rich', 'renderables'], ['\n        Rich is a Python library for rich text and beautiful formatting in the terminal.\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', ' ', '\n', '\n', '\n', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', '\n• ', 'Rich is a Python library for ', ' text and beautiful formatting in the terminal.', 'The ', ' makes it easy to add color and style to terminal output. Rich can also render pretty tables, progress bars, markdown, syntax highlighted source code, tracebacks, and more — out of the box.', 'For a video introduction to Rich see ', ' by ', '.', 'See what ', '.', 'Rich works with Linux, OSX, and Windows. True color / emoji works with new Windows Terminal, classic terminal is limited to 16 colors. Rich requires Python 3.7 or later.', 'Rich works with ', ' with no additional configuration required.', 'Install with ', ' or your favorite PyPI package manager.', 'Run the following to test Rich output on your terminal:', 'To effortlessly add rich output to your application, you can import the ', ' method, which has the same signature as the builtin Python function. Try this:', 'Rich can be installed in the Python REPL, so that any data structures will be pretty printed and highlighted.', 'For more control over rich terminal content, import and construct a ', ' object.', 'The Console object has a ', ' method which has an intentionally similar interface to the builtin ', "" function. Here's an example of use:"", 'As you might expect, this will print ', ' to the terminal. Note that unlike the builtin ', ' function, Rich will word-wrap your text to fit within the terminal width.', 'There are a few ways of adding color and style to your output. You can set a style for the entire output by adding a ', "" keyword argument. Here's an example:"", 'The output will be something like the following:', ""That's fine for styling a line of text at a time. For more finely grained styling, Rich renders a special markup which is similar in syntax to "", "". Here's an example:"", 'You can use a Console object to generate sophisticated output with minimal effort. See the ', ' docs for details.', 'Rich has an ', ' function which can produce a report on any Python object, such as class, instance, or builtin.', 'See the ', ' for details.', 'Rich contains a number of builtin ', ' you can use to create elegant output in your CLI and help you debug your code.', 'Click the following headings for details:', 'The Console object has a ', ' method which has a similar interface to ', "", but also renders a column for the current time and the file and line which made the call. By default Rich will do syntax highlighting for Python structures and for repr strings. If you log a collection (i.e. a dict or a list) Rich will pretty print it so that it fits in the available space. Here's an example of some of these features."", 'The above produces the following output:', 'Note the ', ' argument, which outputs a table containing the local variables where the log method was called.', 'The log method could be used for logging to the terminal for long running applications such as servers, but is also a very nice debugging aid.', 'You can also use the builtin ', "" to format and colorize output from Python's logging module. Here's an example of the output:"", ""To insert an emoji in to console output place the name between two colons. Here's an example:"", 'Please use this feature wisely.', 'Rich can render flexible ', ' with unicode box characters. There is a large variety of formatting options for borders, styles, cell alignment etc.', 'The animation above was generated with ', ' in the examples directory.', ""Here's a simpler table example:"", 'This produces the following output:', 'Note that console markup is rendered in the same way as ', ' and ', '. In fact, anything that is renderable by Rich may be included in the headers / rows (even other tables).', 'The ', "" class is smart enough to resize columns to fit the available width of the terminal, wrapping text as required. Here's the same example, with the terminal made smaller than the table above:"", 'Rich can render multiple flicker-free ', ' bars to track long-running tasks.', 'For basic usage, wrap any sequence in the ', "" function and iterate over the result. Here's an example:"", ""It's not much harder to add multiple progress bars. Here's an example taken from the docs:"", ""The columns may be configured to show any details you want. Built-in columns include percentage complete, file size, file speed, and time remaining. Here's another example showing a download in progress:"", 'To try this out yourself, see ', ' which can download multiple URLs simultaneously while displaying progress.', 'For situations where it is hard to calculate progress, you can use the ', "" method which will display a 'spinner' animation and message. The animation won't prevent you from using the console as normal. Here's an example:"", 'This generates the following output in the terminal.', 'The spinner animations were borrowed from ', '. You can select a spinner by specifying the ', ' parameter. Run the following command to see the available values:', 'The above command generates the following output in the terminal:', 'Rich can render a ', ' with guide lines. A tree is ideal for displaying a file structure, or any other hierarchical data.', 'The labels of the tree can be simple text or anything else Rich can render. Run the following for a demonstration:', 'This generates the following output:', 'See the ', ' example for a script that displays a tree view of any directory, similar to the linux ', ' command.', 'Rich can render content in neat ', "" with equal or optimal width. Here's a very basic clone of the (MacOS / Linux) "", ' command which displays a directory listing in columns:', 'The following screenshot is the output from the ', ' which displays data pulled from an API in columns:', 'Rich can render ', ' and does a reasonable job of translating the formatting to the terminal.', 'To render markdown import the ', "" class and construct it with a string containing markdown code. Then print it to the console. Here's an example:"", 'This will produce output something like the following:', 'Rich uses the ', ' library to implement ', '. Usage is similar to rendering markdown; construct a ', "" object and print it to the console. Here's an example:"", 'This will produce the following output:', 'Rich can render ', ' which are easier to read and show more code than standard Python tracebacks. You can set Rich as the default traceback handler so all uncaught exceptions will be rendered by Rich.', ""Here's what it looks like on OSX (similar on Linux):"", 'All Rich renderables make use of the ', ', which you can also use to implement your own Rich content.', 'See also ', ' for a command line application powered by Rich. Syntax highlight code, render markdown, display CSVs in tables, and more, directly from the command prompt.', ""See also Rich's sister project, "", ', which you can use to build sophisticated User Interfaces in the terminal.', 'For some examples of projects using Rich, see the ', ' on ', '.', 'Would you like to add your own project to the gallery? You can! Follow ', '.', '\n      Rich is a Python library for rich text and beautiful formatting in the terminal.\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n        ', '\n      ', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', '\n          ', '\n          ', '\n        ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n        ', '\n    ', '\n      ', '\n    '])"
