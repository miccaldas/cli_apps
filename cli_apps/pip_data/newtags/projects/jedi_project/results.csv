content
"(['davidhalter/jedi', 'Name already in use', 'Jedi - an awesome autocompletion, static analysis and refactoring library for Python'], ['\n        Awesome autocompletion, static analysis and refactoring library for python\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'Jedi is a static analysis tool for Python that is typically used in\nIDEs/editors plugins. Jedi has a focus on autocompletion and goto\nfunctionality. Other features include refactoring, code search and finding\nreferences.', 'Jedi has a simple API to work with. There is a reference implementation as a\n', '. Autocompletion in your\nREPL is also possible, IPython uses it natively and for the CPython REPL you\ncan install it. Jedi is well tested and bugs should be rare.', 'Jedi can currently be used with the following editors/projects:', 'and many more!', 'There are a few language servers that use Jedi:', 'Here are some pictures taken from ', ':', 'Completion for almost anything:', 'Documentation:', 'Get the latest version from ', '\n(master branch should always be kind of stable/working).', 'Docs are available at ', '. Pull requests with enhancements\nand/or fixes are awesome and most welcome. Jedi uses ', '.', 'If you want to stay ', ' with releases, please ', ' to this\nmailing list: ', '. To subscribe you can\nsimply send an empty email to ', '.', 'You can file issues and questions in the issue tracker\n<', '>. Alternatively you can also ask on\n', ' with\nthe label ', '.', '.', ""Jedi's features are listed here:\n"", '.', 'You can run Jedi on Python 3.6+ but it should also\nunderstand code that is older than those versions. Additionally you should be\nable to use ', '\nvery well.', 'Tips on how to use Jedi efficiently can be found ', '.', 'You can find a comprehensive documentation for the\n', '.', 'There are the following commands:', 'The returned objects are very powerful and are really all you might need.', 'Jedi is a dependency of IPython. Autocompletion in IPython with Jedi is\ntherefore possible without additional configuration.', 'Here is an ', ' how REPL completion\ncan look like.\nFor the ', ' shell you can enable tab completion in a ', '.', 'For a lot of forms of static analysis, you can try to use\n', '. It will return a list of names that you can\nthen filter and work with. There is also a way to list the syntax errors in a\nfile: ', '.', 'Jedi supports the following refactorings:', 'There is support for module search with ', ', and project\nsearch for ', '. The way to search is either by providing a\nname like ', ' or by using dotted syntax like ', '. Additionally you\ncan provide the API type like ', '. There are also the\nfunctions ', ' and ', '.', ""There's a pretty good and extensive "", '.', 'The test suite uses ', ':', 'If you want to test only a specific Python version (e.g. Python 3.8), it is as\neasy as:', 'For more detailed information visit the ', '.', 'Thanks a lot to all the\n', '!', '\n      Awesome autocompletion, static analysis and refactoring library for python\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n        ', '\n      ', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'Vim (', ', ', ', ', ', ', ')', ' (via ', ')', 'Emacs (', ', ', ', ', ', ', ', ', ')', 'Sublime Text (', ' [ST2 + ST3], ', ' [only ST3])', "" (Not sure if it's actually working)"", ' version 4.13+ supports it natively, you have to enable it, though.  [', ']', ' (', ')', ' (with support for GObject Introspection)', 'Gedit (', ')', ' - Web Debugger', ' has ', ' (currently unmaintained)', ' (fork from python-language-server)', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n                ', '\n              ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n        ', '\n    ', '\n      ', '\n    '])"
