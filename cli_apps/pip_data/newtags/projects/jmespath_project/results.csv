content
"(['jmespath/jmespath.py', 'Name already in use'], ['\n        JMESPath is a query language for JSON.\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'JMESPath (pronounced ""james path"") allows you to declaratively specify how to\nextract elements from a JSON document.', 'For example, given this document:', 'The jmespath expression ', ' will return ""baz"".', 'JMESPath also supports:', 'Referencing elements in a list.  Given the data:', 'The expression: ', ' will return ""one"".\nYou can also reference all the items in a list using the ', '\nsyntax:', 'The expression: ', ' will return [""one"", ""two""].\nNegative indexing is also supported (-1 refers to the last element\nin the list).  Given the data above, the expression\n', ' will return ""two"".', 'The ', ' can also be used for hash types:', 'The expression: ', ' will return [""one"", ""two""].', 'You can install JMESPath from pypi with:', 'The ', ' library has two functions\nthat operate on python data structures.  You can use ', '\nand give it the jmespath expression and the data:', 'Similar to the ', ' module, you can use the ', ' function\nto compile the JMESPath expression and use this parsed expression\nto perform repeated searches:', ""This is useful if you're going to use the same jmespath expression to\nsearch multiple documents.  This avoids having to reparse the\nJMESPath expression each time you search a new document."", 'You can provide an instance of ', ' to control how\na JMESPath expression is evaluated.  The most common scenario for\nusing an ', ' instance is if you want to have ordered output\nof your dict keys.  To do this you can use either of these options:', 'The JMESPath language has numerous\n', ', but it is\nalso possible to add your own custom functions.  Keep in mind that\ncustom function support in jmespath.py is experimental and the API may\nchange based on feedback.', '\nYou can submit proposals\n', '.', 'To create custom functions:', 'Below are a few examples:', 'Again, if you come up with useful functions that you think make\nsense in the JMESPath language (and make sense to implement in all\nJMESPath libraries, not just python), please let us know at\n', '.', ""If you'd like to learn more about the JMESPath language, you can check out\nthe "", '.  Also check\nout the ', ' for\nexamples of more complex jmespath queries.', 'The grammar is specified using ABNF, as described in\n', '.\nYou can find the most up to date\n', '.', 'You can read the full\n', '.', 'In addition to the unit tests for the jmespath modules,\nthere is a ', ' directory that contains\n.json files with test cases.  This allows other implementations\nto verify they are producing the correct output.  Each json\nfile is grouped by feature.', 'Join us on our ', '\nif you want to chat or if you have any questions.', '\n      JMESPath is a query language for JSON.\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'Create a subclass of ', '.', 'Create a method with the name ', '.', 'Apply the ', ' decorator that indicates\nthe expected types of the function arguments.', 'Provide an instance of your subclass in a ', ' object.', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n        ', '\n    '])"
