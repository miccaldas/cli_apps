content
"(['pyramid_debugtoolbar', 'tab', 'must'], ["" provides a useful debug toolbar while you're\ndeveloping a "", ' application.', ""The toolbar is a blatant rip-off of Michael van Tellingen's\n"", "" (which itself was derived from Rob Hudson's\n"", ').  It also includes a lightly sanded down version of\nthe Werkzeug debugger code by Armin Ronacher and team.', 'Install using pip, e.g. (within a virtualenv):', 'Once the ', ' is installed, you must use the\n', "" mechanism to include it into your Pyramid project's\nconfiguration:"", ""Alternately, you may activate the toolbar by changing your application's\n"", ' file by adding it to the ', ' list:', 'Warning', 'The debug toolbar should never be enabled in a production\nenvironment or on a machine with its Pyramid HTTP port exposed directly to\nthe internet; it allows arbitrary code execution from only semi-trusted\nsources when configured poorly.', 'Once Pyramid is restarted, the toolbar will be available to inspect requests\nand responses by the application by visiting the ', ' URL\n(note the trailing slash). For example, if your application is available at\n', ' then you may visit\n', ' to inspect the requests.', 'For any HTML responses generated by the application, a link to the toolbar\nfor the current page will be available in the upper right corner, provided\nthe response contains a closing ', ' tag.', 'If an exception is unhandled by the Pyramid application, the toolbar will\ncatch it and render an HTML page with a traceback and an interactive debugger\nthat can be used to dive into the stack and execute arbitrary Python\nexpressions to inspect the state of the system.', 'A URL leading to a debugging page for each exception raised by your\napplication will additionally be logged to the console.', 'Settings can be used to control the operation of the toolbar. These settings\nare typically specified in the Pyramid ""app"" section of the Pyramid ', '\nfile.', ""If the request's "", ' is not in this list,\nthe toolbar will not be displayed and the exception handler will not be\nactive.  Default value is ', '.  Note that each of the\nvalues in the list can be a hostmask, e.g., ', '.', 'This should be a list if setup is done in Python or, if defined in a Paste\n', ' file, a single-line list of IP addresses/hostmasks separated by\nspaces.  For example:', 'To enable access from any host, use the hostmask ', '.', ""The debugtoolbar will use Pyramid's default\n"", "" mechanism to extend the toolbar's\ninternal Pyramid application with custom logic. This is a good spot to add\ncustom panels, affect static assets used by the toolbar, or add custom urls."", 'Within the ', ' the application registry may be accessed as\n', '.', 'Default is ', '. If set to ', ' the debugtoolbar will only be\ninjected into the response in case a exception is raised. If the response is\nprocessed without exception, the returned html code is not changed by the\ndebugtoolbar at all. This option allows the developer to use the toolbar for\ndebugging purposes without interfering with successful responses.', 'Inspection of requests is still possible by visiting the toolbar manually\nat ', '.', 'A list of panel names.  Defaults to a list of all panels known by\n', ', as documented in\n', '.  If this is spelled in an ', ' file, it\noverrides the default list and should be a space- or newline-separated\nsequence of panel names. This setting should be mainly used to override\nthe default order of panels. For example:', 'For compatibility with older versions of the toolbar, the panel\nname may also be the dotted Python path to the panel class. For example,\n', '.', 'A list of panel names.  Defaults to a list of all global panels known by\n', ', as documented in\n', '.  If this is spelled in an ', ' file, it\noverrides the default list and should be a space- or newline-separated\nsequence of panel names. For example:', 'For compatibility with older versions of the toolbar, the panel\nname may also be the dotted Python path to the panel class. For example,\n', '.', ""The debug toolbar won't be shown and no data will be recorded if the\n"", ' variable starts with any of the prefixes listed in this setting.\nIf configuration is done via an ', ' file, the prefixes should be separated\nby carriage returns. For example:', 'If configuration is done via Python, the setting should be a list.', 'By default, the setting is ', '.', 'A space-separated list of panel names (see\n', '). This list of panels\nwill have their ', '\nstate set to ', ' always. For example:', 'This will set the listed panels to always be active. Instead, in order\nto enable per-request activation see ', '.', 'When developing custom panels for an application, the following settings may\nbe used to influence how debugtoolbar itself behaves and what information it\nlogs.', 'You can control the level of printed exceptions from ', ' by\nadding a custom logger configuration.', 'Since version 1.0.5 ', ' offers custom\nauthorization mechanism to control toolbar feature on per-request basis.\nUsing the ', '\ndirective, you can specify your own function to control whether toolbar\nfunctionality is enabled or not.', 'Note', 'Custom authorization is performed ', ' a successful IP address\ncheck when the ', ' settings option is used.', 'Note', 'Custom authorization does not have an effect on the\n', ' static route and ', '\ncontents will still be accessible.', 'Most panels do not support any extra active features and need not be\nexplicitly activated. However, some panels support an optional\n', ' state in which they\nwill do some extra work. For example, the\n', '\nwill not do profiling of your requests unless it has been activated.', 'This activation can be controlled on a per-request basis by setting the\n', ' cookie to a comma-separated list of panel names.\nFor example:', 'A panel name is defined by the\n', ' attribute of each\ndebug panel.', 'The cookie may also be set via the web interface in the ', ' tab but,\nremember, since it is a cookie it must be set on the exact HTTP client you\nare using or the panel will not be active for the request.', ""When you include the toolbar in your application, a floating Pyramid logo\nwill appear on the upper right over your application's HTML:"", 'If you click on the Pyramid logo, a new target window will open with your\ncurrent request highlighted and all of your configured panels loaded.', 'These are the default toolbar panels:', 'Displays versions of all installed Python software as well as the Python\nversion and platform itself.', ""Displays your Pyramid application's deployment settings, i.e., "", '.', 'See also', 'For realtime customization of the toolbar and its panels, use the ', ' ', ' in the navigation bar.\nSee ', '.', 'Displays HTTP request and response headers for the current page.', 'Displays objects attached to the request of the current page and the WSGI\nenvironment.', 'Displays the renderings performed by Pyramid for the current page.', 'Displays ingress and egress session data if the session was accessed during\nthe request.', 'Displays a status message indicating whether or not the session was accessed\nduring the request.', 'Advanced functionality: If the panel is enabled, the ingress and egress session\ndata will always be tracked and displayed, regardless of the session having\nbeen accessed during the request. This advanced usage is offered to aid\ndevelopers in complex debugging scenarios. Most users will not need this\nenabled.', 'There are two ways to enable the extended session display used by the\n', ' panel.', 'Displays messages logged by the current page.', 'Displays timing information, and, if enabled, Python profiling information\nfor the current page.  When it is red, only timing will be done and\nno profiling information.', 'There are two ways to enable the internal profiler used by the\n', ' panel.', 'Displays the routes currently configured in your application.', 'Displays the tween chain for your application, and whether they were defined\nexplicitly or implicitly.', 'Displays SQL queries made by SQLAlchemy by the current page along with timing\ninformation.', 'Provides the ability to re-run the query using the ""SELECT"" link.', 'Provides the ability to get more detail about the query using the ""EXPLAIN""\nlink.', ""Displays a rendering of the data available in Pyramid's configuration\nintrospection system (available in Pyramid 1.3+ only)."", 'The ', ' tab allows for realtime customization of the toolbar and its panels.', 'See also', ""To display your Pyramid application's settings, see "", '.', 'An internal profiler can be enabled under the ', ' tab in the navigation bar.\nClick the red ', ' mark to enable the profiler.\nWhen the mark is a green ', ', the request will be profiled and profiling information will be gathered and displayed on the ', ' panel output.\nSee ', '.', 'When an exception is raised and the ', ' setting is\n', ' or ', ', Pyramid presents a pretty traceback page.  If the\nsetting value is ', ', you will be able to examine locals in each frame\nin the traceback and execute code in the context of each frame.  Read the\ninstructions on the exception page for more information.', 'When a response is returned to Pyramid that has a redirect status code (301,\n302, etc.) and the ', ' setting is ', ',\nPyramid presents an interim page with a link to the target of the redirect.\nYou can use the toolbar on the redirect source page, then when finished, use\nthe link to continue to the target page.', 'In some cases it can be desirable to add a custom panel to the toolbar to\ndisplay some application specific data. There are two steps for adding such a\npanel to an application: writing the panel, and adding it to your application\nsettings.', 'Before writing the panel, you should understand how pyramid_debugtoolbar\ninteracts with your application in its two phase process.', 'pyramid_debugtoolbar wraps every request within a Pyramid ""tween"" via\n', '.  This tween allows the toolbar to record data during\nthe original request (Phase 1) and injects a link to the toolbar interface\ninto the rendered Pyramid web pages.  The data is displayed during a secondary\nrequest to the toolbar (Phase 2).', 'Phase 1 - The original request', 'When pyramid_debugtoolbar is enabled, it can start tracking data on the original\nrequest.  This involves calling the following panel methods in-band with the\noriginal request:', 'These methods are used to store and manipulate a ', ' variable on each\npanel during this original request.  Typically ', ' is first generated\non the ', ' method.  It is important to note that the ', ' and\nevent variables available to these methods refer to the original request.', 'Phase 2 - The debugtoolbar request', 'When the ""/_debug_toolbar/{request_id}"" is accessed, the history of the original\nrequest_id and its associated panels are accessed.  Variables such as ', '\nthat were generated during the original request are made available for further\nprocessing.  The ', ' variable is injected into the template for display.', 'The following panel methods are called or accessed on the debugtoolbar request:', 'The panel can be created as part of your application or as a standalone\npackage. The easiest way to write a panel is to subclass from the\n', ' class. Here is the code for a\nsample panel:', 'After inheriting from the ', ' class, you have to define a few\nmethods and attributes on your panel:', 'When creating a new panel, some of these methods ', ' be subclassed, while\nothers can rely on the base class.', 'Once you define the panel it should be registered with the toolbar by defining\nan ', ' function that calls\n', ' and then having the user\nadd the panel to their ', ' setting in their app.', 'The source code for the standard debugpanel ', ' is a good\nstarting point for inspiration.', 'The ', ' and ', ' methods may use the\n', ' dictionary to introspect and work with other panels\nthat captured data for the original request. The dictionary keys are the names\nof other panels and the values are the panel instances.', 'Once your panel is ready, you can simply add its package name to the\n', ' setting on your application configuration file:', 'It may be the case that your panel needs to instrument the parent application\nwith extra settings or configuration. For example, maybe it wants to wrap the\nsession factory with its own. To make this happen, your ', ' that\nis included from ', ' should use\n', ' to register a callable\nthat can modify the parent application.', 'In this example, you may also register a new toolbar panel that cares about\n', ' to determine when the session was created\nduring the request lifecycle.', ' automatically loads several Javascript and CSS\nlibraries that you can take advantage of when writing custom panels.', 'If you wish to enable tablesorting, add the CSS class ""pDebugSortable"" to the\nopening ', ' tag.  For example:', 'The following is a listing of panels and user interface extras for\n', ' created by its users. These extras are unofficial and\nnot supported by the Pylons Project. To add your contribution, please submit a\npull request to update this documentation.', 'Visit ', ' to download development or\ntagged versions.', 'Visit ', ' to report bugs.', '\n          ', '\n          ', ' |', '\n          ', ' |', ' »', 'Under the ', ' tab in the navigation bar, click the red\n', ' mark. When there is a green ', ' mark, each\nrequest will have the ingress and egress data tracked and displayed on the\n', ' panel output regardless of the session being accessed\nduring the request. When there is a red ', ' mark, only requests\nwhich accessed the session will have the ingress and egress data displayed.\nSee ', '.', 'Send a ', ' cookie on a per-request basis.\nThis panel\'s name for cookie activation is ""session"".\nSee ', '.', 'Under the ', ' tab in the navigation bar, click the red ', ' mark.\nWhen there is a green ', ' mark, each request will be profiled and profiling information will be gathered and displayed on the ', ' panel output.\nSee ', '.', 'Send a ', ' cookie on a per-request basis.\nThis panel\'s name for cookie activation is ""performance"".\nSee ', '.', 'Bootstrap [', ']', 'jQuery [', ']', 'jquery.tablesorter [', ']', '\n', '\n', '\n', '\n', '\n', '\n', '\n          ', '\n          ', ' |', '\n          ', ' |', ' »'])"
