content
"(['goose3/goose3', 'Name already in use', 'Goose3 - Article Extractor'], ['\n        A Python 3 compatible version of goose ', '\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'Goose was originally an article extractor written in Java that has most\nrecently (Aug2011) been converted to a ', '.', 'This is a complete rewrite in Python. The aim of the software is to\ntake any news article or article-type web page and not only extract what\nis the main body of the article but also all meta data and most probable\nimage candidate.', 'Goose will try to extract the following information:', 'The Python version was originally rewritten by:', ""If you find Goose useful or have issues please drop me a line. I'd love\nto hear how you're using it or what features should be improved."", 'Goose is licensed by Gravity.com under the Apache 2.0 license; see the\nLICENSE file for more details.', 'On-line documentation is available on\n', ' which contains more in-depth\ndocumentation.', 'To install using pip, with all supported languages, which will install additional dependencies:', 'To install the minimal version:', 'To install just the dependencies for a single language:', 'To install from source:', 'There are two ways to pass configuration to goose. The first one is to\npass goose a Configuration() object. The second one is to pass a\nconfiguration dict.', 'For instance, if you want to change the userAgent used by Goose just\npass:', 'Switching parsers: Goose can now be used with lxml html parser or lxml\nsoup parser. By default the html parser is used. If you want to use the\nsoup parser pass it in the configuration dict :', 'One can also set Goose to be more lenient on network exceptions. To turn off\nthrowing all network exceptions, set the strict configuration setting to false:', 'To turn on image fetching, one can simply enable it using the enable_image_fetching\nconfiguration property:', 'For example, scraping a Spanish content page with correct meta language\ntags:', ""Some pages don't have correct meta language tags, you can force it using\nconfiguration :"", ""Passing {'use_meta_language': False, 'target_language':'es'} will\nforcibly select Spanish."", 'Some users want to use Goose for Chinese content. Chinese word\nsegmentation is way more difficult to deal with than occidental\nlanguages. Chinese needs a dedicated StopWord analyser that need to be\npassed to the config object.', 'In order to use Goose in Arabic you have to use the StopWordsArabic\nclass.', 'In order to use Goose in Korean you have to use the StopWordsKorean\nclass.', '\n      A Python 3 compatible version of goose ', '\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'Main text of an article', 'Main image of article', 'Any YouTube/Vimeo movies embedded in article', 'Meta Description', 'Meta tags', 'Xavier Grangier', 'Video html5 tag extraction', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    ', '\n        ', '\n    '])"
content
"(['goose3/goose3', 'Name already in use', 'Goose3 - Article Extractor'], ['\n        A Python 3 compatible version of goose ', '\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'Goose was originally an article extractor written in Java that has most\nrecently (Aug2011) been converted to a ', '.', 'This is a complete rewrite in Python. The aim of the software is to\ntake any news article or article-type web page and not only extract what\nis the main body of the article but also all meta data and most probable\nimage candidate.', 'Goose will try to extract the following information:', 'The Python version was originally rewritten by:', ""If you find Goose useful or have issues please drop me a line. I'd love\nto hear how you're using it or what features should be improved."", 'Goose is licensed by Gravity.com under the Apache 2.0 license; see the\nLICENSE file for more details.', 'On-line documentation is available on\n', ' which contains more in-depth\ndocumentation.', 'To install using pip, with all supported languages, which will install additional dependencies:', 'To install the minimal version:', 'To install just the dependencies for a single language:', 'To install from source:', 'There are two ways to pass configuration to goose. The first one is to\npass goose a Configuration() object. The second one is to pass a\nconfiguration dict.', 'For instance, if you want to change the userAgent used by Goose just\npass:', 'Switching parsers: Goose can now be used with lxml html parser or lxml\nsoup parser. By default the html parser is used. If you want to use the\nsoup parser pass it in the configuration dict :', 'One can also set Goose to be more lenient on network exceptions. To turn off\nthrowing all network exceptions, set the strict configuration setting to false:', 'To turn on image fetching, one can simply enable it using the enable_image_fetching\nconfiguration property:', 'For example, scraping a Spanish content page with correct meta language\ntags:', ""Some pages don't have correct meta language tags, you can force it using\nconfiguration :"", ""Passing {'use_meta_language': False, 'target_language':'es'} will\nforcibly select Spanish."", 'Some users want to use Goose for Chinese content. Chinese word\nsegmentation is way more difficult to deal with than occidental\nlanguages. Chinese needs a dedicated StopWord analyser that need to be\npassed to the config object.', 'In order to use Goose in Arabic you have to use the StopWordsArabic\nclass.', 'In order to use Goose in Korean you have to use the StopWordsKorean\nclass.', '\n      A Python 3 compatible version of goose ', '\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'Main text of an article', 'Main image of article', 'Any YouTube/Vimeo movies embedded in article', 'Meta Description', 'Meta tags', 'Xavier Grangier', 'Video html5 tag extraction', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    ', '\n        ', '\n    '])"
