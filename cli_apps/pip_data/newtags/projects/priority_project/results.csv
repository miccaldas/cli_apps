content
"(['python-hyper/priority', 'Name already in use', 'Priority: A HTTP/2 Priority Implementation', 'blocked', 'may', 'will'], ['\n        A pure-Python implementation of the HTTP/2 priority tree.\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'Priority is a pure-Python implementation of the priority logic for HTTP/2, set\nout in ', '. This logic allows for clients\nto express a preference for how the server allocates its (limited) resources to\nthe many outstanding HTTP requests that may be running over a single HTTP/2\nconnection.', 'Specifically, this Python implementation uses a variant of the implementation\nused in the excellent ', ' project. This original implementation is also the\ninspiration for ', "" priority implementation, and generally produces a\nvery clean and even priority stream. The only notable changes from H2O's\nimplementation are small modifications to allow the priority implementation to\nwork cleanly as a separate implementation, rather than being embedded in a\nHTTP/2 stack directly."", 'While priority information in HTTP/2 is only a suggestion, rather than an\nenforceable constraint, where possible servers should respect the priority\nrequests of their clients.', 'Priority has a simple API. Streams are inserted into the tree: when they are\ninserted, they may optionally have a weight, depend on another stream, or\nbecome an exclusive dependent of another stream.', 'Once streams are inserted, the stream priorities can be requested. This allows\nthe server to make decisions about how to allocate resources.', 'The tree in this algorithm acts as a gate. Its goal is to allow one stream\n""through"" at a time, in such a manner that all the active streams are served as\nevenly as possible in proportion to their weights.', 'This is handled in Priority by iterating over the tree. The tree itself is an\niterator, and each time it is advanced it will yield a stream ID. This is the\nID of the stream that should next send data.', 'This looks like this:', ""If each stream only sends when it is 'ungated' by this mechanism, the server\nwill automatically be emitting stream data in conformance to RFC 7540."", 'If for any reason a stream is unable to proceed (for example, it is blocked on\nHTTP/2 flow control, or it is waiting for more data from another service), that\nstream is ', '. The ', ' should be informed that the stream is\nblocked so that other dependent streams get a chance to proceed. This can be\ndone by calling the ', ' method of the tree with the stream ID that is\ncurrently unable to proceed. This will automatically update the tree, and it\nwill adjust on the fly to correctly allow any streams that were dependent on\nthe blocked one to progress.', 'For example:', 'When a stream goes from being blocked to being unblocked, call the ', '\nmethod to place it back into the sequence. Both the ', ' and ', '\nmethods are idempotent and safe to call repeatedly.', 'Additionally, the priority of a stream may change. When it does, the\n', ' method can be used to update the tree in the wake of that\nchange. ', ' has the same signature as ', ', but\napplies only to streams already in the tree.', 'A stream can be entirely removed from the tree by calling ', '.\nNote that this is not idempotent. Further, calling ', ' and then\nre-adding it ', ' cause a substantial change in the shape of the priority\ntree, and ', ' cause the iteration order to change.', 'Priority is made available under the MIT License. For more details, see the\nLICENSE file in the repository.', 'Priority is maintained by Cory Benfield, with contributions from others. For\nmore details about the contributors, please see CONTRIBUTORS.rst in the\nrepository.', '\n      A pure-Python implementation of the HTTP/2 priority tree.\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    '])"
content
"(['python-hyper/priority', 'Name already in use', 'Priority: A HTTP/2 Priority Implementation', 'blocked', 'may', 'will'], ['\n        A pure-Python implementation of the HTTP/2 priority tree.\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'Priority is a pure-Python implementation of the priority logic for HTTP/2, set\nout in ', '. This logic allows for clients\nto express a preference for how the server allocates its (limited) resources to\nthe many outstanding HTTP requests that may be running over a single HTTP/2\nconnection.', 'Specifically, this Python implementation uses a variant of the implementation\nused in the excellent ', ' project. This original implementation is also the\ninspiration for ', "" priority implementation, and generally produces a\nvery clean and even priority stream. The only notable changes from H2O's\nimplementation are small modifications to allow the priority implementation to\nwork cleanly as a separate implementation, rather than being embedded in a\nHTTP/2 stack directly."", 'While priority information in HTTP/2 is only a suggestion, rather than an\nenforceable constraint, where possible servers should respect the priority\nrequests of their clients.', 'Priority has a simple API. Streams are inserted into the tree: when they are\ninserted, they may optionally have a weight, depend on another stream, or\nbecome an exclusive dependent of another stream.', 'Once streams are inserted, the stream priorities can be requested. This allows\nthe server to make decisions about how to allocate resources.', 'The tree in this algorithm acts as a gate. Its goal is to allow one stream\n""through"" at a time, in such a manner that all the active streams are served as\nevenly as possible in proportion to their weights.', 'This is handled in Priority by iterating over the tree. The tree itself is an\niterator, and each time it is advanced it will yield a stream ID. This is the\nID of the stream that should next send data.', 'This looks like this:', ""If each stream only sends when it is 'ungated' by this mechanism, the server\nwill automatically be emitting stream data in conformance to RFC 7540."", 'If for any reason a stream is unable to proceed (for example, it is blocked on\nHTTP/2 flow control, or it is waiting for more data from another service), that\nstream is ', '. The ', ' should be informed that the stream is\nblocked so that other dependent streams get a chance to proceed. This can be\ndone by calling the ', ' method of the tree with the stream ID that is\ncurrently unable to proceed. This will automatically update the tree, and it\nwill adjust on the fly to correctly allow any streams that were dependent on\nthe blocked one to progress.', 'For example:', 'When a stream goes from being blocked to being unblocked, call the ', '\nmethod to place it back into the sequence. Both the ', ' and ', '\nmethods are idempotent and safe to call repeatedly.', 'Additionally, the priority of a stream may change. When it does, the\n', ' method can be used to update the tree in the wake of that\nchange. ', ' has the same signature as ', ', but\napplies only to streams already in the tree.', 'A stream can be entirely removed from the tree by calling ', '.\nNote that this is not idempotent. Further, calling ', ' and then\nre-adding it ', ' cause a substantial change in the shape of the priority\ntree, and ', ' cause the iteration order to change.', 'Priority is made available under the MIT License. For more details, see the\nLICENSE file in the repository.', 'Priority is maintained by Cory Benfield, with contributions from others. For\nmore details about the contributors, please see CONTRIBUTORS.rst in the\nrepository.', '\n      A pure-Python implementation of the HTTP/2 priority tree.\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    '])"
