content
"(['rocky/python-xdis', 'Name already in use', 'pydisasm'], ['\n        Python cross-version bytecode library and disassembler\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', ' ', ' ', ' ', '\n', 'A Cross-Python bytecode disassembler, bytecode/wordcode and magic-number manipulation library/package.', 'The Python ', ' module allows you to disassemble bytecode from the same\nversion of Python that you are running on. But what about bytecode from\ndifferent versions?', 'That\'s what this package is for. It can ""marshal load"" Python\nbytecodes from different versions of Python. The command-line routine\n', ' will show disassembly output using the most modern Python\ndisassembly conventions.', ""Also, if you need to modify and write bytecode, the routines here can\nbe of help. There are routines to pack and unpack the read-only tuples\nin Python's Code type. For interoperability between Python 2 and 3 we\nprovide our own versions of the Code type, and we provide routines to\nreduce the tedium in writing a bytecode file."", 'This package also has an extensive knowledge of Python bytecode magic\nnumbers, including Pypy and others, and how to translate from\nsys.sys_info major, minor, and release numbers to the corresponding\nmagic value.', 'So If you want to write a cross-version assembler, or a\nbytecode-level optimizer this package may also be useful. In addition\nto the kinds of instruction categorization that dis` offers, we have\nadditional categories for things that would be useful in such a\nbytecode optimizer.', 'The programs here accept bytecodes from Python version 1.0 to 3.10 or\nso. The code requires Python 2.4 or later and has been tested on\nPython running lots of Python versions.', 'When installing, except for the most recent versions of Python, use\nthe Python egg or wheel that matches that version, e.g. ', ', ', "".\nOf course for versions that pre-date wheel's, like Python 2.6, you will have to use eggs."", 'To install older versions for from source in git use the branch\n', ' for Python versions from 2.4 to 2.7,\n', ' for Python versions from 3.1 to 3.2,\n', ' for Python versions from 3.3 to 3.5. The master\nbranch handles Python 3.6 and later.', 'The standard Python routine:', 'A GNU makefile is also provided so ', ' (possibly as root or\nsudo) will do the steps above.', 'A GNU makefile has been added to smooth over setting running the right\ncommand, and running tests from fastest to slowest.', 'If you have ', ' installed, you can see the list of all tasks\nincluding tests via ', '.', 'Run', 'for usage help.', 'xdis also provides some support as a drop in replacement for the\nthe Python library ', '\nmodule. This is may be desirable when you want to use the improved API\nfrom Python 3.4 or later from an earlier Python version.', 'For example:', ""There may some small differences in output produced for formatted\ndisassembly or how we show compiler flags. We expect you'll\nfind the "", ' output more informative though.', '\n      Python cross-version bytecode library and disassembler\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n        ', '\n      ', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', ' : Python Bytecode Deparsing', ' : Python Bytecode Deparsing for Python 3.7 and 3.8', ' : Python Bytecode Assembler', ' : Python Bytecode Interpreter written in Python', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    ', '\n        ', '\n    ', '\n        ', '\n    ', '\n        ', '\n    '])"
content
"(['rocky/python-xdis', 'Name already in use', 'pydisasm'], ['\n        Python cross-version bytecode library and disassembler\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', ' ', ' ', ' ', '\n', 'A Cross-Python bytecode disassembler, bytecode/wordcode and magic-number manipulation library/package.', 'The Python ', ' module allows you to disassemble bytecode from the same\nversion of Python that you are running on. But what about bytecode from\ndifferent versions?', 'That\'s what this package is for. It can ""marshal load"" Python\nbytecodes from different versions of Python. The command-line routine\n', ' will show disassembly output using the most modern Python\ndisassembly conventions.', ""Also, if you need to modify and write bytecode, the routines here can\nbe of help. There are routines to pack and unpack the read-only tuples\nin Python's Code type. For interoperability between Python 2 and 3 we\nprovide our own versions of the Code type, and we provide routines to\nreduce the tedium in writing a bytecode file."", 'This package also has an extensive knowledge of Python bytecode magic\nnumbers, including Pypy and others, and how to translate from\nsys.sys_info major, minor, and release numbers to the corresponding\nmagic value.', 'So If you want to write a cross-version assembler, or a\nbytecode-level optimizer this package may also be useful. In addition\nto the kinds of instruction categorization that dis` offers, we have\nadditional categories for things that would be useful in such a\nbytecode optimizer.', 'The programs here accept bytecodes from Python version 1.0 to 3.10 or\nso. The code requires Python 2.4 or later and has been tested on\nPython running lots of Python versions.', 'When installing, except for the most recent versions of Python, use\nthe Python egg or wheel that matches that version, e.g. ', ', ', "".\nOf course for versions that pre-date wheel's, like Python 2.6, you will have to use eggs."", 'To install older versions for from source in git use the branch\n', ' for Python versions from 2.4 to 2.7,\n', ' for Python versions from 3.1 to 3.2,\n', ' for Python versions from 3.3 to 3.5. The master\nbranch handles Python 3.6 and later.', 'The standard Python routine:', 'A GNU makefile is also provided so ', ' (possibly as root or\nsudo) will do the steps above.', 'A GNU makefile has been added to smooth over setting running the right\ncommand, and running tests from fastest to slowest.', 'If you have ', ' installed, you can see the list of all tasks\nincluding tests via ', '.', 'Run', 'for usage help.', 'xdis also provides some support as a drop in replacement for the\nthe Python library ', '\nmodule. This is may be desirable when you want to use the improved API\nfrom Python 3.4 or later from an earlier Python version.', 'For example:', ""There may some small differences in output produced for formatted\ndisassembly or how we show compiler flags. We expect you'll\nfind the "", ' output more informative though.', '\n      Python cross-version bytecode library and disassembler\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n        ', '\n      ', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', ' : Python Bytecode Deparsing', ' : Python Bytecode Deparsing for Python 3.7 and 3.8', ' : Python Bytecode Assembler', ' : Python Bytecode Interpreter written in Python', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    ', '\n        ', '\n    ', '\n        ', '\n    ', '\n        ', '\n    '])"
