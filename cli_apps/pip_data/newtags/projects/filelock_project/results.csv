content
"(['filelock'], ['This package contains a single module, which implements a platform independent file lock in Python, which provides a\nsimple way of inter-process communication:', ' a ', ' to lock the file you want to write to, instead create a separate\n', ' file as shown above.', 'Perhaps you are looking for something like:', 'the ', ' 3rd party library,', 'for Windows the ', ' module in the standard\nlibrary,', 'for UNIX the ', ' module in the standard library,', 'the ', ' 3rd party library.', ' is available via PyPI, so you can pip install it:', 'A ', ' is used to indicate another process of your application that a resource or\nworking directory is currently used. To do so, create a ', ' first:', 'The lock object supports multiple ways for acquiring the lock, including the ones used to acquire standard Python thread\nlocks:', 'The ', ' method accepts also a ', ' parameter. If the lock cannot be\nacquired within ', ' seconds, a ', ' exception is raised:', 'The lock objects are recursive locks, which means that once acquired, they will not block on successive lock requests:', 'All log messages by this library are made using the ', ', under the ', ' name. On how to control\ndisplaying/hiding that please consult the\n', '. E.g. to hide these\nmessages you can use:', 'The ', ' is platform dependent while the ', '\nis not. Use the ', ' if all instances of your application are running on the same\nplatform and a ', ' otherwise.', 'The ', ' only watches the existence of the lock file. This makes it ultra\nportable, but also more prone to dead locks if the application crashes. You can simply delete the lock file in such\ncases.', 'This library currently does not support asyncio. Weâ€™d recommend adding an asyncio variant though if someone can make a\npull request for it, ', '.', 'Contributions are always welcome, please make sure they pass all tests before creating a pull request. This module is\nhosted on ', '. If you have any questions or suggestions, donâ€™t hesitate\nto open a new issue ðŸ˜Š. Thereâ€™s no bad question, just a missed opportunity to learn more.', '\n'])"
