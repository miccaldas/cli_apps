content
"(['Twine', 'you'], ['Twine is a utility for ', ' Python packages to ', ' and other\n', '. It provides build system independent uploads of source and\nbinary ', ' for both new and existing\n', '.', 'The goal of Twine is to improve PyPI interaction by improving\nsecurity and testability.', 'The biggest reason to use Twine is that it securely authenticates\nyou to PyPI over HTTPS using a verified connection, regardless of\nthe underlying Python version. Meanwhile, ', '\nwill only work correctly and securely if your build system, Python\nversion, and underlying operating system are configured properly.', 'Secondly, Twine encourages you to build your distribution files. ', ' only allows you to upload a package as a final step after\nbuilding with ', ' or ', ', within the same command\ninvocation. This means that you cannot test the exact file you’re going to\nupload to PyPI to ensure that it works before uploading it.', 'Finally, Twine allows you to pre-sign your files and pass the\n', ' files into the command line invocation (', '). This enables you\nto be assured that you’re typing your ', ' passphrase into ', '\nitself and not anything else, since ', ' will be the one directly\nexecuting ', '.', 'Verified HTTPS connections', 'Uploading doesn’t require executing ', 'Uploading files that have already been created, allowing testing of\ndistributions before release', 'Supports uploading any packaging format (including ', ')', 'Create some distributions in the normal way:', 'Upload to ', ' and verify things look right:', 'Twine will prompt for your username and password.', 'Upload to ', ':', 'Done!', 'Note', 'Like many other command line tools, Twine does not show any characters when\nyou enter your password.', 'If you’re using Windows and trying to paste your username, password, or\ntoken in the Command Prompt or PowerShell, ', ' and ', '\nwon’t work. Instead, you can use “Edit > Paste” from the window menu, or\nenable “Use Ctrl+Shift+C/V as Copy/Paste” in “Properties”. This is a\n', ' with Python’s\n', ' module.', 'More documentation on using Twine to upload packages to PyPI is in\nthe ', '.', 'Uploads one or more distributions to a repository.', 'Checks whether your distribution’s long description will render correctly on\nPyPI.', 'Pre-register a name with a repository before uploading a distribution.', 'Warning', 'Pre-registration is ', ', so the ', ' command is\nonly necessary if you are using a different repository that requires it. See\n', ' (the software running on PyPI) for more details.', 'Twine can read repository configuration from a ', ' file, either in your\nhome directory, or provided with the ', ' option. For details on\nwriting and using ', ', see the ', ' in the Python\nPackaging User Guide.', 'Twine also supports configuration via environment variables. Options passed on\nthe command line will take precedence over options set via environment\nvariables. Definition via environment variable is helpful in environments where\nit is not convenient to create a ', ' file (for example,\non a CI/build server).', ' - the username to use for authentication to the\nrepository.', ' - the password to use for authentication to the\nrepository.', ' - the repository configuration, either defined as a\nsection in ', ' or provided as a full URL.', ' - the repository URL to use.', ' - custom CA certificate to use for repositories with\nself-signed or untrusted certificates.', ' - Do not interactively prompt for username/password\nif the required credentials are missing.', 'Twine can be configured to use a proxy by setting environment variables.\nFor example, to use a proxy for just the ', ' command,\nwithout ', '-ing it for other tools:', 'For more information, see the Requests documentation on\n', ' and\n', ' , and\n', '.', 'Instead of typing in your password every time you upload a distribution, Twine\nallows storing a username and password securely using ', '.\nKeyring is installed with Twine but for some systems (Linux mainly) may\nrequire ', '.', 'Once Twine is installed, use the ', ' program to set a username and\npassword to use for each repository to which you may upload.', 'For example, to set a username and password for PyPI:', 'and enter the password when prompted.', 'For a different repository, replace the URL with the relevant repository\nURL. For example, for Test PyPI, use ', '.', 'The next time you run ', ', it will prompt you for a username, and then\nget the appropriate password from Keyring.', 'Note', 'If you are using Linux in a headless environment (such as on a\nserver) you’ll need to do some additional steps to ensure that Keyring can\nstore secrets securely. See ', '.', 'In most cases, simply not setting a password with ', ' will allow Twine\nto fall back to prompting for a password. In some cases, the presence of\nKeyring will cause unexpected or undesirable prompts from the backing system.\nIn these cases, it may be desirable to disable Keyring altogether. To disable\nKeyring, run:', 'See ', ' for discussion and background.', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n'])"
content
"(['Twine', 'you'], ['Twine is a utility for ', ' Python packages to ', ' and other\n', '. It provides build system independent uploads of source and\nbinary ', ' for both new and existing\n', '.', 'The goal of Twine is to improve PyPI interaction by improving\nsecurity and testability.', 'The biggest reason to use Twine is that it securely authenticates\nyou to PyPI over HTTPS using a verified connection, regardless of\nthe underlying Python version. Meanwhile, ', '\nwill only work correctly and securely if your build system, Python\nversion, and underlying operating system are configured properly.', 'Secondly, Twine encourages you to build your distribution files. ', ' only allows you to upload a package as a final step after\nbuilding with ', ' or ', ', within the same command\ninvocation. This means that you cannot test the exact file you’re going to\nupload to PyPI to ensure that it works before uploading it.', 'Finally, Twine allows you to pre-sign your files and pass the\n', ' files into the command line invocation (', '). This enables you\nto be assured that you’re typing your ', ' passphrase into ', '\nitself and not anything else, since ', ' will be the one directly\nexecuting ', '.', 'Verified HTTPS connections', 'Uploading doesn’t require executing ', 'Uploading files that have already been created, allowing testing of\ndistributions before release', 'Supports uploading any packaging format (including ', ')', 'Create some distributions in the normal way:', 'Upload to ', ' and verify things look right:', 'Twine will prompt for your username and password.', 'Upload to ', ':', 'Done!', 'Note', 'Like many other command line tools, Twine does not show any characters when\nyou enter your password.', 'If you’re using Windows and trying to paste your username, password, or\ntoken in the Command Prompt or PowerShell, ', ' and ', '\nwon’t work. Instead, you can use “Edit > Paste” from the window menu, or\nenable “Use Ctrl+Shift+C/V as Copy/Paste” in “Properties”. This is a\n', ' with Python’s\n', ' module.', 'More documentation on using Twine to upload packages to PyPI is in\nthe ', '.', 'Uploads one or more distributions to a repository.', 'Checks whether your distribution’s long description will render correctly on\nPyPI.', 'Pre-register a name with a repository before uploading a distribution.', 'Warning', 'Pre-registration is ', ', so the ', ' command is\nonly necessary if you are using a different repository that requires it. See\n', ' (the software running on PyPI) for more details.', 'Twine can read repository configuration from a ', ' file, either in your\nhome directory, or provided with the ', ' option. For details on\nwriting and using ', ', see the ', ' in the Python\nPackaging User Guide.', 'Twine also supports configuration via environment variables. Options passed on\nthe command line will take precedence over options set via environment\nvariables. Definition via environment variable is helpful in environments where\nit is not convenient to create a ', ' file (for example,\non a CI/build server).', ' - the username to use for authentication to the\nrepository.', ' - the password to use for authentication to the\nrepository.', ' - the repository configuration, either defined as a\nsection in ', ' or provided as a full URL.', ' - the repository URL to use.', ' - custom CA certificate to use for repositories with\nself-signed or untrusted certificates.', ' - Do not interactively prompt for username/password\nif the required credentials are missing.', 'Twine can be configured to use a proxy by setting environment variables.\nFor example, to use a proxy for just the ', ' command,\nwithout ', '-ing it for other tools:', 'For more information, see the Requests documentation on\n', ' and\n', ' , and\n', '.', 'Instead of typing in your password every time you upload a distribution, Twine\nallows storing a username and password securely using ', '.\nKeyring is installed with Twine but for some systems (Linux mainly) may\nrequire ', '.', 'Once Twine is installed, use the ', ' program to set a username and\npassword to use for each repository to which you may upload.', 'For example, to set a username and password for PyPI:', 'and enter the password when prompted.', 'For a different repository, replace the URL with the relevant repository\nURL. For example, for Test PyPI, use ', '.', 'The next time you run ', ', it will prompt you for a username, and then\nget the appropriate password from Keyring.', 'Note', 'If you are using Linux in a headless environment (such as on a\nserver) you’ll need to do some additional steps to ensure that Keyring can\nstore secrets securely. See ', '.', 'In most cases, simply not setting a password with ', ' will allow Twine\nto fall back to prompting for a password. In some cases, the presence of\nKeyring will cause unexpected or undesirable prompts from the backing system.\nIn these cases, it may be desirable to disable Keyring altogether. To disable\nKeyring, run:', 'See ', ' for discussion and background.', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n'])"
