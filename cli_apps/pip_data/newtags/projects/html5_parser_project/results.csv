content
"(['html5-parser', 'html', 'transport_encoding=None', 'namespace_elements=False', ""treebuilder=u'lxml'"", 'fallback_encoding=None', 'keep_doctype=True', 'maybe_xhtml=False', 'return_root=True', 'line_number_attr=None', 'sanitize_names=True', 'stack_size=16384', 'fragment_context=None', '0.4.10', '0.4.10'], [' ', ' ', 'A fast implementation of the ', ' for Python. Parsing is done\nin C using a variant of the ', '. The gumbo parse tree is then\ntransformed into an ', ' tree, also in C, yielding parse\ntimes that can be ', ' of the html5lib parse times. That is a\nspeedup of ', '. This differs, for instance, from the gumbo python bindings,\nwhere the initial parsing is done in C but the transformation into the final\ntree is done in python.', 'On a Unix-y system, with a working C99 compiler, simply run:', 'It is important that lxml is installed with the ', ' flag. This is\nbecause without it, lxml uses a static copy of libxml2. For html5-parser to\nwork it must use the same libxml2 implementation as lxml. This is only possible\nif libxml2 is loaded dynamically.', 'You can setup html5-parser to run from a source checkout as follows:', 'On Windows, installation is a little more involved. There is a 200 line script\nthat is used to install html5-parser and all its dependencies on the windows\ncontinuous integration server. Using that script installation can be done by\nrunning the following commands in a Visual Studio 2015 Command prompt:', 'This will install all dependencies and html5-parser in the ', '\nsub-directory. You will need to add ', ' to ', ' and\n', ' to ', '. Or copy the files\ninto your system python’s directories.', 'To use html5-parser in your code, after installing it simply do:', 'See the ', ' function documentation for more details on\nparsing. To learn how to use the parsed lxml tree in your program, see\nthe ', '.', 'html5-parser has the ability to parse XHTML documents as well. It will\npreserve namespace information even for namespaces not defined in the HTML 5\nspec. You can ask it to treat the input html as possibly XHTML by using the\n', ' parameter to the ', ' function. For example:', 'becomes', 'This is useful when try to parse a XHTML document that is not well-formed and\nso cannot be parsed by a regular XML parser.', 'The API of html5-parser is a single function, ', '.', 'Parse the specified ', ' and return the parsed representation.', 'The type of tree to return. Note that only the lxml treebuilder is fast, as all\nother treebuilders are implemented in python, not C. Supported values are:', 'Before doing the actual comparison, let me say that html5lib is a great\nproject. It was a pioneer of HTML 5 parsing and I have used it myself for many\nyears. However, being written in pure python, it cannot help but be slow.', 'There is a benchmark script named ', ' that\ncompares the parse times for parsing a large (~ 5.7MB) HTML document in\nhtml5lib and html5-parser. The results on my system (using python 3) show a\nspeedup of ', '. The output from the script on my system is:', 'There is further potential for speedup. Currently the gumbo subsystem uses\nits own data structures to store parse results and these are converted to\nlibxml2 data structures in a second pass after parsing completes. By modifying gumbo\nto use libxml2 data structures directly, there could be significant speed and\nmemory usage gains.', 'html5lib has truly horrible handling of namespaces. There is even a source-code\nfile in it named ', '. Compare the result of parsing and pretty\nprinting the following simple HTML fragment (pretty printing is done via lxml in both\ncases).', 'With ', ':', 'With ', ':', 'While both outputs are technically correct, the output produced via\nhtml5-parser is much easier to read and much closer to what an actual human\nwould write. In particular, notice the unnecessary use of prefixes in\nthe html5lib output, as well as the ugly ', ' anonymous prefix for the svg\nnamespace.', 'html5-parser also has the ability to optionally preserve namespace information\neven for namespaces not defined in the HTML 5 standard. See the ', '\nsection for more information.', 'The HTML parser is based on the ', ' which has undergone a Google\nsecurity review and been tested on 2.5 billion pages from the Google cache. In\naddition, html5-parser passes (almost) all the tests from the html5lib test\nsuite.', 'Finally, html5-parser is compiled with ', ' and\nthe test suite, consisting of thousands of tests, is run using the address and\nundefined behavior sanitizers. Continuous integration testing is done on three\nmajor OSes and four different compilers.', '\n', '\n', ' – The HTML to be parsed. Can be either bytes or a unicode string.', ' – If specified, assume the passed in bytes are in this encoding.\nIgnored if ', ' is unicode.', ' – Add XML namespaces when parsing so that the resulting tree is XHTML.', ' – ', '\n', '  – the default, and fastest', '  – tree of lxml.html.HtmlElement, same speed as lxml\n(new in ', ')', 'etree (the python stdlib ', ')', 'dom (the python stdlib ', ')', ' – BeautifulSoup,\nwhich must be installed or it will raise an ', '\n', ' – If no encoding could be detected, then use this encoding.\nDefaults to an encoding based on system locale.', ' – Keep the <DOCTYPE> (if any).', ' – Useful when it is unknown if the HTML to be parsed is\nactually XHTML. Changes the HTML 5 parsing algorithm to be more\nsuitable for XHTML. In particular handles self-closed CDATA elements.\nSo a ', ' or ', ' in the HTML will not completely break\nparsing. Also preserves namespaced tags and attributes even for namespaces\nnot supported by HTML 5 (this works only with the ', ' and ', '\ntreebuilders).\nNote that setting this also implicitly sets ', '.', ' – If True, return the root node of the document, otherwise\nreturn the tree object for the document.', ' – The optional name of an attribute used to store the line number\nof every element. If set, this attribute will be added to each element with the\nelement’s line number.', ' – Ensure tag and attributes contain only ASCII alphanumeric\ncharactes, underscores, hyphens and periods. This ensures that the resulting\ntree is also valid XML. Any characters outside this set are replaced by\nunderscores. Note that this is not strictly HTML 5 spec compliant, so turn it\noff if you need strict spec compliance.', ' – The initial size (number of items) in the stack. The\ndefault is sufficient to avoid memory allocations for all but the\nlargest documents.', ' – the tag name under which to parse the HTML when the html\nis a fragment. Common choices are ', ' or ', '. To use SVG or MATHML tags\nprefix the tag name with ', ' or ', ' respectively. Note that currently\nusing a non-HTML fragment_context is not supported. New in ', '.'])"
