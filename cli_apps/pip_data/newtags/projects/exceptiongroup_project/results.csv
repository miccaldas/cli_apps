content
"(['agronholm/exceptiongroup', 'Name already in use'], ['\n        Backport of PEP 654 (exception groups)\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'This is a backport of the ', ' and ', ' classes from\nPython 3.11.', 'It contains the following:', 'If this package is imported on Python 3.11 or later, the built-in implementations of the\nexception group classes are used instead, ', "" is not monkey patched\nand the exception hook won't be installed."", 'See the ', ' for more information on exception groups.', 'Due to the lack of the ', ' syntax introduced by ', ' in earlier Python\nversions, you need to use ', ' to catch exceptions that are\npotentially nested inside an exception group. This function returns a context manager\nthat calls the given handler for any exceptions matching the sole argument.', 'The argument to ', ' must be a dict (or any ', ') where each key is either\nan exception class or an iterable of exception classes. Each value must be a callable\nthat takes a single positional argument. The handler will be called at most once, with\nan exception group as an argument which will contain all the exceptions that are any\nof the given types, or their subclasses. The exception group may contain nested groups\ncontaining more matching exceptions.', 'Thus, the following Python 3.11+ code:', 'would be written with this backport like this:', ': Just like with ', ', you cannot handle ', ' or\n', ' with ', '.', 'To make exception groups render properly when an unhandled exception group is being\nprinted out, this package does two things when it is imported on any Python version\nearlier than 3.11:', 'If ', ' is found to be set to something else than the default when\n', ' is imported, no monkeypatching is done at all.', 'To prevent the exception hook and patches from being installed, set the environment\nvariable ', ' to ', '.', 'Normally, the monkey patching applied by this library on import will cause exception\ngroups to be printed properly in tracebacks. But in cases when the monkey patching is\nblocked by a third party exception hook, or monkey patching is explicitly disabled,\nyou can still manually format exceptions using the special versions of the ', '\nfunctions, like ', ', listed at the top of this page. They work just\nlike their counterparts in the ', ' module, except that they use a separately\npatched subclass of ', ' to perform the rendering.', 'Particularly in cases where a library installs its own exception hook, it is recommended\nto use these special versions to do the actual formatting of exceptions/tracebacks.', '\n      Backport of PEP 654 (exception groups)\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'The  ', ' and ', '\nclasses', 'A utility function (', ') for catching exceptions possibly\nnested in an exception group', 'Patches to the ', ' class that properly formats exception groups\n(installed on import)', 'An exception hook that handles formatting of exception groups through\n', ' (installed on import)', 'Special versions of some of the functions from the ', ' module, modified to\ncorrectly handle exception groups even when monkey patching is disabled, or blocked by\nanother custom exception hook:', '\n', 'The  ', ' class is monkey patched to store extra\ninformation about exception groups (in ', ') and properly format them (in\n', ')', 'An exception hook is installed at ', ', provided that no other hook is\nalready present. This hook causes the exception to be formatted using\n', ' rather than the built-in rendered.', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    '])"
content
"(['agronholm/exceptiongroup', 'Name already in use'], ['\n        Backport of PEP 654 (exception groups)\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'This is a backport of the ', ' and ', ' classes from\nPython 3.11.', 'It contains the following:', 'If this package is imported on Python 3.11 or later, the built-in implementations of the\nexception group classes are used instead, ', "" is not monkey patched\nand the exception hook won't be installed."", 'See the ', ' for more information on exception groups.', 'Due to the lack of the ', ' syntax introduced by ', ' in earlier Python\nversions, you need to use ', ' to catch exceptions that are\npotentially nested inside an exception group. This function returns a context manager\nthat calls the given handler for any exceptions matching the sole argument.', 'The argument to ', ' must be a dict (or any ', ') where each key is either\nan exception class or an iterable of exception classes. Each value must be a callable\nthat takes a single positional argument. The handler will be called at most once, with\nan exception group as an argument which will contain all the exceptions that are any\nof the given types, or their subclasses. The exception group may contain nested groups\ncontaining more matching exceptions.', 'Thus, the following Python 3.11+ code:', 'would be written with this backport like this:', ': Just like with ', ', you cannot handle ', ' or\n', ' with ', '.', 'To make exception groups render properly when an unhandled exception group is being\nprinted out, this package does two things when it is imported on any Python version\nearlier than 3.11:', 'If ', ' is found to be set to something else than the default when\n', ' is imported, no monkeypatching is done at all.', 'To prevent the exception hook and patches from being installed, set the environment\nvariable ', ' to ', '.', 'Normally, the monkey patching applied by this library on import will cause exception\ngroups to be printed properly in tracebacks. But in cases when the monkey patching is\nblocked by a third party exception hook, or monkey patching is explicitly disabled,\nyou can still manually format exceptions using the special versions of the ', '\nfunctions, like ', ', listed at the top of this page. They work just\nlike their counterparts in the ', ' module, except that they use a separately\npatched subclass of ', ' to perform the rendering.', 'Particularly in cases where a library installs its own exception hook, it is recommended\nto use these special versions to do the actual formatting of exceptions/tracebacks.', '\n      Backport of PEP 654 (exception groups)\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'The  ', ' and ', '\nclasses', 'A utility function (', ') for catching exceptions possibly\nnested in an exception group', 'Patches to the ', ' class that properly formats exception groups\n(installed on import)', 'An exception hook that handles formatting of exception groups through\n', ' (installed on import)', 'Special versions of some of the functions from the ', ' module, modified to\ncorrectly handle exception groups even when monkey patching is disabled, or blocked by\nanother custom exception hook:', '\n', 'The  ', ' class is monkey patched to store extra\ninformation about exception groups (in ', ') and properly format them (in\n', ')', 'An exception hook is installed at ', ', provided that no other hook is\nalready present. This hook causes the exception to be formatted using\n', ' rather than the built-in rendered.', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    '])"
