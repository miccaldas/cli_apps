content
"(['sarugaku/shellingham', 'Name already in use', 'Shellingham: Tool to Detect Surrounding Shell', 'your application should almost never do this to your user'], ['\n        Tool to Detect Surrounding Shell\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'Shellingham detects what shell the current Python executable is running in.', "" pokes around the process's running environment to determine\nwhat shell it is run in. It returns a 2-tuple:"", ' is raised if ', ' fails to detect the\nsurrounding shell.', ""Remember, your application's user is not necessarily using a shell.\nShellingham raises "", ' if there is no shell to detect,\nbut ', '.', 'A practical approach to this is to wrap ', ' in a try block, and\nprovide a sane default on failure', 'There are a few choices for you to choose from.', ""Here's a simple implementation to provide a default shell"", '\n      Tool to Detect Surrounding Shell\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'The shell name, always lowercased.', 'The command used to run the shell.', 'The shell name is always lowercased.', 'On Windows, the shell name is the name of the executable, minus the file\nextension.', 'The POSIX standard mandates the environment variable ', ' to refer to\n""the user\'s preferred command language interpreter"". This is always available\n(even if the user is not in an interactive session), and likely the correct\nchoice to launch an interactive sub-shell with.', 'A command ', ' is almost guaranteed to exist, likely at ', ', since\nseveral POSIX tools rely on it. This should be suitable if you want to run a\n(possibly non-interactive) script.', 'All versions of DOS and Windows have an environment variable ', '.\nThis can always be used to launch a usable command prompt (e.g. cmd.exe on\nWindows).', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n      ', '\n    ', '\n        ', '\n    '])"
content
"(['sarugaku/shellingham', 'Name already in use', 'Shellingham: Tool to Detect Surrounding Shell', 'your application should almost never do this to your user'], ['\n        Tool to Detect Surrounding Shell\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', 'Shellingham detects what shell the current Python executable is running in.', "" pokes around the process's running environment to determine\nwhat shell it is run in. It returns a 2-tuple:"", ' is raised if ', ' fails to detect the\nsurrounding shell.', ""Remember, your application's user is not necessarily using a shell.\nShellingham raises "", ' if there is no shell to detect,\nbut ', '.', 'A practical approach to this is to wrap ', ' in a try block, and\nprovide a sane default on failure', 'There are a few choices for you to choose from.', ""Here's a simple implementation to provide a default shell"", '\n      Tool to Detect Surrounding Shell\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'The shell name, always lowercased.', 'The command used to run the shell.', 'The shell name is always lowercased.', 'On Windows, the shell name is the name of the executable, minus the file\nextension.', 'The POSIX standard mandates the environment variable ', ' to refer to\n""the user\'s preferred command language interpreter"". This is always available\n(even if the user is not in an interactive session), and likely the correct\nchoice to launch an interactive sub-shell with.', 'A command ', ' is almost guaranteed to exist, likely at ', ', since\nseveral POSIX tools rely on it. This should be suitable if you want to run a\n(possibly non-interactive) script.', 'All versions of DOS and Windows have an environment variable ', '.\nThis can always be used to launch a usable command prompt (e.g. cmd.exe on\nWindows).', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n            ', '\n          ', '\n        ', '\n    '])"
