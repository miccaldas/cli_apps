content
"(['rsalmei/about-time', 'Name already in use', 'about-time', 's', 'ms', 'µs', 'ns', 'k', 'M', 'G', 'T'], ['\n        A cool helper for tracking time and throughput of code blocks, with beautiful human friendly renditions.\n      ', '\n        Use Git or checkout with SVN using the web URL.\n    ', '\n      Work fast with our official CLI.\n      ', '.\n    ', '\n                Please\n                ', '\n                to use Codespaces.\n              ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', '\n    If nothing happens, ', ' and try again.\n  ', 'Your codespace will open once ready.', 'There was a problem preparing your codespace, please try again.', '\n', '\n', '\n', '\n', '\n', '\n', 'Did you ever need to measure the duration of an operation? Yeah, this is easy.', 'But how to:', 'Yes, it can get tricky! More interesting details about ', ' and ', '.\n', ""If you'd tried to do it without these magic, it would probably get messy and immensely pollute the code being instrumented."", 'I have the solution, behold!', 'This ', ' function prints:', 'How cool is that? ', 'You can also get the duration in seconds if needed:', 'But ', "" is way better, isn't it? The same with "", ' and ', '!', 'So, ', ' measures code blocks, both time and throughput, and converts them to beautiful human friendly representations! ', 'Just install with pip:', ""There are three modes of operation: context manager, callable and throughput. Let's dive in."", 'This way you can nicely wrap any amount of code.', 'In this mode, there are the basic fields ', ' and ', '.', 'This way you have a nice one liner, and do not need to increase the indent of your code.', 'In this mode, there is an additional field ', ', with the return of the callable.', 'If the callable have params, you can use a ', ' or (', ' new) simply send them:', 'This way ', "" also extracts the number of iterations, and with the measured duration it calculates the throughput of the whole loop! It's especially useful with generators, which do not have length."", 'In this mode, there are the additional fields ', ', ', ', ', ' and ', '.', 'Cool tricks under the hood:', 'According to the SI standard, there are 1000 bytes in a ', '.\n', 'There is another standard called IEC that has 1024 bytes in a ', ', but this is only useful when measuring things that are naturally a power of two, e.g. a stick of RAM.', 'Be careful to not render IEC quantities with SI scaling, which would be incorrect. But I still support it, if you really want to ;)', 'By default, this will use SI, ', ' divisor, and ', ' between values and scales/units. SI uses prefixes: ', ', ', ', ', ', ', ', ', ', ', ', ', ', and ', '.', 'These are the optional features:', 'To change them, just use the properties:', 'For example, to enable spaces between scales/units:', ""I've used just one key concept in designing the human duration features: cleanliness."", ' is more meaningful than ', ', and ', ' is much nicer than ', '.', 'So what I do is: round values to at most two decimal places (three significant digits), and find the best scale unit to represent them, minimizing resulting values smaller than ', '. The search for the best unit considers even the rounding been applied!', ' does not end up as ', ' (truncate) nor ', ' (bad unit), but is auto-upgraded to the next unit ', '!', 'The ', ' units change seamlessly from nanoseconds to hours.', 'It feels much more humane, humm? ;)', 'Some examples:', ""I've made the "", ' with a similar logic. It is funny how much trickier ""throughput"" is to the human brain!', 'If something took ', ' to handle ', "", how fast did it go? It's not obvious..."", ""It doesn't help even if we divide the duration by the number of items, "", "", which still does not mean much. How fast was that? We can't say.\n"", 'How many items did we do per time unit?', 'Oh, we just need to invert it, so ', ', there it is! ', 'To make some sense of it we need to multiply that by 3600 (seconds in an hour) to get ', ', which is much better, and again by 24 (hours in a day) to finally get ', ""!! Now we know how fast that process was! \\o/ As you see, it's not easy at all."", 'The ', ' unit changes seamlessly from per-second, per-minute, per-hour, and per-day.\n', 'It also automatically inserts SI-prefixes, like k, M, and G. ', ' supports all versions of python, but in pythons >= ', ' it performs even better, with much higher resolution and smaller propagation of errors, thanks to the new ', '. In older versions, it uses ', ' as usual.', 'This software is licensed under the MIT License. See the LICENSE file in the top distribution directory for the full license text.', ""Maintaining an open source project is hard and time-consuming, and I've put much "", ' and effort into this.', ""If you've appreciated my work, you can back me up with a donation! Thank you "", '\n', '\n      A cool helper for tracking time and throughput of code blocks, with beautiful human friendly renditions.\n    ', '\n      ', '\n      ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', 'Explore', '\n  ', '\n  ', '\n  ', '\n  ', '\n', '\n      ', '\n      ', 'For', '\n  ', '\n  ', '\n  ', '\n  ', 'By Solution', '\n  ', '\n  ', '\n  ', 'Case Studies', '\n  ', '\n  ', '\n', '\n      ', '\n      ', '\n  ', '\n  ', 'Repositories', '\n  ', '\n  ', '\n  ', '\n', '\n    ', '\n', '\n  ', '\n', '\n    ', '\n  ', '\n  ', '\n', '\n  ', '\n', '\n  ', '\n', '\n        ', '\n      ', '\n            ', '  ', '\n          ', '\n  ', '\n        ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n                ', '              ', '\n  ', '\n  ', '\n  ', '\n\n', '\n\n', '\n\n', '\n  ', '\n  ', '\n            ', '\n          ', 'measure the duration of two or more blocks at the same time, including the whole duration?', 'instrument a code to cleanly retrieve durations in one line, to log or send to time series databases?', 'easily see human friendly durations in ', ' (seconds), ', ' (milliseconds), ', ' (microseconds) and even ', ' (nanoseconds)?', 'easily see human friendly counts with SI prefixes like ', ', ', ', ', ', ', ', etc?', 'measure the actual throughput of a block? (this is way harder, since it needs to measure both duration and number of iterations)', 'easily see human friendly throughputs in ""/second"", ""/minute"", ""/hour"" or even ""/day"", including SI prefixes?', 'you can use it even with generator expressions, anything that is iterable to python!', 'you can consume it not only in a ', ' loop, but also in { list | dict | set } comprehensions, ', 's, ', 's, ', 's, ', 's, ', 's, etc, thus any function that expects an iterator! ', 'the timer only starts when the first element is queried, so you can initialize whatever you need before entering the loop! ', 'the ', '/', ' and ', '/', ' fields are updated in ', ', so you can use them even inside the loop!', ' => use IEC instead of SI: ', ', ', ', ', ', ', ', ', ', ', ', ', ', ', ' (implies ', ');', ' => use ', ' divisor — if ', ' is not enabled, use prefixes: ', ', ', ', ', ', ', ', ', ', ', ', ', ', and ', "" (note the upper 'K');"", ' => include a space between values and scales/units everywhere: ', ' instead of ', ', ', ' instead of ', ', and ', ' instead of ', '.', 'values smaller than 60 seconds are always rendered as ""num.D[D]unit"", with one or two decimals;', 'from 1 minute onward it changes to ""H:MM:SS"".', '4.2.1: makes fixed precision actually gain more resolution, when going from a default 1 to 2 decimals', '4.2.0: support for fixed precision, useful when one needs output without varying lengths; official Python 3.11 support', '4.1.0: enable to cache features within closures, to improve performance for ', '4.0.0: new version, modeled after my Rust implementation in ', '; includes new global features, new objects for each operation, and especially, new simpler human friendly representations; supports Python 3.7+', '3.3.0: new interfaces for count_human and throughput_human; support more common Kbyte for base 2 (1024), leaving IEC one as an alternate', '3.2.2: support IEC kibibyte standard for base 2 (1024)', '3.2.1: support divisor in throughput_human', '3.2.0: both durations and throughputs now use 3 significant digits; throughputs now include SI-prefixes', '3.1.1: make ', ' and ', ' available for external use', '3.1.0: include support for parameters in callable mode; official support for python 3.8, 3.9 and 3.10', '3.0.0: greatly improved the counter/throughput mode, with a single argument and working in real time', '2.0.0: feature complete, addition of callable and throughput modes', '1.0.0: first public release, context manager mode', '\n              ', '\n              ', '\n            ', '\n          ', '\n          ', '\n        ', '\n          ', '\n          ', '\n        ', '\n          ', '\n          ', '\n        ', '\n            ', '\n              ', '\n          ', '\n            ', '\n              ', '\n          ', '\n        ', '\n    ', '\n        ', '\n    '])"
